_config.yml/script = title: Maximtop
_config.yml/script = "One-click IM Cloud Service Based on Mutil-Cloud Architecture"
_includes/footer.html/footer/div/p = Copyright
_includes/nav.html/nav/div/div/ul/li/a = About Us
_includes/nav.html/nav/div/div/ul/li/a = Download Center
_includes/nav.html/nav/div/div/ul/li/a = Contact Us
_includes/nfooter.html/footer/div/div/p = Business
_includes/nfooter.html/footer/div/div/p/a = Company Profile
_includes/nfooter.html/footer/div/div/p/a = Enterprise Cooperation
_includes/nfooter.html/footer/div/div/p = IM Cloud
_includes/nfooter.html/footer/div/div/p/a = Product Features
_includes/nfooter.html/footer/div/div/p/a = Pricing
_includes/nfooter.html/footer/div/div/p/a = Developer Center
_includes/nfooter.html/footer/div/div/p = Support
_includes/nfooter.html/footer/div/div/p/a = Running State Query
_includes/nfooter.html/footer/div/span = © 2019-2024 Maximtop
_includes/nfooter.html/footer/div/a = Beijing ICP No. 19033149
_includes/nfooter.html/footer/div/a = Beijing Public Network Security No. 11010502039228
_includes/nfooter.html/footer/div/a = Privacy Policy
_includes/nfooter.html/footer/div/a = Terms of Use
_includes/nhead.html/head/attr-content = One-click IM Public Cloud, One-click IM Private Cloud, One-click IM Proprietary Cloud, Quick Integration, Convenient and Professional
_includes/nhead.html/head/attr-content = Maximtop, IM SDK, Instant Messaging, IM Cloud, IM Cloud Service,
Mobile IM, Open Source IM, Enterprise IM, Chat Software, Mobile Customer Service, Online Customer Service, IM Business Scenario, APP Social,
Developer Service, Live Chatroom, Live Audio/Video, Audio/Video, Live Platform, Maximtop Anti-spam, Content Security
_includes/nhead.html/head/attr-content = Multi-Cloud Architecture, Private Cloud, One-click Deployment, One-click Installation, IM Private Cloud, Easy to Customize, Enable Private Cloud
_includes/nhead.html/head/attr-content = Global Connectivity, Overseas, Cross-Cluster Deployment, Global Data Center, Business Customization, IM Public Cloud, Made to Measure, Enable Proprietary Cloud
_includes/nhead.html/head/attr-content = Cloud Storage for Message, Multi-Device Synchronization, Message Roaming, Cloud Storage, Open Platform, App Client
_includes/nhead.html/head/title = Maximtop – Instant Messaging IM, One-Click & Multi-Cloud
_includes/snav.html/nav/div/div/p/span = Contact Business：
_includes/snav.html/nav/div/div/p/span = CN / EN
_includes/snav.html/nav/div/div/p/a = Login
_includes/snav.html/nav/div/div/p/a = Free Registration
_includes/snav.html/nav/div/ul/li/span/a = Products
_includes/snav.html/nav/div/ul/li/div/ul/li/p/a = Instant Messaging（IM）
_includes/snav.html/nav/div/ul/li/div/ul/li/p/a = Rich Text Message
_includes/snav.html/nav/div/ul/li/div/ul/li/p/a = Cloud Storage For Message
_includes/snav.html/nav/div/ul/li/div/ul/li/p/a = Open Platform
_includes/snav.html/nav/div/ul/li/div/ul/li/p/a = Value-added Extensions
_includes/snav.html/nav/div/ul/li/div/ul/li/p/a = Maximtop Push
_includes/snav.html/nav/div/ul/li/div/ul/li/p/a = Global Connectivity
_includes/snav.html/nav/div/ul/li/div/ul/li/p/a = Deployment Modes
_includes/snav.html/nav/div/ul/li/div/ul/li/p/a = Public Cloud
_includes/snav.html/nav/div/ul/li/div/ul/li/p/a = Private Cloud
_includes/snav.html/nav/div/ul/li/div/ul/li/p/a = Proprietary Cloud
_includes/snav.html/nav/div/ul/li/div/ul/li/p/a = Doucment Center
_includes/snav.html/nav/div/ul/li/div/ul/li/p/a = Demo Experience
_includes/snav.html/nav/div/ul/li/div/ul/li/p/a = Source and SDK
_includes/snav.html/nav/div/ul/li/div/ul/li/p/a = On-premise Deployment
_includes/snav.html/nav/div/ul/li/span/attr-href = https://github.com/maxim-top/maxims-bistro/blob/master/Maximtop open-source MTOS.md
_includes/snav.html/nav/div/ul/li/span/a = Open Source
_layouts/about.html/html/body/div/div/div/div/p = One-Click IM Private Cloud
_layouts/about.html/html/body/div/div/div/div/p = Self-defining, easy to customize, 10 minutes to setup, monthly payment🔥
_layouts/about.html/html/body/div/div/p = Beijing Maximtop Technology Co., Ltd. is a professional IM Cloud Service provider. By providing professional and easy-to-use IM SDK for enterprises and developers, sharing industry-leading cross-platform IM technology, we are committed to creating a collaborative and win-win IM ecosystem.
_layouts/about.html/html/body/div/div/p = Our team has over ten years of experience in IM industry, and has successfully launched the new generation of IM Cloud Services based-on multi-cloud architecture.
_layouts/about.html/html/body/div/div/p = With Maximtop IM, both Cloud Service and on-premise deployment can be configured with one-click via console, and smooth migration is provided natively, empower enterprises with professional and non-stop services at different stages of development.
_layouts/contact.html/html/body/div/div/div/div/p = Interested in our enterprise cooperation program?
_layouts/contact.html/html/body/div/div/div/div/p = Enterprise Cooperation will get you
_layouts/contact.html/html/body/div/div/div/div/p = Custom service features
_layouts/contact.html/html/body/div/div/div/div/p = Exclusive technical advisor
_layouts/contact.html/html/body/div/div/div/div/p = 24/7 technical support
_layouts/contact.html/html/body/div/div/div/div/p = Technical support for major events
_layouts/contact.html/html/body/div/div/div/div/p = Source opening and licensing
_layouts/contact.html/html/body/div/div/div/div/p/a = More >
_layouts/contact.html/html/body/div/div/div/div/p = Phone
_layouts/contact.html/html/body/div/div/div/div/p = Official email
_layouts/contact.html/html/body/div/div/div/div/p = Address
_layouts/contact.html/html/body/div/div/div/div/p/a = 4th Floor, B3 Building, Zhaowei Industry Park, No.14 Jiuxianqiao, Chaoyang District, Beijing
_layouts/contactiframe.html/html/body/div/form/div/attr-placeholder = Name *
_layouts/contactiframe.html/html/body/div/form/div/div = Name is required, please enter.
_layouts/contactiframe.html/html/body/div/form/div/attr-placeholder = Company *
_layouts/contactiframe.html/html/body/div/form/div/div = Company is required, please enter.
_layouts/contactiframe.html/html/body/div/form/div/attr-placeholder = Mobile number *
_layouts/contactiframe.html/html/body/div/form/div/div = Mobile number is required, please enter.
_layouts/contactiframe.html/html/body/div/form/div/attr-placeholder = Email *
_layouts/contactiframe.html/html/body/div/form/div/div = Email is required, please enter.
_layouts/contactiframe.html/html/body/div/form/div/attr-placeholder = Intended product *
_layouts/contactiframe.html/html/body/div/form/div/div = Intended product is required, please enter.
_layouts/contactiframe.html/html/body/div/form/attr-placeholder = Question and comment (optional)
_layouts/contactiframe.html/html/body/div/form/span = Contact us
_layouts/deploy.html/html/body/div/div/div/p = Multi-mode deployment
_layouts/deploy.html/html/body/div/div/div/p = Cloud-native technology, multi-cloud architecture, worry-free mode switching
_layouts/deploy.html/html/body/div/div/div/div/div/p = Exclusive resources, higher SLA than Public Cloud, Private Cloud-level data autonomy. Proprietary Cloud is professional user-oriented with flexible business customization.
_layouts/deploy.html/html/body/div/div/div/div/div/p = Maximtop Proprietary Cloud provides completely transparent and supervised resources and one-click deployment on Console. You can switch among deployment options anytime for worry-free migration.
_layouts/deploy.html/html/body/div/div/div/div/div/p = We will transfer the Cloud Service provider account to you or assist in Private Cloud migration, whenever you decide to turn back on-premise. For Public Cloud Business Edition, we can automatically synchronize your data and then one-click to migrate.
_layouts/deploy.html/html/body/div/div/div/div = Maxitop Proprietary Cloud will get you
_layouts/deploy.html/html/body/div/div/div/div/div/span = No limited registered users
_layouts/deploy.html/html/body/div/div/div/div/div/span = Free advanced features
_layouts/deploy.html/html/body/div/div/div/div/div/span = Stand-alone computing cluster
_layouts/deploy.html/html/body/div/div/div/div/div/span = Cloud-level SLA
_layouts/deploy.html/html/body/div/div/div/div/div/span = No limited devices
_layouts/deploy.html/html/body/div/div/div/div/div/span = 24-hour online technical support
_layouts/deploy.html/html/body/div/div/div/div/div/span = Nearly unlimited service calls
_layouts/deploy.html/html/body/div/div/div/div/div/span = Custom optimized connection access
_layouts/deploy.html/html/body/div/div/div/div = And more considerate services
_layouts/deploy.html/html/body/div/div/div/div/div/div/div/p = Better cost-effectiveness
_layouts/deploy.html/html/body/div/div/div/div/div/div/div/p = The most optimized high-performance service ensures cost performance, on-demand use, and linear pricing without tariff fluctuation.
_layouts/deploy.html/html/body/div/div/div/div/div/div/div/p/a = About pricing >>
_layouts/deploy.html/html/body/div/div/div/div/div/div/div/p = Quick integration
_layouts/deploy.html/html/body/div/div/div/div/div/div/div/p = Cross-platform SDK Floo, neat and elegant API, making integration very simple.
_layouts/deploy.html/html/body/div/div/div/div/div/div/div/p/a = View details >>
_layouts/deploy.html/html/body/div/div/div/div/div/div/div/p = Efficient and reliable
_layouts/deploy.html/html/body/div/div/div/div/div/div/div/p = Newly designed binary communication protocol with low traffic and delay, ensuring reliable and orderly delivery of messages.
_layouts/deploy.html/html/body/div/div/div/div/div/div/div/p = Stable and robust
_layouts/deploy.html/html/body/div/div/div/div/div/div/div/p = 10 million-scale concurrency, stable serving, and up to 99.99% SLA availability.
_layouts/deploy.html/html/body/div/div/div/div/div/p = One-click IM Proprietary Cloud
_layouts/deploy.html/html/body/div/div/div/div/div/p = Professional services, worry-free operation, and easy switching of underlying cloud services as your will
_layouts/deploy.html/html/body/div/div/div/div/div/p/a = Enable Proprietary Cloud
_layouts/deploy.html/html/body/div/div/div/div/div/p = Self-defining, easy to customize, 10 minutes to setup, monthly payment.
_layouts/deploy.html/html/body/div/div/div/div/div/p = One-click installation makes Maximtop Proprietary Cloud worry-free and efficient. With Private Cloud, you can complete control over your data and services, and access to all services unlimitedly.
_layouts/deploy.html/html/body/div/div/div/div/div/p = With cutting-edge container technology, all Maximtop services have completed Cloud-native transformation, commit to smooth, stable and reliable operation of bare-metal servers, private cloud platforms, and other on-premise container platforms.
_layouts/deploy.html/html/body/div/div/div/div/div/p = Private Cloud is ideal for closed network, such as enterprise and school campus
_layouts/deploy.html/html/body/div/div/div/div = Maximtop Private Cloud will get you
_layouts/deploy.html/html/body/div/div/div/div/div/span = No limited devices
_layouts/deploy.html/html/body/div/div/div/div/div/span = One-click deployment
_layouts/deploy.html/html/body/div/div/div/div/div/span = Fully Self-defining services
_layouts/deploy.html/html/body/div/div/div/div/div/p = One-click IM Private Cloud
_layouts/deploy.html/html/body/div/div/div/div/div/p = Self-defining, easy to customize, 10 minutes to setup, monthly payment
_layouts/deploy.html/html/body/div/div/div/div/div/p/a = Enable Private Cloud
_layouts/deploy.html/html/body/div/div/div/div/div/p = Simply register an account to use Public Cloud Platform, the most economical and convenient way.
_layouts/deploy.html/html/body/div/div/div/div/div/p = As a typical model of IM Cloud Service, all business can be built on Public Cloud efficiently. Service usage cost can be greatly reduced through resource sharing.
_layouts/deploy.html/html/body/div/div/div/div = Maximtop Public Cloud will get you
_layouts/deploy.html/html/body/div/div/div/div/div/span = IM basic features
_layouts/deploy.html/html/body/div/div/div/div/div/span = Information subscription
_layouts/deploy.html/html/body/div/div/div/div/div/span = Cloud Storage for historical message
_layouts/deploy.html/html/body/div/div/div/div/div/span = Content security
_layouts/deploy.html/html/body/div/div/div/div/div/span = Multi-terminal synchronization with devices
_layouts/deploy.html/html/body/div/div/div/div/div/span = Online technical support
_layouts/deploy.html/html/body/div/div/div/div/div/span = Rich value-added services available
_layouts/deploy.html/html/body/div/div/div/div/div/p = One-click IM Public Cloud
_layouts/deploy.html/html/body/div/div/div/div/div/p = Quick integration, global connectivity, low as 25 CN￥ per day
_layouts/deploy.html/html/body/div/div/div/div/div/p/a = Enable Public Cloud
_layouts/deploy.html/html/script = var url = location.search; //Get strings after "?" in the url.
_layouts/developer.html/html/body/div/div/div/p = Easily experience and customize your IM service with Maximtop client Demo and Console.
_layouts/developer.html/html/body/div/div/div/p = Any questions or other suggestions, please submit Issue in Github repo or go to online consultation in Maximtop client Demo.
_layouts/developer.html/html/body/div/div/div/p = More development documentation and detailed API design can be found in Document Center.
_layouts/developer.html/html/body/div/div/div/a = Download Demo
_layouts/developer.html/html/body/div/div/div/a = Console
_layouts/developer.html/html/body/div/div/div/a = Questions
_layouts/developer.html/html/body/div/div/div/a = Source
_layouts/developer.html/html/body/div/div/p = Client cross-platform technology and terminals integration guide
_layouts/developer.html/html/body/div/div/p/a = Document details
_layouts/developer.html/html/body/div/div/p = Server-side architecture design and API details
_layouts/doc.html/html/body/div/div/a = Server-side
_layouts/doc.html/html/body/div/div/a = Push
_layouts/doc.html/html/body/div/div/a = On-premise deployment
_layouts/doc.html/html/body/div/div/a = Document homepage
_layouts/doc.html/html/body/div/p = This page is for quick integration, visit
_layouts/doc.html/html/body/div/p/a = API Reference
_layouts/doc.html/html/body/div/p = Welcome to Maximtop, One-Click IM Cloud Service with Multi-Cloud Architecture
_layouts/downloads.html/html/body/div/div/div/div/p/a = WeChat Applet
_layouts/downloads.html/html/body/div/div/div/div/p/a = Click to download
_layouts/downloads.html/html/body/div/div/div/p = Experience Demo and download
_layouts/downloads.html/html/body/div/div/div/p = Scan the right QR code to try Maximtop IM Demo
_layouts/downloads.html/html/body/div/div/p = Demo source/SDK
_layouts/downloads.html/html/body/div/div/div/div/p = Android native version, supports Huawei, Xiaomi, Oppo, Vivo, and more mainstream providers’ pushing channels
_layouts/downloads.html/html/body/div/div/div/div/p/a = Demo source
_layouts/downloads.html/html/body/div/div/div/div/p/a = Development guide
_layouts/downloads.html/html/body/div/div/div/div/span/a = Download SDK
_layouts/downloads.html/html/body/div/div/div/div/p = iOS native version, efficient, reliable and full featured, with Video Conferencing and more advanced features available
_layouts/downloads.html/html/body/div/div/div/div/p = Desktop browsers such as Edge/Chrome/Safari and more supported
_layouts/downloads.html/html/body/div/div/div/div/span/a = Online trial
_layouts/downloads.html/html/body/div/div/div/div/p = Recommended for H5 and various applet scenarios, and also usable to generate iOS/Android native Apps
_layouts/downloads.html/html/body/div/div/div/div/p = Native version meets WeChat Applet standard, with exactly the same features as uni-app version
_layouts/downloads.html/html/body/div/div/div/div/p = The underlying C++ library is suitable for IoT scenarios and can be packaged for other development frameworks
_layouts/downloads.html/html/body/div/div/div/div/p = PC Client for Windows is developed using Electron, with Win 7 and above supported
_layouts/downloads.html/html/body/div/div/div/div/span/attr-href = https://package.maximtop.com/Maximtop IM-2.9.9.win.exe
_layouts/downloads.html/html/body/div/div/div/div/span/a = Download installation package
_layouts/downloads.html/html/body/div/div/div/div/p = PC Client for MacOS is developed using Electron, with Mac devices supported
_layouts/downloads.html/html/body/div/div/div/div/span/attr-href = https://package.maximtop.com/Maximtop IM-2.9.9.dmg
_layouts/downloads.html/html/body/div/div/p = On-premise deployment/Server-side
_layouts/downloads.html/html/body/div/div/div/div/p = OS：Ubuntu / CentOS
_layouts/downloads.html/html/body/div/div/div/div/p = Hardware：X64
_layouts/downloads.html/html/body/div/div/div/div/p/a = Installation guide
_layouts/downloads.html/html/body/div/div/div/div/p = OS：
_layouts/downloads.html/html/body/div/div/div/div/p = Hardware：ARM64 / Raspberry Pi 4B
_layouts/downloads.html/html/body/div/div/div/div/p = OS：Catalina 10.15
_layouts/downloads.html/html/body/div/div/div/div/p = Hardware：Darwin64
_layouts/index.html/html/body/div/div/div/div/p = New generation Cloud-native IM
_layouts/index.html/html/body/div/a = Start now
_layouts/index.html/html/body/div/a = Free trail
_layouts/index.html/html/body/div/a = Alibaba Cloud Marketplace
_layouts/index.html/html/body/div/attr-href = https://appcenter.qingcloud.com/apps/app-f3ba91wg/Maximtop%20IM%20Private Cloud
_layouts/index.html/html/body/div/a = QingYun AppCenter
_layouts/index.html/html/body/div/a = AWS Marketplace China
_layouts/index.html/html/body/div/a = AWS Marketplace Global
_layouts/index.html/html/body/div/div/div/p = IM Chat supports voice, image, custom messages and more
_layouts/index.html/html/body/div/div/div/p = Cloud storage for messages with multi-device synchronization
_layouts/index.html/html/body/div/div/div/p = Open platform architecture for easier service extensions
_layouts/index.html/html/body/div/div/div/p/a = Click for more product features >
_layouts/index.html/html/body/div/div/div/p = Support multiple business scenarios：
_layouts/index.html/html/body/div/div/div/p = Online customer service, Broadcast room, Online education, APP social, Collaborative work
_layouts/index.html/html/body/div/div/div/p/a = If interested in private social and secure communication
_layouts/index.html/html/body/div/div/div/p/a = Click to learn about Maximtop Private Cloud >>
_layouts/index.html/html/body/div/p = Quick integration, convenient and professional
_layouts/index.html/html/body/div/p = Professional IM, scan code to try out, 1-hour integration, best choice for start-ups
_layouts/index.html/html/body/div/p = One-click multi-cloud architecture
_layouts/index.html/html/body/div/p = Self-defining console, select your trustable Cloud Service provider, switch among Public Cloud, Private Cloud, and Proprietary Cloud as your will
_layouts/index.html/html/body/div/div/div/p = Select your trustable Cloud Service provider
_layouts/index.html/html/body/div/div/div/p = No IaaS vendor lock-in, you can choose among different Cloud Service providers. Now Alibaba Cloud available, and AWS is coming soon
_layouts/index.html/html/body/div/div/div/p = Select your preferred deployment
_layouts/index.html/html/body/div/div/div/p = One-click Public Cloud, one-click Proprietary Cloud, one-click Private Cloud, worry-free switching of different deployment approaches for better business development.
_layouts/index.html/html/body/div/div/div/p = Transparent Proprietary Cloud resources
_layouts/index.html/html/body/div/div/div/p = Open out IaaS resource account to check proportion of Proprietary Cloud resources, serving transparent and supervised experience
_layouts/index.html/html/body/div/div/div/p/span/a = Learn more about different deployment approaches >
_layouts/index.html/html/body/div/div/p = Real global connectivity
_layouts/index.html/html/body/div/div/p = Cross-regional Data Center deployment, best choice for offshore business
_layouts/index.html/html/body/div/div/p/span/a = Learn more>
_layouts/index.html/html/body/div/p = Customer case
_layouts/index.html/html/body/div/p = We are preferred by companies that value efficiency and security
_layouts/index.html/html/body/div/div/ul/li/a/div = Bullet SMS
_layouts/index.html/html/body/div/div/ul/li/a/div = A phenomenal social App
_layouts/index.html/html/body/div/div/ul/li/a/div = Teddy Mobile
_layouts/index.html/html/body/div/div/ul/li/a/div = A mobile smart service provider covering Oppo, Vivo and more phone manufacturers
_layouts/index.html/html/body/div/div/ul/li/a/div = Huyou App
_layouts/index.html/html/body/div/div/ul/li/a/div = A fun and loving social software from Sohu
_layouts/index.html/html/body/div/div/ul/li/a/div = Grdoc.org
_layouts/index.html/html/body/div/div/ul/li/a/div = A communication platform for Chinese residents and family doctors sponsored by Health News
_layouts/index.html/html/body/div/div/ul/li/a/div = Xieshoue.org
_layouts/index.html/html/body/div/div/ul/li/a/div = A health communication service platform developed by STD Control Center of China CDC
_layouts/index.html/html/body/div/p = Strategic Partners
_layouts/index.html/html/body/div/p = It’s our common mission to provide professional services for enterprises and developers
_layouts/index.html/html/body/div/div/p = One-click to enable Maximtop
_layouts/index.html/html/body/div/div/p = Your simple, professional, and reliable IM Cloud Service
_layouts/index.html/html/body/div/div/p/a = Free trial now
_layouts/oversea.html/html/body/div/div/div = Two offshore modes
_layouts/oversea.html/html/body/div/div/div/div/p = Traditional offshore architecture: Domestic data center + offshore proxies, or offshore data center + domestic proxies, depending on your business needs
_layouts/oversea.html/html/body/div/div/div/div/p = Advantages: Simple, low cost, only connection optimized
_layouts/oversea.html/html/body/div/div/div/div/p = Global Connectivity Mode
_layouts/oversea.html/html/body/div/div/div/div/p = Pioneering developed multi-data center architecture, which supports global cross-cluster deployment of services, data can be accessed via nearest region, providing more professional choices for offshore applications
_layouts/oversea.html/html/body/div/div/div/div/p = Advantages: Great user experience, global distribution of data, with cutting-edge technology
_layouts/oversea.html/html/body/div/div/div/div = Global data centers
_layouts/oversea.html/html/body/div/div/p = Best business-appropriate custom offshore application solutions
_layouts/plans.html/html/body/div/div/div = All package schedules are pay-as-you-go at Console
_layouts/plans.html/html/body/div/div/div = Transparent and linear pricing for full cost forecast
_layouts/plans.html/html/body/div/div/div/a = Price calculator >>
_layouts/plans.html/html/body/div/div/div/div/p = Free Edition
_layouts/plans.html/html/body/div/div/div/div/p = ￥0
_layouts/plans.html/html/body/div/div/div/div/p = No billing
_layouts/plans.html/html/body/div/div/div/div/div/p = For personal application or enterprise development test
_layouts/plans.html/html/body/div/div/div/div/div/p = Less than 100 users
_layouts/plans.html/html/body/div/div/div/div/a = Try now
_layouts/plans.html/html/body/div/div/div/div/p = Business Edition
_layouts/plans.html/html/body/div/div/div/div/p = -￥1,200--
_layouts/plans.html/html/body/div/div/div/div/p = ￥199
_layouts/plans.html/html/body/div/div/div/div/p/span = Low as
_layouts/plans.html/html/body/div/div/div/div/p = Monthly payment
_layouts/plans.html/html/body/div/div/div/div/div/p = More advanced features for commercial applications
_layouts/plans.html/html/body/div/div/div/div/div/p = Service customization supported at Console
_layouts/plans.html/html/body/div/div/div/div/div/p = Unlimited users
_layouts/plans.html/html/body/div/div/div/div/a = Enable Business Edition
_layouts/plans.html/html/body/div/div/div/div/p = ￥3,000
_layouts/plans.html/html/body/div/div/div/div/div/p = More reliable services for professional applications
_layouts/plans.html/html/body/div/div/div/div/div/p = Exclusive cluster resources
_layouts/plans.html/html/body/div/div/div/div/div/p = Cover 200 countries/regions worldwide
_layouts/plans.html/html/body/div/div/div/div/div/p = For your private communication network
_layouts/plans.html/html/body/div/div/div/div/div/p = Full data ownership
_layouts/plans.html/html/body/div/div/div/div/div/p = Less than 1 million users
_layouts/plans.html/html/body/div/div/div/div/div/p = Cover all countries/regions worldside
_layouts/plans.html/html/body/div/div/div/div/div/p = Support secure communication*
_layouts/plans.html/html/body/div/div/div/div/p = Contact business
_layouts/plans.html/html/body/div/div/div/div/p = Flexible billing
_layouts/plans.html/html/body/div/div/div/div/div/p = More deep customization options
_layouts/plans.html/html/body/div/div/div/div/div/p = Source licensing
_layouts/plans.html/html/body/div/div/div/div/div/p = Consultant expert
_layouts/plans.html/html/body/div/div/div/div/a = Consult now
_layouts/plans.html/html/body/div/div/div/div/p/span = Free Edition includes
_layouts/plans.html/html/body/div/div/div/div/p/span = Major features
_layouts/plans.html/html/body/div/div/div/div/div/p = • 100 registered accounts for free
_layouts/plans.html/html/body/div/div/div/div/div/p = • All basic IM features
_layouts/plans.html/html/body/div/div/div/div/div/a = Compare all features >
_layouts/plans.html/html/body/div/div/div/div/p/span = Business Edition includes
_layouts/plans.html/html/body/div/div/div/div/p/span = All Free Edition features +
_layouts/plans.html/html/body/div/div/div/div/div/p = • Unlimited registered accounts
_layouts/plans.html/html/body/div/div/div/div/div/p = • All basic IM features
_layouts/plans.html/html/body/div/div/div/div/div/p = • Information subscription
_layouts/plans.html/html/body/div/div/div/div/div/p = • Cloud Storage for historical messages
_layouts/plans.html/html/body/div/div/div/div/div/p = • Anti-spam and sensitive words filtering
_layouts/plans.html/html/body/div/div/div/div/div/p = • Multi-terminal & device synchronization
_layouts/plans.html/html/body/div/div/div/div/div/p = • Optional value-added services
_layouts/plans.html/html/body/div/div/div/div/div/p = • Online technical support
_layouts/plans.html/html/body/div/div/div/div/p/span = Proprietary Cloud includes
_layouts/plans.html/html/body/div/div/div/div/p/span = All Business Edition features +
_layouts/plans.html/html/body/div/div/div/div/div/p = • Exclusive computing clusters
_layouts/plans.html/html/body/div/div/div/div/div/p = • Globally deployable
_layouts/plans.html/html/body/div/div/div/div/div/p = • Up to 99.99% SLA, compensate 100 times for loss
_layouts/plans.html/html/body/div/div/div/div/div/p = • Cover all Business Edition features
_layouts/plans.html/html/body/div/div/div/div/div/p = • Technical support for major events
_layouts/plans.html/html/body/div/div/div/div/div/p = • Exclusive technical support group
_layouts/plans.html/html/body/div/div/div/div/p/span = Private Cloud includes
_layouts/plans.html/html/body/div/div/div/div/p/span = All IM features +
_layouts/plans.html/html/body/div/div/div/div/div/p = • One-click deployment
_layouts/plans.html/html/body/div/div/div/div/div/p = • Full data control
_layouts/plans.html/html/body/div/div/div/div/p/span = Enterprise Cooperation includes
_layouts/plans.html/html/body/div/div/div/div/p/span = All Private Cloud features +
_layouts/plans.html/html/body/div/div/div/div/div/p = • Custom service features
_layouts/plans.html/html/body/div/div/div/div/div/p = • Exclusive technical advisor
_layouts/plans.html/html/body/div/div/div/div/div/p = • 24/7 technical support
_layouts/plans.html/html/body/div/div/div/div/div/p = • Source opening and licensing
_layouts/plans.html/html/body/div/div/p = Get more Maximtop services
_layouts/plans.html/html/body/div/div/p = Further enhance your performance and security by using Maximtop for a wide range of value-added services from Public Cloud Business Edition, Proprietary Cloud, and Private Cloud
_layouts/plans.html/html/body/div/div/div/div/p = Custom information subscription
_layouts/plans.html/html/body/div/div/div/div/p = Custom information subscription enables subscript user message or
_layouts/plans.html/html/body/div/div/div/div/p = online state, with appropriate filtering rules
_layouts/plans.html/html/body/div/div/div/div/div/a = Enable custom information subscription
_layouts/plans.html/html/body/div/div/div/div/p = Advanced API calls
_layouts/plans.html/html/body/div/div/div/div/div/a = Enable advanced API calls
_layouts/plans.html/html/body/div/div/p = Compare all features
_layouts/plans.html/html/body/div/div/div/div/div/span = Features
_layouts/plans.html/html/body/div/div/div/div/div/div/span = Number of registered users
_layouts/plans.html/html/body/div/div/div/div/div/div/span = No limit
_layouts/plans.html/html/body/div/div/div/div/div/div/span = Single chat
_layouts/plans.html/html/body/div/div/div/div/div/div/span = Group chat
_layouts/plans.html/html/body/div/div/div/div/div/div/span = Historical message query
_layouts/plans.html/html/body/div/div/div/div/div/div/span = Multi-terminal & device synchronization
_layouts/plans.html/html/body/div/div/div/div/div/div/span = Exclusive computing resources
_layouts/plans.html/html/body/div/div/div/div/div/div/span = Secure communication
_layouts/plans.html/html/body/div/div/div/div/div/div/span = Advanced customization
_layouts/plans.html/html/body/div/div/div/div/div/span = Capacity
_layouts/plans.html/html/body/div/div/div/div/div/div/span = API interface throttling
_layouts/plans.html/html/body/div/div/div/div/div/div/span = 10 calls/s
_layouts/plans.html/html/body/div/div/div/div/div/div/span = 30 calls/s
_layouts/plans.html/html/body/div/div/div/div/div/div/span = Number of supported devices
_layouts/plans.html/html/body/div/div/div/div/div/div/span = 3 devices/user
_layouts/plans.html/html/body/div/div/div/div/div/div/span = 5 devices/user
_layouts/plans.html/html/body/div/div/div/div/div/div/span = 10 devices/user available for purchase
_layouts/plans.html/html/body/div/div/div/div/div/div/span = Or more
_layouts/plans.html/html/body/div/div/div/div/div/div/span = Freely configurable
_layouts/plans.html/html/body/div/div/div/div/div/div/span = Size of storage space
_layouts/plans.html/html/body/div/div/div/div/div/div/span = Daily number of downlink messages
_layouts/plans.html/html/body/div/div/div/div/div/div/span = 20 k
_layouts/plans.html/html/body/div/div/div/div/div/div/span = 10 million
_layouts/plans.html/html/body/div/div/div/div/div/div/span = 30 million
_layouts/plans.html/html/body/div/div/div/div/div/div/span = Higher available for purchase
_layouts/plans.html/html/body/div/div/div/div/div/div/span = Number of groups
_layouts/plans.html/html/body/div/div/div/div/div/div/span = 500 groups/user
_layouts/plans.html/html/body/div/div/div/div/div/div/span = 1,000 groups/user
_layouts/plans.html/html/body/div/div/div/div/div/div/span = No group-number limit/user
_layouts/plans.html/html/body/div/div/div/div/div/div/span = Group size
_layouts/plans.html/html/body/div/div/div/div/div/div/span = 200 members/group
_layouts/plans.html/html/body/div/div/div/div/div/div/span = 2000 members/group
_layouts/plans.html/html/body/div/div/div/div/div/div/span = 10,000 members/group available for purchase
_layouts/plans.html/html/body/div/div/div/div/div/div/span = More higher configuration options
_layouts/plans.html/html/body/div/div/div/div/div/div/span = Forum support
_layouts/plans.html/html/body/div/div/div/div/div/div/span = Online chat support
_layouts/plans.html/html/body/div/div/div/div/div/div/span = Technical support group
_layouts/plans.html/html/body/div/div/div/div/div/div/span = Exclusive technical support group
_layouts/plans.html/html/body/div/div/div/div/div/div/span = Emergency call
_layouts/plans.html/html/body/div/div/div/div/div/div/span = Technical consultant
_layouts/privacy.html/html/body/div = User privacy policy
_layouts/privacy.html/html/body/div/div/p = To protect user personal information, Maximtop may collect and use your relevant information in products or services using. All details about how we collect, use, store and share this information, and the ways we provide you with access to, update, control and protect this information are transparent in this Privacy Policy. This Privacy Policy is closely related to Maximtop services you use, please read it carefully and make your appropriate choices based-on it when necessary.
_layouts/privacy.html/html/body/div/div/p/b = By using or continuing to use our services, you consent to our collection, use, storage and sharing of your information in accordance with this Privacy Policy.
_layouts/privacy.html/html/body/div/div/div = I. Information we might collect
_layouts/privacy.html/html/body/div/div/p = The following information about you may be collected, stored, and used when we provide services. Without this relevant information, you may not be able to register as our user, enjoy some of our services, or even if we can continue to provide you with some services, the intended effect of the services will not be achieved.
_layouts/privacy.html/html/body/div/div/p = 1. Information you provide
_layouts/privacy.html/html/body/div/div/li = The personal information, such as phone number, email and bank card number, that you provide to us when registering our account or using our services;
_layouts/privacy.html/html/body/div/div/li = The shared information you provide to other parties through our services, and the information you store when use our services.
_layouts/privacy.html/html/body/div/div/p = 2. Your information shared by other parties
_layouts/privacy.html/html/body/div/div/li = Shared information about you when other parties use our services.
_layouts/privacy.html/html/body/div/div/p = 3. We have direct access to some of your information; we may collect the following information when you use our services:
_layouts/privacy.html/html/body/div/div/li = Your log information, system may get cookies and web beacon when you use our service
_layouts/privacy.html/html/body/div/div/li = Or other technical information that collected automatically, including:
_layouts/privacy.html/html/body/div/div/li = Device or software information, such as configuration information provided by your mobile device, web browser, or other programs you use to access our services, your IP address, and the version and device ID used by your mobile device;
_layouts/privacy.html/html/body/div/div/li = Information you search and browse when using our services, such as web search terms you use, url addresses of social media pages you visit,
_layouts/privacy.html/html/body/div/div/li = and other information and content details that you browse or request when using our service;
_layouts/privacy.html/html/body/div/div/li = Information about mobile applications (APPs) and other software you have used, and information about how you used these APPs and software;
_layouts/privacy.html/html/body/div/div/li = The information about your communication through our services, such as the account number you have communicated with, as well as the communication time, data and duration;
_layouts/privacy.html/html/body/div/div/li = The information (metadata) that you share through our services, such as the date, time, or location of a shared photo or video taken or uploaded. Location information refers to the information we collect about your location when you turn on the device location function and use our location-based related services, including:
_layouts/privacy.html/html/body/div/div/li = When you use our services from a mobile device with location function,
_layouts/privacy.html/html/body/div/div/li = the location information collected through GPS or WiFi;
_layouts/privacy.html/html/body/div/div/li = Real-time information provided by you or other users containing your geographic location, such as information about your region contained in the account information you provided, shared information uploaded by you or others showing your current or former geographic location, such as geo-tagged information contained in shared photos; You can stop our collection of your geographic location information at any time by turning off the location function.
_layouts/privacy.html/html/body/div/div/div = II. How we might use this information
_layouts/privacy.html/html/body/div/div/p = We may use the information gathered in the course of providing you with services for the following purposes:
_layouts/privacy.html/html/body/div/div/p = 1. Used for authentication, customer service, security, fraud detection, archiving and backup purposes to ensure the security of our products and services to you;
_layouts/privacy.html/html/body/div/div/p = 2. Used to help us design new services and improve existing services;
_layouts/privacy.html/html/body/div/div/p = 3. Used for better understanding how you access and use our services to respond specifically to your personalized needs, such as language settings, location settings, personalized help services and instructions, or otherwise respond to you and other users of our services;
_layouts/privacy.html/html/body/div/div/p = 4. Used for software certification or software upgrade management; Let you participate in the investigation of our products and services.
_layouts/privacy.html/html/body/div/div/p = 5. In order to give you a better experience, improve our services or other uses you agree to, we may use the information collected through one/some of our services for our other services in a pooled or personalized way on the premise of complying with relevant laws and regulations. For example, information gathered when you use one of our services may be used in another service to provide you with specific content, or to show you non-universally pushed information that is relevant to you. You can also authorize us to use the information provided and stored by that service for our other services if appropriate options available.
_layouts/privacy.html/html/body/div/div/div = III. How you can access and control your personal information
_layouts/privacy.html/html/body/div/div/p = We will make every possible technical effort to ensure that you can access, update and correct your registration information or other personal information provided when using our services. When accessing, updating, correcting, and deleting your personal information, we may require you to authenticate to secure your account.
_layouts/privacy.html/html/body/div/div/div = IV. Information security
_layouts/privacy.html/html/body/div/div/p = We retain your personal information only for the period necessary for the purposes stated in this Privacy Policy and for the period required by laws and regulations. We use various security techniques and procedures to prevent loss, improper use, unauthorized viewing or disclosure of information. For example, in some services, we will use encryption techniques (such as SSL) to protect the personal information you provide. However, please understand that due to technical limitations and various malicious means that may exist, in the Internet industry, even if we try our best to strengthen security measures, it is impossible to always ensure 100% security of information. You need to understand that the systems and communication networks you use to access our services may have problems due to circumstances beyond our control.
_layouts/privacy.html/html/body/div/div/div = V. Scope of Privacy Policy
_layouts/privacy.html/html/body/div/div/p = This Privacy Policy applies to all of our services except for certain specific services. Please note that this Privacy Policy does not apply to information collected by third-party services (including any third-party websites) accessed through our services, nor information collected through other companies and institutions that advertise in our services.
_layouts/privacy.html/html/body/div/div/div = VI. Policy change
_layouts/privacy.html/html/body/div/div/p = We may amend the terms of this Privacy Policy as and when appropriate, and such amendments form part of this Privacy Policy. If such amendments result in a substantial diminution of your rights under this Privacy Policy, we will notify you by prominently posting on the home page or by sending you an email or otherwise before the amendments take effect, in which case you agree to be bound by this revised Privacy Policy if you continue to use our services.
_layouts/product.html/html/body/div/div/div/p = Support single/group chat, text, voice, image, video, and custom message
_layouts/product.html/html/body/div/div/div/p = Support multiply business scenarios
_layouts/product.html/html/body/div/div/div/div/p = Message
_layouts/product.html/html/body/div/div/div/div/p = All media types, text, voice, image, video
_layouts/product.html/html/body/div/div/div/div/p = Custom message, extensible at will
_layouts/product.html/html/body/div/div/div/div/p = Single/group chat and various Chatrooms
_layouts/product.html/html/body/div/div/p = Cloud storage for messages, multi-device synchronization
_layouts/product.html/html/body/div/div/div/div/p = Storage
_layouts/product.html/html/body/div/div/div/div/p = Cloud storage for messages, roaming supported
_layouts/product.html/html/body/div/div/div/div/p = Multi-device synchronization, mobile, computer, browser, and smart device can all login simultaneously
_layouts/product.html/html/body/div/div/div/div/div/div/p/span = Anti-spam and sensitive words filtering
_layouts/product.html/html/body/div/div/div/div/div/div/p = Identify pornographic, terrorist, and violent images
_layouts/product.html/html/body/div/div/div/div/div/div/p = Text and image detection
_layouts/product.html/html/body/div/div/div/div/div/div/p/span = Synchronizing user events to external systems in real-time
_layouts/product.html/html/body/div/div/div/div/div/div/p = Change event of user online state
_layouts/product.html/html/body/div/div/div/div/div/div/p = Filter information content
_layouts/product.html/html/body/div/div/div/div/div/div/p = Uniform push
_layouts/product.html/html/body/div/div/div/div/div/div/p = Native support for push service from major mobile phone manufacturers
_layouts/product.html/html/body/div/div/div/div/div/div/p/span = Advanced interface for easier integration of messaging services and business
_layouts/product.html/html/body/div/div/div/div/div/div/p = Online state query
_layouts/product.html/html/body/div/div/div/div/div/div/p = Broadcast message
_layouts/product.html/html/body/div/div/p = Business scenario
_layouts/qrcode.html/html/body/div = Download Maximtop IM
_layouts/qrcode.html/html/script = ') > -1; //android terminal
_layouts/qrcode.html/html/script =   var isIOS = !!u.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/); //ios terminal
_layouts/refund-policy.html/html/body/div = Maximtop Services Termination Process
_layouts/refund-policy.html/html/body/div/div/p = Since you have registered as a customer of Maximtop and use the products/services provided by Maximtop, this process is part of Maximtop Services Contract, please read it carefully.
_layouts/refund-policy.html/html/body/div/div/p = If you request to terminate the service before the expiration of Maximtop service period, you must follow the following procedures. Maximtop will validate whether you meet the conditions for service termination and refunding according to the following procedures and requirements.
_layouts/refund-policy.html/html/body/div/div/p = I. Service termination process
_layouts/refund-policy.html/html/body/div/div/p = 1. Please send a termination request email to your consultant (or the contact person agreed in Maxtimtop Service Contract) one month in advance and explain the reason for termination.
_layouts/refund-policy.html/html/body/div/div/p = 2. Maximtop will reply whether the termination agreed within 3 working days after receiving your request.
_layouts/refund-policy.html/html/body/div/div/p = 3. If the termination agreed, please provide Maximtop the following materials:
_layouts/refund-policy.html/html/body/div/div/p = 1. All copies of invoices (if invoiced);
_layouts/refund-policy.html/html/body/div/div/p = 2. A description with official seal;
_layouts/refund-policy.html/html/body/div/div/p = 3. If the invoice issued by Maximtop is a special VAT invoice, you need to open credit note in your tax bureau (if certified);
_layouts/refund-policy.html/html/body/div/div/p = 4. Payment voucher with official seal;
_layouts/refund-policy.html/html/body/div/div/p = 4. After receiving the above complete materials, Maximtop will negotiate with you to service termination and refund settling.
_layouts/refund-policy.html/html/body/div/div/p = II. Refund rules and instructions
_layouts/refund-policy.html/html/body/div/div/p = 1. When refunding, Maximtop will only refund you the difference between the advance payment and your actual service fee consumed, neither gift amount nor preferential amount will be included in the refund settlement amount.
_layouts/refund-policy.html/html/body/div/div/p = 2. Refund is only supported when the corresponding product/service has been used for 6 months or longer.
_layouts/refund-policy.html/html/body/div/div/p = 3. For product/service used less than 6 months, the refund settlement rules are as follows:
_layouts/refund-policy.html/html/body/div/div/p = 1. If the actual consumption amount is greater than the 6-month function usage fee/basic monthly service fee of the corresponding service, it will be implemented according to Article 2 above and refund is supported;
_layouts/refund-policy.html/html/body/div/div/p = If the actual consumption amount is less than the 6-month function usage fee/basic monthly service fee of the corresponding service, it is deemed that you have used the service for 6 whole months, and Meiximtop will calculate the actual amount of the corresponding service according to the 6-month function usage fee/basic monthly service fee, and refund the remaining paid amount to you after deducting the above fees. The refundable amount is: Balance - (6-month function usage fee/basic monthly service fee - actual consumption amount).
_layouts/refund-policy.html/html/body/div/div/p = 4. Refund is not supported in the following cases：
_layouts/refund-policy.html/html/body/div/div/p = 1. Refund process not followed, or refund materials are missing；
_layouts/refund-policy.html/html/body/div/div/p = 2. Bundling product/service or package purchased；
_layouts/refund-policy.html/html/body/div/div/p = 3. Recharged amount (including paid amount) with marketing discount, preferential activities, etc.；
_layouts/refund-policy.html/html/body/div/div/p = 4. Maximtop cannot fulfill the service promise due to your own reasons or your violation of relevant national laws and regulations
_layouts/refund-policy.html/html/body/div/div/p = 5. Any other questions about refund, please contact the exclusive consultant for your purchased product/service.
_layouts/terms.html/html/body/div = Maximtop Services Terms
_layouts/terms.html/html/body/div/div/p = Maximtop refers Beijing Maximtop Technology Co., Ltd.
_layouts/terms.html/html/body/div/div/p = (hereinafter referred as ‘our company’ or ‘Maximtop’) provides “Internet Cloud Service” to customers. These Terms of Service are an agreement between Maximtop customers and our company. You are welcome to use Maximtop Services provided by our company. Before you register as a Maximtop customer, you have fully read, understood and accepted all the contents of this Agreement. Once you select "I have read and agreed" and complete the registration, you agree to abide by all the agreements of this Agreement. If you do not accept these terms, please do not install, use, register or otherwise access our services.
_layouts/terms.html/html/body/div/div/p = 1、Confirmation and acceptance of Terms of Service
_layouts/terms.html/html/body/div/div/p = （1）Our company provides Maximtop Services to Maximtop customers. Please refer to Maximtop Official Website (hereinafter referred to as ‘Maximtop Platform’) for more service details:
_layouts/terms.html/html/body/div/div/p = （2）The Terms of Service include the text of the Terms, various rules that have been published or may be published in the future by Maximtop Services, and modifications and supplements made by our company from time to time to the text of the above Terms and various rules. All rules, modifications and additions to the text of these terms and rules are an integral part of the Terms of Service and have the same effect as the text of the Terms of Service. Unless otherwise expressly stated, your use of Maximtop Services shall be governed by these Terms of Service.
_layouts/terms.html/html/body/div/div/p = （3）The contents of Maximtop Services are provided to Maximtop customers by our company according to the actual situation. We reserve the right to modify these Terms of Service at any time, and will publish the revised text on this page after modification. Therefore, please check this page frequently.
_layouts/terms.html/html/body/div/div/p = （4）If you choose to continue to use Maximtop Services, you will be deemed to accept the modifications of the Terms of Service by our company.
_layouts/terms.html/html/body/div/div/p = 2、Terms of Use
_layouts/terms.html/html/body/div/div = In order to effectively protect your legitimate rights and interests in using Maximtop Services, you understand and agree to accept the following terms and conditions:
_layouts/terms.html/html/body/div/div/p = （1）You understand and agree that our company can unilaterally modify these Terms of Use without your consent. The Terms of Use shall be subject to the prompts on the page when you use the Services. You agree and abide by the Terms of Use as the prerequisite for your use of Maximtop Services.
_layouts/terms.html/html/body/div/div/p = （2）We will inform you of the service progress and prompt you for the next step by email, but we do not guarantee that you will receive the email in time and will not bear any consequences. Therefore, in the process of using Maximtop Services, you should log in to this website in time to view and carry out relevant operations. Our company will not assume any responsibility for any disputes or losses caused by your failure to check the service state in time, submit relevant applies and modify and confirm the service state in time.
_layouts/terms.html/html/body/div/div/p = （3）When you use Maximtop Services, our company reserves the right to charge you for the services in accordance with these Terms of Use, the corresponding service charge introduction, the order or the relevant agreement.
_layouts/terms.html/html/body/div/div/p = （4）You shall not use Maximtop Services capabilities, technologies, etc. for any commercial activities without the authorization of our company.
_layouts/terms.html/html/body/div/div/p = （5）We reserve the right to disqualify you and terminate our services at any time if the information you provide is incorrect or untrue.
_layouts/terms.html/html/body/div/div/p = 3、Customer Rights and Obligations
_layouts/terms.html/html/body/div/div/p = （1）You shall be responsible for the account (hereinafter referred to as "Maximtop account") you applied for and obtained on Maximtop website. Only you can use your Maximtop account, which is non-transferable, non-donative and non-inheritable.
_layouts/terms.html/html/body/div/div/p = （2）You are fully responsible for all actions and remarks made using the Maximtop account and password. You should agree that our company will identify your identity through your username and password of Maximtop account. Please keep your account username and password properly, and you will bear the losses caused by the disclosure of username or password. If you find that others fraudulently use or steal your Maximtop account and password or any other circumstances without legal authorization, you should immediately notify our company with the contact information published in official website, asking us to suspend your Maximtop Services. At the same time, you should understand that it takes a reasonable period for our company to take measures on your request. Before that, our company will not be responsible for the executed instructions and your losses.
_layouts/terms.html/html/body/div/div/p = （3）You have the right to enjoy the services and technical support provided by Maximtop. Please refer to the relevant product introduction for details.
_layouts/terms.html/html/body/div/div/p = （4）You guarantee that you will not use technical or other means to disturb websites and services of Maximtop and other customers, as well as branch services.
_layouts/terms.html/html/body/div/div/p = （5）You shall bear all responsibilities for massaging by yourself, and our company has no obligation to filter or audit the content sent by Maximtop customers, nor shall it bear any responsibilities of examination, audit, supervision or other joint and several liabilities. If your actions cause losses to our company, you should bear corresponding legal responsibilities, and our company reserves the right to claim compensation through legal channels.
_layouts/terms.html/html/body/div/div/p = （6）You may not modify, re-create, decompile or reverse-engineer the SDK of Maximtop Services, or take other attempts to extract source code and perform any acts suspected of infringing Maximtop's intellectual property rights unless Maximtop gives you explicit written authorization.
_layouts/terms.html/html/body/div/div/p = （7）Any other commercial software and services derived from Maximtop Services developed and officially released shall be authorized by our company, and our company has the right to stop unauthorized derivative commercial software and services and claim compensation from its developers. Downloading, installing and using derivative commercial software and services without the authorization of our company may lead to unpredictable risks, and all legal liabilities and disputes arising therefrom have nothing to do with our company.
_layouts/terms.html/html/body/div/div/p = （8）You shall respect the intellectual property rights and other legal rights of Maximtopand other third parties, and our company reserves the right to terminate the service provided to you and claim compensation from you through legal channels when you infringe the legal rights and interests of Maximtop.
_layouts/terms.html/html/body/div/div/p = （9）You shall ensure that the contact information provided is valid, and ensure the security and stability of the e-mail box you use to receive Maximtop mails, in order to receive the notification message sent by our company in time. You should bear the responsibility for all the consequences caused by the incorrect contact information provided by you and the poor security and stability of the e-mail service you use to receive our mail.
_layouts/terms.html/html/body/div/div/p = （10）You guarantee that you will comply with national and local laws and regulations, industry practices and social public ethics when using the services provided by Maximtop, and will not use Maximtop services to store, publish and disseminate the following information and content: any content (information) that violates national laws, regulations and policies; Political propaganda or news information in violation of state regulations; Information involving state secrets or security; Feudal superstition or obscene, pornographic, obscene information or information instigating crimes; Gambling prizes, gambling games; Information that violates the national ethnic and religious policies; Information that hinders the safe operation of the Internet; Information that infringes upon the legitimate rights and interests of others, or other information or content that is detrimental to social order, social security and public morality.
_layouts/terms.html/html/body/div/div/p = （11）You guarantee that the mobile number used when registering your account on this website is valid for a long time and has been authenticated by real name. Once the mobile number is found to be invalid, it will be regarded as your account invalid and the account will be disabled.
_layouts/terms.html/html/body/div/div/p = （12）You have the right to request us to issue a formal invoice for the service fee you paid, but the amount in the invoice does not include the gift part such as preferential activities.
_layouts/terms.html/html/body/div/div/p = 4、Maximtop Rights and Obligations
_layouts/terms.html/html/body/div/div/p = （1）Maximtop provides you with qualified services based on the service you choose and the payment.
_layouts/terms.html/html/body/div/div/p = （2）Maximtop promises to take confidentiality measures for your information, data and user information, not disclose your information to third parties, and not authorize third parties to use your information, unless: It should be provided according to laws and regulations, and the administrative and judicial authorities require our company to provide it; You agree that our company will provide it to a third party; Submitted by our company to solve the reported incident and filed lawsuit; Published by you publicly; Maximtop website has the right to use the public data and information registered on our site.
_layouts/terms.html/html/body/div/div/p = （3）Maximtop has the authority to audit you and decide whether to accept you as a customer. Just because you have passed the audit of Maximtop and become a customer, does not mean that Maximtop needs to bear any legal responsibility for your actions.
_layouts/terms.html/html/body/div/div/p = （4）Maximtop has the right to review the application information you submit and decide whether to provide or shut down the service.
_layouts/terms.html/html/body/div/div/p = （5）Maxim Topology reserves the right to terminate the services provided to you in case you violate national or local laws and regulations or these Terms of Use. And in any case, our company will not be liable for any indirect, accidental, special and subsequent damages.
_layouts/terms.html/html/body/div/div/p = （6）For information you publish using the Maximtop Services, Maximtop reserves the right to filter keywords of your messaging information according to relevant national laws and regulations. If it is found that the content you send clearly violates relevant national laws and regulations, our company has the right to make actions including but not limited to dissuading, intercepting and even reporting to relevant departments.
_layouts/terms.html/html/body/div/div/p = （7）Our company reserves the right to forcibly close services and freeze accounts if your application misuses system resources.
_layouts/terms.html/html/body/div/div/p = （8）Our company reserves the right to require you to forcibly upgrade the application and stop serving the old version of our SDK due to system or service upgrade.
_layouts/terms.html/html/body/div/div/p = （9）Our company only provides security measures according to the existing technology to prevent the information held by our company from being lost, abused and forged. Detailed security measures include data backup and encryption. You acknowledge that despite these security measures, our company does not guarantee the absolute security of this information.
_layouts/terms.html/html/body/div/div/p = （10）For any other commercial software and services derived from Maximtop Services, our company has the right to stop unauthorized services derived from commercial software and services and claim compensation from its developers.
_layouts/terms.html/html/body/div/div/p = （11）If you authorize to open an infrastructure resource account in a third party through Maximtop Platform, Maximtop has the right to replace, upgrade and cancel this account during service operation. If the third-party service has abnormal system operation, system security and data security problems, you will bear the responsibilities and losses caused by it, and Maximtop has no obligation to bear any responsibilities or compensation.
_layouts/terms.html/html/body/div/div/p = 5、Cost
_layouts/terms.html/html/body/div/div/p = （1）The service fee standard of Maximtop is subject to the actual pricing of Maximtop. After logging in to Maximtop Platform, you can view account information, submit orders, open, suspend or terminate service items, recharge and view bills through the background management.
_layouts/terms.html/html/body/div/div/p = （2）You can only enjoy the services provided by Maximtop after you submit your order and pay for it. If you fail to pay within 3 days after submitting the order, these terms of use and all agreements reached with you on the services are invalid.
_layouts/terms.html/html/body/div/div/p = （3）If both parties agree to continue serving by Maximtop after the services expire, you shall pay the renewal fee at least 7 days before expiration. If Maximtop adjusts the product name, service or price at the time of renewal, both parties agree to serve according to the new product name, service and price in effect at the time of renewal.
_layouts/terms.html/html/body/div/div/p = （4）Maximtop Services can only be opened for pre-recharge. You need to ensure that the available balance of your Maximtop account is sufficient, and the pre-recharge fee will not be refunded once it is paid. When the available balance of your account is insufficient, you should recharge it in time, and the available balance of your account shall be subject to the amount displayed in the background management of Maximtop. Our company has the right to suspend the provision of Maximtop Services to you when the available amount of your account is less than 0, and any losses caused by this shall be borne by you. Maximtop reserves the right not to provide services or terminate services to you before you pay all the fees as agreed; And reserve the right to pursue legal responsibility for your overdue payment. Overdue arrears will be paid a late payment fee of one thousandth per day from the date when the services stop.
_layouts/terms.html/html/body/div/div/p = （5）Maximtop will start billing on the first day you subscribe to Maximtop service, with a deduction every natural month. You may request the Maximtop to issue VAT invoices for the amount that has been deducted, and please provide the necessary information for invoicing according to the requirements of Maximtop.
_layouts/terms.html/html/body/div/div/p = （6）You can enjoy preferential activities and complimentary services according to the arrangement of Maximtop. You fully understand that all complimentary service items and price-related activities in Maximtop are one-time special discounts in addition to the normal service price, and the preferential contents do not include the modification, update and maintenance costs of complimentary service items, and complimentary service items cannot be discounted to offset the service price and cannot be exchanged for cash. If the recharge amount of Maximtop account is given away, the gift part should be consumed after the actual payment part exhausted.
_layouts/terms.html/html/body/div/div/p = 6、Maximtop services and modifications, suspensions and terminations of the Terms of Service
_layouts/terms.html/html/body/div/div/p = （1）Maximtop services are constantly changing and improving services. Maximtop services may add or remove some features or services, and may suspend or completely stop this product. In the event of a material change in the content of Maximtop or these Terms of Service, Maximtop shall announce the material change in advance on the Maximtop website or at an appropriate location on other platforms of the product. If you continue to use Maximtop products or services, you will be deemed to accept the above changes. If you do not accept the above changes, you have the right to continue to use the changed Maximtop services according to the contents and standards before the changes until the advance payment under the valid orders corresponding to the services is exhausted or the use of Maximtop services is stopped. If you choose to stop using Maximtop services, Maximtop should settle with you and you should move out the business data.
_layouts/terms.html/html/body/div/div/p = （2）If Maximtop deletes, suspends or completely stops some or all of its services due to business development needs, unless expressly provided by law, Maximtop has the right to directly refund the actual paid but unconsumed recharge amount for you without your application, and empty the balance, recharge amount, vouchers, coupons, etc. in your Maximtop account accordingly.
_layouts/terms.html/html/body/div/div/p = （3）If you request to terminate the service before the expiration of the service period in Maximtop, Maximtop will confirm whether you meet the conditions for termination of service and refund according to the processing procedures. The specific processing procedures are as follows: "
_layouts/terms.html/html/body/div/div/p = ”.
_layouts/terms.html/html/body/div/div/p = 7、Terms of Privacy
_layouts/terms.html/html/body/div/div/p = In the process of using Maximtop services, Maximtop will collect the information provided voluntarily or generated by using the services in the following ways to provide services to you, optimize our services and ensure the security of your account:
_layouts/terms.html/html/body/div/div/p = （1）When you use Maximtop services, we collect your user's nickname, avatar, and UserID. If you don't provide this information, you may not be able to use all Maximtop services normally.
_layouts/terms.html/html/body/div/div/p = （2）When you use Maximtop services, we store your user's message data. If you don't agree to store such messages, you may not be able to use all Maximtop services normally.
_layouts/terms.html/html/body/div/div/p = （3）When you use Maximtop services, we collect your user's terminal device information, including OS version, application package name, screen size, OS name version number, time zone, language, network type (WIFI, 5G, 4G, 3G, 2G, etc.), App
_layouts/terms.html/html/body/div/div = We collect terminal equipment information such as version number, equipment model, mobile phone network operator, etc. It’s for your users to use our services normally and help us to continuously improve our services.
_layouts/terms.html/html/body/div/div/p = （4）When you use Maximtop services, we collect SDK log information, including SDK version number, user Token, APPID, user's handset manufacturer, OS name version number, network type, operator code, interface call error code, connection failure error code, which is collected to solve problems you may encounter when using Maximtop services. If you do not provide such information, it will affect our troubleshooting.
_layouts/terms.html/html/body/div/div/p = （5）Our company will provide certain user information to partners who cooperate with us to provide you with products and services, or help our company marketing; our company will share some information with third parties for the purpose of improving our products, services and advertising. But our company will not provide information to third parties for marketing purposes, and certainly not sell user information.
_layouts/terms.html/html/body/div/div/p = （6）By agreeing to or using these Terms of Privacy, you agree to use and disclose your personal information in accordance with the following terms.
_layouts/terms.html/html/body/div/div/p = （7）Username and password: You need to set a username and password to identify you when you register. You can only use this account through the password you set. If you disclose the password, you may lose your personally identifiable information and may lead to adverse legal consequences for you. If the account and password are potentially or actually endangered for any reason, you should contact our company immediately, and our company will not be responsible for this until our company takes meastures.
_layouts/terms.html/html/body/div/div/p = （8）Registration information: When you register your account, you should provide our company with the name, address, phone number and email address of your business or organization, etc., in order to provide targeted services to you. You understand and agree that our company will inform you of this information through your email address.
_layouts/terms.html/html/body/div/div/p = （9）Bank or Alipay account information: If the services provided by our company require you to submit your bank or Alipay account information, our company will strictly fulfill the relevant confidentiality agreement after the corresponding information received.
_layouts/terms.html/html/body/div/div/p = （10）According to relevant laws, regulations and national standards, we may collect and use your relevant user information without asking your authorization and consent in the following situations:
_layouts/terms.html/html/body/div/div/p = 1）Directly related to national security, national defense security and other national interests;
_layouts/terms.html/html/body/div/div/p = 2）Directly related to major public interests such as public safety, public health and public knowledge;
_layouts/terms.html/html/body/div/div/p = 3）Directly related to criminal investigation, prosecution, trial and sentence enforcement;
_layouts/terms.html/html/body/div/div/p = 4）In order to safeguard the life, property, reputation and other major legitimate rights and interests of your users or other individuals, but it is difficult to obtain the consent;
_layouts/terms.html/html/body/div/div/p = 5）Disclosed to the public by yourself;
_layouts/terms.html/html/body/div/div/p = 6）Collecting user information from legally publicly disclosed information, such as legal news reports, government information disclosure and other channels;
_layouts/terms.html/html/body/div/div/p = 7）Necessary for signing and performing the contract upon your request;
_layouts/terms.html/html/body/div/div/p = 8）Necessary to maintain the safe and stable operation of the provided product or service, such as detecting and handling faults of the product or service;
_layouts/terms.html/html/body/div/div/p = 9）Necessary for legitimate journalism;
_layouts/terms.html/html/body/div/div/p = 10）When it is necessary to carry out statistical or academic research in the public interest and provides academic research or description results to the outside world, the user information contained in the results is de-identified;
_layouts/terms.html/html/body/div/div/p = 11）Other circumstances specified by laws and regulations.
_layouts/terms.html/html/body/div/div/p = 8、Confidentiality Provisions
_layouts/terms.html/html/body/div/div/p = （1）All technical and non-technical information disclosed by both parties to each other is classified as confidential information. Including but not limited to product information, product schedule, product price, financial and marketing planning, user data, code base, API application data interface, technical description, design, special formula, special algorithm, etc.
_layouts/terms.html/html/body/div/div/p = （2）Both parties agree to keep confidential the above-mentioned information of the other party, and strictly require the employees who have access to the above-mentioned confidential information to abide by the confidentiality obligations of this article. Unless required by state organs according to law or the above confidential information has entered the public domain, the party receiving the confidential information shall not disclose it to the outside world.
_layouts/terms.html/html/body/div/div/p = （3）Both parties explicitly recognize that their business data are their important assets and key confidential information, and both parties shall protect the above confidential information from disclosure. Once the above confidential information disclosure is found, both parties shall take all reasonable measures to avoid or mitigate the damaging consequences.
_layouts/terms.html/html/body/div/div/p = （4）The Terms shall not be invalidated by termination of Maximtop services.
_layouts/terms.html/html/body/div/div/p = 9、Scope and Limitation of Liability
_layouts/terms.html/html/body/div/div/p = （1）Our company is liable only for the liabilities set out in these Terms of Service up to and including the fees paid by you for using Maximtop services.
_layouts/terms.html/html/body/div/div/p = （2）Your profile information is provided by yourself and we cannot guarantee that it is accurate, timely and complete.
_layouts/terms.html/html/body/div/div/p = （3）Our company does not assume any legal liability if the following circumstances occur: Provide your registration information and user information according to the law or the requirements of relevant government departments; Disclosure of any user information due to your improper use; Any service interruption or obstruction caused by hacker attack, computer virus invasion, illegal content information, harassment information shielding, government control and any other network, technology, communication lines, information security management measures, etc., which cannot meet the use requirements; Your losses due to third parties’, such as operators, communication line failures, technical problems, network, computer failures, system instability and other force-majeure cases; Risks arising from the use of anonymous or impersonated information from others containing threatening, defamatory, offensive or illegal content that may exist in Maximtop services.
_layouts/terms.html/html/body/div/div/p = （4）Our company does not provide any form of warranty for Maximtop services, including but not limited to the following: Our services meet your needs; Our services are free from interference, timely provision or error.
_layouts/terms.html/html/body/div/div/p = （5）The quality and content of third-party services provided by a partner of Maximtop services shall be the responsibility of the partner.
_layouts/terms.html/html/body/div/div/p = （6）Where permitted by law, our company shall not be liable for any indirect, punitive, special or derivative losses (including but not limited to business losses, loss of income, loss of profits or loss of other economic benefits) in connection with or arising from these Terms of Service. No matter how it arises, no matter whether it is caused by breach of this  Terms of Service (including breach of warranty) or infringement, our company will not assume any legal liability.
_layouts/terms.html/html/body/div/div/p = 10、Trademarks and Intellectual Property
_layouts/terms.html/html/body/div/div/p = （1）Maximtop services are developed and provided by our company. Maximtop's patents, copyrights, designs and other intellectual property rights, as well as all information contents related to Maximtop services, including but not limited to works, pictures, archives, information, materials, architectures and page designs, are owned by our company according to law.
_layouts/terms.html/html/body/div/div/p = （2）Maximtop customers have no right to copy, distribute, transfer, license or provide others with the above resources except with the express consent of our company or commercial license, otherwise they must bear corresponding responsibilities.
_layouts/terms.html/html/body/div/div/p = （3）All contents on Maximtop platform, including but not limited to works, pictures, archives, information, materials, website structure, website screen arrangement and web page design, are intellectual properties owned by our company according to law, including but not limited to trademark rights, patents, copyrights, trade secrets, etc.
_layouts/terms.html/html/body/div/div/p = 11、Force-Majeure Terms
_layouts/terms.html/html/body/div/div = Maximtop is not liable for losses caused by force-majeure. Force-majeure referred to in these Terms includes: Natural disasters, changes in laws and regulations or government instructions; Causes unique to the characteristics of network services, such as the failure of domestic and foreign basic telecom operators, the damage of infrastructure such as optical cables, the technical defects related to computers or the Internet, the limitation of Internet coverage, computer viruses, hacker attacks and other factors; and other unforeseeable, unavoidable and insurmountable objective situations within the legal scope.
_layouts/terms.html/html/body/div/div/p = 12、Terms of Use
_layouts/terms.html/html/body/div/div/p = （1）You have the right to choose the content of Maximtop services and receive technical support from Maximtop.
_layouts/terms.html/html/body/div/div/p = （2）You guarantee that you will comply with national and local laws and regulations, industry practices and social public ethics when using Maximtop services or publishing content through Maximtop services, and will not use Maximtop services to store, publish and disseminate the following information and content:
_layouts/terms.html/html/body/div/div/p = （a）Any content (information) that violates national laws, regulations and policies;
_layouts/terms.html/html/body/div/div/p = （b）Political propaganda or information that violates state regulations;
_layouts/terms.html/html/body/div/div/p = （c）Information involving state secrets or security;
_layouts/terms.html/html/body/div/div/p = （d）Feudal superstition or obscene, pornographic, obscene or instigating information;
_layouts/terms.html/html/body/div/div/p = （e）Gambling prizes, gambling games;
_layouts/terms.html/html/body/div/div/p = （f）Information that violates the national ethnic and religious policies;
_layouts/terms.html/html/body/div/div/p = （g）Information that interferes with the security of the Internet;
_layouts/terms.html/html/body/div/div/p = （h）Information that infringes upon the legitimate rights and interests of others;
_layouts/terms.html/html/body/div/div/p = （i）Other information or content that is detrimental to public order, public security or public morals.
_layouts/terms.html/html/body/div/div/p = （3）If you violate the above commitments, the consequences of such actions have nothing to do with Maximtop. If there is a definite record to prove that you have violated the above commitments, Maximtop can terminate the service contract relationship with you and claim corresponding compensation.
_layouts/terms.html/html/body/div/div/p = （4）You shall comply with all other regulations and procedures of the Maximtop. You must bear legal responsibility for your actions in the process of using Maximtop services. The forms of your legal liability include, but are not limited to, compensation for the infringed person, and equal compensation for Maximtop after Maximtop first bears the administrative penalty or tort damages caused by your actions. If you violate the above regulations, Maximtop has the right to immediately suspend or terminate some or all of its services to you at its independent judgment, including freezing or canceling the use rights of your account.
_layouts/terms.html/html/body/div/div/p = （5）For information you publish using Maximtop, Maximtop reserves the right to filter keywords of its communication information according to relevant national laws and regulations. If it is found that the content you send clearly violates relevant national laws and regulations, Maximtop has the right to make measures including but not limited to dissuasion, interception, and even reporting to relevant public security departments.
_layouts/terms.html/html/body/div/div/p = （6）The third party entrusted by Maximtop or Maximtop products has the right to review the application products and content provided by you, including but not limited to content review, functional testing, security testing, etc. If it is found that your application products do not comply with national laws, regulations and policies, or the application products you provide may infringe upon the legitimate rights and interests of others or contain advertising information to other third parties, or other circumstances that do not meet the requirements, Maximtop has the right not to provide services to them; If services have been provided, Maximtop has the right to immediately stop continuing to provide services to them, and keep relevant records and report to relevant competent departments. However, this agreement shall not be regarded as the legal guarantee provided by Maximtop for the application products provided by you, and you shall provide the guarantee for the application products by yourself and bear all responsibilities arising therefrom.
_layouts/terms.html/html/body/div/div/p = （7）If you need to obtain permission or approval from relevant state departments for business or non-business activities through services provided by Maximtop, you should obtain it first.
_layouts/terms.html/html/body/div/div/p = （8）You may not modify, translate, publish, adapt, rent, sublicense or otherwise distribute or transfer services or software provided by Maximtop except as licensed. Nor shall you reverse engineer, decompile or attempt to otherwise discover any source code of Maximtop.
_layouts/terms.html/html/body/div/div/p = （9）You warrant that you shall not abuse Maximtop services, including but not limited to using Maximtop services to infringe upon the intellectual property rights or legitimate interests of Maximtop or others, and shall not use Maximtop services to provide services directly competitive with Maximtop to third parties. If Maximtop finds that you violate the Terms of Use, it has the right to take corresponding measures according to the situation, including but not limited to immediately terminating the service, suspending the service or deleting the corresponding information, etc. If a third-party organization or individual questions or complaints about you, Maximtop will inform you that you have the responsibility to explain and issue supporting materials within the specified time. If you fail to provide evidence to the contrary or you fail to give feedback within the time limit, Maximtop will take measures including but not limited to immediate terminating of service, suspension of service or deletion of corresponding information. If Maximtop fails to contact you due to your failure to update your contact information in time or incorrect contact information, it will also be regarded as your failure to give feedback within the time limit.
_layouts/terms.html/html/body/div/div/p = （10）You understand that Maximtop cannot guarantee that its services are flawless, but Maximtop is committed to continuously improving the quality and level of services. Therefore, you agree that even if there are defects in the services provided by Maximtop, the above defects are inevitable at the technical level of the industry at that time, and they will not be regarded as Maximtop's breach of contract. You agree to cooperate with Maximtop to solve the above defects.
_layouts/terms.html/html/body/div/div/p = （11）If you request to terminate the service before the expiration of the service period in Maximtop, Maximtop will confirm whether you meet the conditions for termination of service and refund according to the processing procedures, which are subject to the relevant regulations of Maximtop.
_layouts/terms.html/html/body/div/div/p = 13、Application of Law and Jurisdiction
_layouts/terms.html/html/body/div/div/p = （1）If any provision in these Terms of Service are empty valued and void in whole or in part, or unenforceable for any reason, the remaining provisions of these Terms of Service shall remain valid and binding.
_layouts/terms.html/html/body/div/div/p = （2）The validity, interpretation, variation, enforcement and dispute resolution of these  Terms of Service shall be governed by the laws of the People's Republic of China. Disputes arising from these Terms of Service shall first be settled through friendly negotiation. If negotiation fails, they shall be settled in accordance with the laws of the People's Republic of China and submitted to the court with jurisdiction in the place where our company is located for litigation.
_layouts/terms.html/html/body/div/div/p = （3）Customers' comments or suggestions on any part of Maximtop services or any part of these Terms of Service can be contacted by email with our company. Our email:
_layouts/terms.html/html/body/div/div/p = Our company reserves the right to interpret these Terms of Service.
docs/android/allclasses-frame.html/html/head/title = All classes (floo-android api)
docs/android/allclasses-frame.html/html/body/h1 = All classes
docs/android/allclasses-frame.html/html/body/div/ul/li/attr-title = Classes in im.floo.floolib
docs/android/allclasses-frame.html/html/body/div/ul/li/attr-title = Enums in im.floo.floolib
docs/android/constant-values.html/html/head/title = Constant field value (floo-android api)
docs/android/constant-values.html/html/body/noscript/div = JavaScript is disabled in your browser.
docs/android/constant-values.html/html/body/div/div/attr-title = Skip navigation connection
docs/android/constant-values.html/html/body/div/attr-title = Navigation
docs/android/constant-values.html/html/body/div/ul/li/a = package
docs/android/constant-values.html/html/body/div/ul/li = Class
docs/android/constant-values.html/html/body/div/ul/li/a = Tree
docs/android/constant-values.html/html/body/div/ul/li/a = Obsolete
docs/android/constant-values.html/html/body/div/ul/li/a = Index
docs/android/constant-values.html/html/body/div/ul/li/a = Help
docs/android/constant-values.html/html/body/div/ul/li = Previous
docs/android/constant-values.html/html/body/div/ul/li = Next
docs/android/constant-values.html/html/body/div/ul/li/a = Frame
docs/android/constant-values.html/html/body/div/ul/li/a = Frameless
docs/android/constant-values.html/html/body/div/attr-title = Constant field value
docs/android/constant-values.html/html/body/div/attr-title = Directory
docs/android/deprecated-list.html/html/head/title = Obsolete list (floo-android api)
docs/android/deprecated-list.html/html/body/div/attr-title = Obsolete API
docs/android/help-doc.html/html/head/title = API help (floo-android api)
docs/android/help-doc.html/html/body/div/h1 = How this API document organized
docs/android/help-doc.html/html/body/div/div = This API (application programming interface) document contains the pages corresponding to Navigation bar entries, as described below.
docs/android/help-doc.html/html/body/div/ul/li/p = Each package has a page containing a list of its classes and interfaces, and a summary thereof. This page can contain 6 classes:
docs/android/help-doc.html/html/body/div/ul/li/ul/li = Interface (italics)
docs/android/help-doc.html/html/body/div/ul/li/ul/li = Enum
docs/android/help-doc.html/html/body/div/ul/li/ul/li = Exception error
docs/android/help-doc.html/html/body/div/ul/li/ul/li = Error
docs/android/help-doc.html/html/body/div/ul/li/ul/li = Annotation type
docs/android/help-doc.html/html/body/div/ul/li/h2 = Class/interface
docs/android/help-doc.html/html/body/div/ul/li/p = Each class, interface, nested class, and nested interface has its own page. Each page consists of three parts (class/interface description, profile table, and detailed member description):
docs/android/help-doc.html/html/body/div/ul/li/ul/li = Class inheritance diagram
docs/android/help-doc.html/html/body/div/ul/li/ul/li = Direct subclass
docs/android/help-doc.html/html/body/div/ul/li/ul/li = All known sub-interfaces
docs/android/help-doc.html/html/body/div/ul/li/ul/li = All known implementation classes
docs/android/help-doc.html/html/body/div/ul/li/ul/li = Class/interface declaration
docs/android/help-doc.html/html/body/div/ul/li/ul/li = Class/interface description
docs/android/help-doc.html/html/body/div/ul/li/ul/li = Nested class profile
docs/android/help-doc.html/html/body/div/ul/li/ul/li = Field profile
docs/android/help-doc.html/html/body/div/ul/li/ul/li = Constructor profile
docs/android/help-doc.html/html/body/div/ul/li/ul/li = Method profile
docs/android/help-doc.html/html/body/div/ul/li/ul/li = Field details
docs/android/help-doc.html/html/body/div/ul/li/ul/li = Constructor details
docs/android/help-doc.html/html/body/div/ul/li/ul/li = Method details
docs/android/help-doc.html/html/body/div/ul/li/p = Each profile entry contains the first sentence of the detailed description of the item. Profile entries are arranged in alphabetical order, while detailed descriptions are arranged in the order in which they appear in the source code. This preserves the logical grouping established by programmers.
docs/android/help-doc.html/html/body/div/ul/li/p = Each annotation type has its own page with the following sections:
docs/android/help-doc.html/html/body/div/ul/li/ul/li = Annotation type declaration
docs/android/help-doc.html/html/body/div/ul/li/ul/li = Annotation type description
docs/android/help-doc.html/html/body/div/ul/li/ul/li = Required element profile
docs/android/help-doc.html/html/body/div/ul/li/ul/li = Optional element profile
docs/android/help-doc.html/html/body/div/ul/li/ul/li = Element details
docs/android/help-doc.html/html/body/div/ul/li/p = Each enum has its own page with the following sections:
docs/android/help-doc.html/html/body/div/ul/li/ul/li = Enum declaration
docs/android/help-doc.html/html/body/div/ul/li/ul/li = Enum description
docs/android/help-doc.html/html/body/div/ul/li/ul/li = Enum constant profile
docs/android/help-doc.html/html/body/div/ul/li/ul/li = Enum constant details
docs/android/help-doc.html/html/body/div/ul/li/h2 = Tree (class hierarchy)
docs/android/help-doc.html/html/body/div/ul/li/p = For all packages, there is a
docs/android/help-doc.html/html/body/div/ul/li/p/a = class hierarchy
docs/android/help-doc.html/html/body/div/ul/li/p = page containing the hierarchy of each package. Each hierarchy page contains a list of classes and a list of interfaces. From
docs/android/help-doc.html/html/body/div/ul/li/p = here, all classes are arranged by inheritance structure. No inheritance from
docs/android/help-doc.html/html/body/div/ul/li/p = for interfaces.
docs/android/help-doc.html/html/body/div/ul/li/ul/li = When viewing the Overview page, clicking the Tree will show the hierarchy of all packages.
docs/android/help-doc.html/html/body/div/ul/li/ul/li = When viewing a particular package, class, or interface page, clicking "Tree" will show only the hierarchy of the package.
docs/android/help-doc.html/html/body/div/ul/li/p = The page lists all the obsolete APIs. Often because of improvements and an alternative API is provided, it is recommended not to use an obsolete API. In the future implementation process, obsolete APIs may be deleted.
docs/android/help-doc.html/html/body/div/ul/li/p = Contains an alphabetical list of all classes, interfaces, constructors, methods, and fields.
docs/android/help-doc.html/html/body/div/ul/li/h2 = Previous/next
docs/android/help-doc.html/html/body/div/ul/li/p = These connections allow you to go to the next or previous class, interface, package, or related page.
docs/android/help-doc.html/html/body/div/ul/li/h2 = Frame/frameless
docs/android/help-doc.html/html/body/div/ul/li/p = These connections are used to show and hide HTML frames. All pages are displayed in framed and frameless modes.
docs/android/help-doc.html/html/body/div/ul/li/p = The connections show all classes and interfaces (except for non-static nested types).
docs/android/help-doc.html/html/body/div/ul/li/h2 = Serialized table
docs/android/help-doc.html/html/body/div/ul/li/p = Each serializable or externalizable class has a description of its serialized fields and methods. This information is useful for re-implementers, but not for developers who use API. Although there is no connection in the navigation bar, you can get this information by going to any serialized class, and then clicking Serialized Tables in the See Also section of the class description.
docs/android/help-doc.html/html/body/div/ul/li/p = The pages lists the static final fields and their values.
docs/android/help-doc.html/html/body/div/span = This Help file is for API documentation generated using standard doclets.
docs/android/im/floo/floolib/BMXChatManager.html/html/body/script = "All methods"],2:["t2","Instance method"],8:["t4","Concrete method"
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/ul/li = Previous class
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/ul/li/a/span = Next class
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li = Profile:
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li = Nested |
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li = Field |
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/a = Constructor
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/a = Method
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li = Details:
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/attr-title = Class BMXChatManager
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/div = Chat manager
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/attr-summary = Constructor profile table, list constructor, and explanation
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/table/tr/th = Constructor and description
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/attr-summary = Method profile table, list constructor, and explanation
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/table/caption/span/span = All methods
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/table/caption/span/span/a = Instance methods
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/table/caption/span/span/a = Concrete methods
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/table/tr/th = Qualifiers and types
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/table/tr/th = Methods and description
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Send read receipt
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Add chat listener
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Delete session
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Downloaded attachments, and download state changes and progress are notified via listener
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Downloaded thumbnail, state changes and progress are notified via listener
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Thumbnail generation policy, 1 - Generated by third-party server; 2 - Generated by local server, default 1.
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Simple forwarding messages, users should create forwarding messages first through BMXMessage:: createForwardMessage ()
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Merge forwarding messages
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get all sessions
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get unread-number for all sessions (unreads for individuals and groups marked as blocked is not counted)
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get the list of user-ids that have read group messages
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Read a message
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Insert a message
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Launch a session
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Mark this message and all previous messages as read, and synchronize to all current users’ devices
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set unread
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Recall a message, and the message status change is notified via listener
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Remove chat listener
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Delete this message, which synchronizes to other devices of the current user
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Resend this message, and the message status change is notified via listener
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Pull message history
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Search for messages
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Send a message, and the message status change is notified via listener
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/ul/li/h3 = Method java.lang.Object that inherits from the class
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dt/span = Parameter:
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Message sent
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Message resent
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Message recalled
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Message list forwarded
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Session which the message is forwarded to
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = A new single forwarded message generated by merging the forwarded message lists
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Message sent
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = A message for which and all previous messages need to be marked as read
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = A message needs to be deleted
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Whether to synchronize to other devices, otherwise only the locally stored messages will be deleted
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = A message for which thumbnail needs to download
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = A message for which attachment needs to download
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Insert a message list
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Message id of the message to get
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Session id of the session to delete
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Whether to delete the session on other devices synchronously? Default false, means only this device session is deleted
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Session id of the session to open
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Session type, single/group chat.
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Whether to create a local session if the session does not exist, default Yes
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Unread-number
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Session for which message history needs to pull
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = The starting message Id to pull later session messages
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Maximum message-number to pull
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = [BMXErrorCode]，list of messages obtained by pull
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Keywords for search
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Start time of message search
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Maximum message-number for search
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Search direction, the default （Direction::Up）is to search from earlier messages
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = [BMXErrorCode]，list of messages obtained by search
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Messages that need to get a read list of user ids
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = [BMXErrorCode], list of user ids that have read this message
docs/android/im/floo/floolib/BMXChatManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Chat listener
docs/android/im/floo/floolib/BMXChatService.ThumbnailStrategy.html/html/body/script = "All methods"],1:["t1","Static method"],2:["t2","Instance method"],8:["t4","Concrete method"
docs/android/im/floo/floolib/BMXChatService.ThumbnailStrategy.html/html/body/div/div/ul/li/a = Enum constant
docs/android/im/floo/floolib/BMXChatService.ThumbnailStrategy.html/html/body/div/attr-title = Enum BMXChatService.ThumbnailStrategy
docs/android/im/floo/floolib/BMXChatService.ThumbnailStrategy.html/html/body/div/div/ul/li/dl/dt = All implemented interfaces:
docs/android/im/floo/floolib/BMXChatService.ThumbnailStrategy.html/html/body/div/div/ul/li/dl/dt = Enclosing class:
docs/android/im/floo/floolib/BMXChatService.ThumbnailStrategy.html/html/body/div/div/ul/li/div = Thumbnail generation policy,
docs/android/im/floo/floolib/BMXChatService.ThumbnailStrategy.html/html/body/div/div/ul/li/ul/li/attr-summary = Enum constant profile table, list of enum constants and descriptions
docs/android/im/floo/floolib/BMXChatService.ThumbnailStrategy.html/html/body/div/div/ul/li/ul/li/table/tr/th = Enum constants and descriptions
docs/android/im/floo/floolib/BMXChatService.ThumbnailStrategy.html/html/body/div/div/ul/li/ul/li/table/caption/span/span/a = Static method
docs/android/im/floo/floolib/BMXChatService.ThumbnailStrategy.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Return an enum constant of the type with a given game.
docs/android/im/floo/floolib/BMXChatService.ThumbnailStrategy.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Based-on the order in which the constants of the enum type declared, return
docs/android/im/floo/floolib/BMXChatService.ThumbnailStrategy.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = an array containing these constants.
docs/android/im/floo/floolib/BMXChatService.ThumbnailStrategy.html/html/body/div/div/ul/li/ul/li/ul/li/h3 = Method java.lang.Enum that inherits from class
docs/android/im/floo/floolib/BMXChatService.ThumbnailStrategy.html/html/body/div/div/ul/li/ul/li/ul/li/div = An array containing these constants. This method can be used for iterating
docs/android/im/floo/floolib/BMXChatService.ThumbnailStrategy.html/html/body/div/div/ul/li/ul/li/ul/li/div = constants, as follows:
docs/android/im/floo/floolib/BMXChatService.ThumbnailStrategy.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dt/span = Return:
docs/android/im/floo/floolib/BMXChatService.ThumbnailStrategy.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = An array containing the constants of the enum type returned in the order they were declared
docs/android/im/floo/floolib/BMXChatService.ThumbnailStrategy.html/html/body/div/div/ul/li/ul/li/ul/li/div = The string must exactly match
docs/android/im/floo/floolib/BMXChatService.ThumbnailStrategy.html/html/body/div/div/ul/li/ul/li/ul/li/div = the identifier of
docs/android/im/floo/floolib/BMXChatService.ThumbnailStrategy.html/html/body/div/div/ul/li/ul/li/ul/li/div/i = the enum constant
docs/android/im/floo/floolib/BMXChatService.ThumbnailStrategy.html/html/body/div/div/ul/li/ul/li/ul/li/div = used to declare the type. (Extra space characters
docs/android/im/floo/floolib/BMXChatService.ThumbnailStrategy.html/html/body/div/div/ul/li/ul/li/ul/li/div = are not allowed. )
docs/android/im/floo/floolib/BMXChatService.ThumbnailStrategy.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = The name of the enum constant to return.
docs/android/im/floo/floolib/BMXChatService.ThumbnailStrategy.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Return an enum constant with a specified name
docs/android/im/floo/floolib/BMXChatService.ThumbnailStrategy.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dt/span = Discard:
docs/android/im/floo/floolib/BMXChatService.ThumbnailStrategy.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = If this enum type has no constant with the specified name
docs/android/im/floo/floolib/BMXChatService.ThumbnailStrategy.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = If the parameter is empty valued
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/a = Nested
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/a = Field
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/attr-title = Class BMXChatService
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/div = Chat Service
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/ul/li/attr-summary = Nested profile table, list of nested classes and descriptions
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/ul/li/table/caption/span = Nested class
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/ul/li/table/tr/th = Class and description
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/ul/li/attr-summary = Field profile table, list of fields and descriptions
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/ul/li/table/tr/th = Field and description
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/ul/li/table/tr/th = Qualifier
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Send a playback receipt
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get attachment saving path
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get attachment saving path for a session
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Cancel uploading attachment
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get a list of unread user ids for the sent group message
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get a list of playback user ids for the sent group message
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get a list of unplayed user ids for the sent group message
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Mark this message as unread and synchronize to all devices of the current user
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dt/span = Override:
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd =  In class
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Messages that require to send a read receipt
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Messages that require to send a playback receipt
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Messages that require to send a re-unread receipt
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Thumbnail generation policy, 1 – generated by third-party server, 2 – Generated by local server, default 1.
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = File remote address
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = File local address
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Messages that need to cancel uploading attachment
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Session ids that need to get the session attachment path
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of messages obtained by pull, initially an empty list passed in from exterior.
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of searched message results, initially an empty list passed in from exterior.
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of user ids that read this message already, initially an empty list passed in from exterior.
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Messages that need to get a list of unread user ids
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of user ids that not read this message yet, initially an empty list passed in from exterior.
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Messages that need to get a list of playback user ids
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of user ids that played this message already, initially an empty list passed in from exterior.
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Messages that need to get a list of unplayed user ids
docs/android/im/floo/floolib/BMXChatService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of user ids that not played this message yet, initially an empty list passed in from exterior
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/attr-title = Class BMXChatServiceListener
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/div = Chat listener
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Attachment download state changed
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Attachment upload state changed
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Create a new session locally
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = List of unread sessions has been loaded
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Message recall state changed
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Message received
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Command received
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Deletion received (delete messages cross devices synchronously)
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Receipt of message delivered received
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Receipt of message played received
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Receipt of message read received
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = All received messages are read (all messages are set to read before cross-device synchronization)
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Message re-unread received (cross-device synchronization for changing message status into unread)
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Canceled message received
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = System notification message received
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Messaging state changed
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Update total unread-number
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Message with state changed
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = state error code
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Message with attachment uploaded
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Progress of attachment uploading
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Message with canceling state changed
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Received list of messages
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Received list of system messages
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Received list of messages with read receipt
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Received list of messages with delivery receipt
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Received list of canceled messages
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Received list of re-unread messages
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Received list of all read messages
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Received list of deleted messages
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Messages with download state changed
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Progress of attachment downloading
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Message ID with download state changed
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Session with message history pulled
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Newly created local session
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = The latest message of the session, return for existing, empty valued for no existing
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Deleted local session id
docs/android/im/floo/floolib/BMXChatServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Unread-number of all local sessions
docs/android/im/floo/floolib/BMXClient.html/html/body/div/attr-title = Class BMXClient
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/div = Client
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Change the appId of SDK, which also update the appId in BMXConfig.
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get the current connection state with server
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Create BMXClient
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Disconnect
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Quick login by user ID (requires a successful previous login, faster login)
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Quick login by username (requires a successful previous login, faster login)
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get chat Manager
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get chat Service
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get group Manager
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get group Service
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get push Manager
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get push Service
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get friend Manager
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get friend Service
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get SDK settings
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get user Manager
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get user Service
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get the server network configuration of app, which can be called after initializing SDK and before logging in, so as to get the server configuration in advance and speed up logging in.
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Process network changes in messaging
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Force reconnection
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = When send a message, message status change will be notified via listener. When group message is sent and the specified group with group read receipt enabled,
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = the interface will automatically get group member list id and populate it into message config, with no need for client to populate itself.
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Login by user ID
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Login by username
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get the current login state
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Log out
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = To register a new user, username and password are required
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/ul/li/h3 = Method im.floo.floolib that inherits from class
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = BMXSDKConfig SDK config object that already created locally by client
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = username
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = User password
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = After successful registration, initially pass in the shared_ptr object pointing to empty, then get the profile information of the newly registered user from this function.
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = User id
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = User password (used by SDK to automatically update use token when internal token expires)
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Uid of log-out user (default 0 to log out the current logined user)
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Changed network type
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Whether the network need to be reconnected
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Newly changed appId
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Newly changed appSecret
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Newly changed appSecret
docs/android/im/floo/floolib/BMXClient.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = True for using the locally cached DNS configuration, false for getting the latest configuration from server.
docs/android/im/floo/floolib/BMXClientType.html/html/body/div/attr-title = Enum BMXClientType
docs/android/im/floo/floolib/BMXClientType.html/html/body/div/div/ul/li/div = Client type
docs/android/im/floo/floolib/BMXConnectstate.html/html/body/div/attr-title = Enum BMXConnectstate
docs/android/im/floo/floolib/BMXConnectstate.html/html/body/div/div/ul/li/div = Network connection state
docs/android/im/floo/floolib/BMXConversation.Direction.html/html/body/div/attr-title = Enum BMXConversation.Direction
docs/android/im/floo/floolib/BMXConversation.Direction.html/html/body/div/div/ul/li/div = Message search direction
docs/android/im/floo/floolib/BMXConversation.Type.html/html/body/div/attr-title = Enum BMXConversation.Type
docs/android/im/floo/floolib/BMXConversation.Type.html/html/body/div/div/ul/li/div = Session type
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/attr-title = Class BMXConversation
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/div = Session
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Session Id
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Edit message
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Extension information
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Insert a message
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Whether the user is alerted to the message, without which the session total unread-number does not count this session.
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Latest message
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Load message, starting with latest if not specified
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Total message-number in session
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Read the total message-number from current session of the database, forces to update the total message-number and unread message-number.
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Delete all messages in sesstion
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Search for messages by type, starting with latest if not specified
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Search for messages, starting with latest if not specified
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set all messages to read, update number of unread messages
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set the Edit Message
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set the Extension information
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set message playback state (valid only for voice/video messages)
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set message unread state, update unread message-number
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Unread message-number
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Update the extend field info of a database-stored message
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Session extend message
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Text message being edited by session
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Keywords for search messages
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Maximum loadable message-number
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of searched message results
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Type of searched message
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Messages that need to set playback state
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Whether the massage has been played
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Callback
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Messages that need to set as read state
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Whether messages have been set as read
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Messages that need to change the extension information, where the msg section has updated its extend field information
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Message inserted
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Message ids that need to be read
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Starting message id of message loading
docs/android/im/floo/floolib/BMXConversation.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Direction of message loading, with previous message being loaded by default
docs/android/im/floo/floolib/BMXDevice.html/html/body/div/attr-title = Class BMXDevice
docs/android/im/floo/floolib/BMXDevice.html/html/body/div/div/ul/li/div = Device information
docs/android/im/floo/floolib/BMXDevice.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Device serial number
docs/android/im/floo/floolib/BMXDevice.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Whether for the current device
docs/android/im/floo/floolib/BMXDevice.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Software platform
docs/android/im/floo/floolib/BMXDevice.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set user agent information
docs/android/im/floo/floolib/BMXDevice.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = User agent information
docs/android/im/floo/floolib/BMXDevice.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = User id
docs/android/im/floo/floolib/BMXDevice.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = User agent information
docs/android/im/floo/floolib/BMXFileAttachment.html/html/body/div/attr-title = Class BMXFileAttachment
docs/android/im/floo/floolib/BMXFileAttachment.html/html/body/div/div/ul/li/dl/dt = Directly known subclass:
docs/android/im/floo/floolib/BMXFileAttachment.html/html/body/div/div/ul/li/div = Message file attachment
docs/android/im/floo/floolib/BMXFileAttachment.html/html/body/div/div/ul/li/ul/li/ul/li/h3 = Nested class/interface im.floo.floolib that inherits from class.
docs/android/im/floo/floolib/BMXFileAttachment.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Constructor to build the message attachment of sent file
docs/android/im/floo/floolib/BMXFileAttachment.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Constructor to build the message attachment of received file
docs/android/im/floo/floolib/BMXFileAttachment.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Cloning function
docs/android/im/floo/floolib/BMXFileAttachment.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Display name
docs/android/im/floo/floolib/BMXFileAttachment.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Attachment download state
docs/android/im/floo/floolib/BMXFileAttachment.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = File length
docs/android/im/floo/floolib/BMXFileAttachment.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Local path
docs/android/im/floo/floolib/BMXFileAttachment.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Type of returned file
docs/android/im/floo/floolib/BMXFileAttachment.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Remote URL
docs/android/im/floo/floolib/BMXFileAttachment.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Local file path
docs/android/im/floo/floolib/BMXFileAttachment.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = File display name
docs/android/im/floo/floolib/BMXFileAttachment.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = ratel server address
docs/android/im/floo/floolib/BMXFileAttachment.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = File size
docs/android/im/floo/floolib/BMXGroup.Announcement.html/html/body/div/attr-title = Class BMXGroup.Announcement
docs/android/im/floo/floolib/BMXGroup.Announcement.html/html/body/div/div/ul/li/div = Group announcement
docs/android/im/floo/floolib/BMXGroup.Application.html/html/body/div/attr-title = Class BMXGroup.Application
docs/android/im/floo/floolib/BMXGroup.Application.html/html/body/div/div/ul/li/div = Group application
docs/android/im/floo/floolib/BMXGroup.Applicationstate.html/html/body/div/attr-title = Enum BMXGroup.Applicationstate
docs/android/im/floo/floolib/BMXGroup.Applicationstate.html/html/body/div/div/ul/li/div = Group application state
docs/android/im/floo/floolib/BMXGroup.BannedMember.html/html/body/div/attr-title = Class BMXGroup.BannedMember
docs/android/im/floo/floolib/BMXGroup.BannedMember.html/html/body/div/div/ul/li/div = Banned group members
docs/android/im/floo/floolib/BMXGroup.Groupstate.html/html/body/div/attr-title = Enum BMXGroup.Groupstate
docs/android/im/floo/floolib/BMXGroup.Groupstate.html/html/body/div/div/ul/li/div = Grouping state
docs/android/im/floo/floolib/BMXGroup.GroupType.html/html/body/div/attr-title = Enum BMXGroup.GroupType
docs/android/im/floo/floolib/BMXGroup.GroupType.html/html/body/div/div/ul/li/div = Group type
docs/android/im/floo/floolib/BMXGroup.Invitation.html/html/body/div/attr-title = Class BMXGroup.Invitation
docs/android/im/floo/floolib/BMXGroup.Invitation.html/html/body/div/div/ul/li/div = Group invitations
docs/android/im/floo/floolib/BMXGroup.Invitationstate.html/html/body/div/attr-title = Enum BMXGroup.Invitationstate
docs/android/im/floo/floolib/BMXGroup.Invitationstate.html/html/body/div/div/ul/li/div = Group invitation state
docs/android/im/floo/floolib/BMXGroup.InviteMode.html/html/body/div/attr-title = Enum BMXGroup.InviteMode
docs/android/im/floo/floolib/BMXGroup.InviteMode.html/html/body/div/div/ul/li/div = Group invitation mode
docs/android/im/floo/floolib/BMXGroup.JoinAuthMode.html/html/body/div/attr-title = Enum BMXGroup.JoinAuthMode
docs/android/im/floo/floolib/BMXGroup.JoinAuthMode.html/html/body/div/div/ul/li/div = Group joining authentication mode
docs/android/im/floo/floolib/BMXGroup.Member.html/html/body/div/attr-title = Class BMXGroup.Member
docs/android/im/floo/floolib/BMXGroup.Member.html/html/body/div/div/ul/li/div = Group members
docs/android/im/floo/floolib/BMXGroup.MemberRoleType.html/html/body/div/attr-title = Enum BMXGroup.MemberRoleType
docs/android/im/floo/floolib/BMXGroup.MemberRoleType.html/html/body/div/div/ul/li/div = Group member roles
docs/android/im/floo/floolib/BMXGroup.ModifyMode.html/html/body/div/attr-title = Enum BMXGroup.ModifyMode
docs/android/im/floo/floolib/BMXGroup.ModifyMode.html/html/body/div/div/ul/li/div = Group information modification mode
docs/android/im/floo/floolib/BMXGroup.MsgMuteMode.html/html/body/div/attr-title = Enum BMXGroup.MsgMuteMode
docs/android/im/floo/floolib/BMXGroup.MsgMuteMode.html/html/body/div/div/ul/li/div = Group message blocking mode
docs/android/im/floo/floolib/BMXGroup.MsgPushMode.html/html/body/div/attr-title = Enum BMXGroup.MsgPushMode
docs/android/im/floo/floolib/BMXGroup.MsgPushMode.html/html/body/div/div/ul/li/div = Message notification type
docs/android/im/floo/floolib/BMXGroup.SharedFile.html/html/body/div/attr-title = Class BMXGroup.SharedFile
docs/android/im/floo/floolib/BMXGroup.SharedFile.html/html/body/div/div/ul/li/div = Group shared file
docs/android/im/floo/floolib/BMXGroup.UpdateInfoType.html/html/body/div/attr-title = Enum BMXGroup.UpdateInfoType
docs/android/im/floo/floolib/BMXGroup.UpdateInfoType.html/html/body/div/div/ul/li/div = Group information update type
docs/android/im/floo/floolib/BMXGroup.html/html/body/div/attr-title = Class BMXGroup
docs/android/im/floo/floolib/BMXGroup.html/html/body/div/div/ul/li/div = Group
docs/android/im/floo/floolib/BMXGroup.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Group admin-number
docs/android/im/floo/floolib/BMXGroup.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Local path of downloaded group avatar
docs/android/im/floo/floolib/BMXGroup.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Ratel address of group avatar
docs/android/im/floo/floolib/BMXGroup.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Local path of downloaded group avatar thumbnail
docs/android/im/floo/floolib/BMXGroup.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Group avatar thumbnail address
docs/android/im/floo/floolib/BMXGroup.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Group avatar
docs/android/im/floo/floolib/BMXGroup.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Banned user-number
docs/android/im/floo/floolib/BMXGroup.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Blacklisted user-number
docs/android/im/floo/floolib/BMXGroup.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Max member-number
docs/android/im/floo/floolib/BMXGroup.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Group creation time
docs/android/im/floo/floolib/BMXGroup.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Group description
docs/android/im/floo/floolib/BMXGroup.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Whether group message read feature enabled
docs/android/im/floo/floolib/BMXGroup.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Group extension information
docs/android/im/floo/floolib/BMXGroup.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Group Id
docs/android/im/floo/floolib/BMXGroup.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = state of the current group
docs/android/im/floo/floolib/BMXGroup.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Type of the current group (Private, Public, Chatroom)
docs/android/im/floo/floolib/BMXGroup.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Whether to load and display the chat history
docs/android/im/floo/floolib/BMXGroup.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Group invitation mode
docs/android/im/floo/floolib/BMXGroup.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Group joining approval mode
docs/android/im/floo/floolib/BMXGroup.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Latest group announcement id
docs/android/im/floo/floolib/BMXGroup.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Group member-number, including Owner, Admins and Members
docs/android/im/floo/floolib/BMXGroup.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Group message blocking mode
docs/android/im/floo/floolib/BMXGroup.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Group message notification type
docs/android/im/floo/floolib/BMXGroup.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Group member nickname
docs/android/im/floo/floolib/BMXGroup.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Group name
docs/android/im/floo/floolib/BMXGroup.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Group Owner
docs/android/im/floo/floolib/BMXGroup.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Type of a member role in group
docs/android/im/floo/floolib/BMXGroup.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Shared file-number in group
docs/android/im/floo/floolib/BMXGroup.html/html/body/div/div/ul/li/ul/li/ul/li/div = state of the current group. (Normal, Destroyed)
docs/android/im/floo/floolib/BMXGroup.html/html/body/div/div/ul/li/ul/li/ul/li/div = Whether the current user is a group member
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/attr-title = Class BMXGroupManager
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/div = Group Manager
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Accept application of membership
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Accept to join group
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Add Admin
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Add group change listener
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Add group member
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Ban
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Add to blacklist
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Modify shared file name in group
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Create group
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Reject application of membership
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Reject invitation to join group
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Delete group announcement
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Destroy group
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Download group avatar
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Download share file in group
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Write group announcement
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get Admins list, pull from server if forceRefreshed is set
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get group announcements list
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get a list of group applications in pages
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get a list of banned members
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get blacklist
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get group list, pull from server if forceRefreshed is set
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get the list of group information for the incoming group id, pull from server if forceRefreshed is set
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get group information, pull from server if forceRefreshed is set
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get group details, pull the latest information from server
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get group invitation list in pages
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get the latest group announcement
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get group member list, pull from server if forceRefresh is set, up to 1,000
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get a list of share files in group
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Join a group, which may require admin approval depending on group settings
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Quit group
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set whether to block group messages
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Remove admin
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Remove group change listener
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Remove group member
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Remove shared file in group
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set group avatar
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set group description
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set whether group message read is enabled
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set group extension information
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set invitation mode
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set approval mode for joining group
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set group message notification mode
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set nickname in group
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set group name
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Transfer of group Owner
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Unban
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Unblacklist
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Add shared file in group
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Set as true to force fetch from sever, SDK will automatically fetch from server if local fetch failed
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = [BMXErrorCode], group id list
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Group id list
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = [BMXErrorCode], group details list
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Group id to search for
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = [BMXErrorCode], group details returned by search
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = The Starting cursor paged, passed in empty value first, followed by the last returned cursor
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Page size
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = [BMXErrorCode], paged list of group invitation
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of group ids that need to get group application list details
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = [BMXErrorCode], paged list of group application
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Parameter options passed in when group created
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = [BMXErrorCode], created group
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = [BMXErrorCode], group to destroy
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Group to join
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Information for group membership application
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Group to quit
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = [BMXErrorCode], the group to get its latest information
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Group to operate on
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = [BMXErrorCode], group member list
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of member ids to add to group
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Reason for adding member
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of group member ids to remove
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Reason for removal
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of member ids to add as Admin
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Reason for adding as Admin
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of member ids to remove as Admin
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Reason to remove Admin
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = [BMXErrorCode], list of group Admins
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of group member ids to be blacklisted
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of user ids removed from blacklist
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = [BMXErrorCode], list of group blacklists
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of banned group member ids
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Length of banning
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Reason for banning
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of member ids that unbanned
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = [BMXErrorCode], list of group bans
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Group blocking mode
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = User id applying to join group
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Reason for rejection
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Inviter id
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = User id transferred as new group Owner
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Display name of file
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Extension name of file
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Upload callback function
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Deleted group shared file
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Downloaded group shared file
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Download callback function
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = [BMXErrorCode], list of group shared files
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Group shared file to change
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = ^H Names of group shared files that modified
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = [BMXErrorCode], latest group announcement
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = [BMXErrorCode], list of group announcements
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Tittle of group announcement
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Content of group announcement
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Deleted group announcement id
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Group name
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Group description
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Group extension information
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = User nickname in group
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Group notification mode
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Join approval mode
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Group invitation mode
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Local path of group avatar file
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Group change listener
docs/android/im/floo/floolib/BMXGroupManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Enable or not
docs/android/im/floo/floolib/BMXGroupService.CreateGroupOptions.html/html/body/div/attr-title = Class BMXGroupService.CreateGroupOptions
docs/android/im/floo/floolib/BMXGroupService.CreateGroupOptions.html/html/body/div/div/ul/li/div = Group creation options
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/attr-title = Class BMXGroupService
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/div/ul/li/div = Group Service
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Cancel downloading group shared files
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Cancel uploading group shared files
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Query local group information by group name and retrieve the group from local database by group name query
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Paged to get ban list
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Paged to get blacklist
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get list of group members in pages, pull from server if forceRefresh is set, up to 500 per page.
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get group member details
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set whether group members are allowed to set group information
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set whether group members are allowed to enable visible message history
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of group id, pass in an empty list function and fetch the returned group id list here
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of group details, pass in an empty list function and fetch the returned group details list here
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Group information returned by searching, pass in a pointing-to-empty objective function shared_ptr and fetch the returned result here
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Group list information returned by searching
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Group name keywords for query
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Created groups, pass in a pointing-to-empty objective function shared_ptr and fetch returned result here
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Group to destroy
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = The group to get its latest information
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = The member id to get its group member details
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Group member details returned, pass in an empty list to get group member details list here after function executed
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of group invitations in pages, pass in a pointing-to-empty shared_ptr objective function and fetch the returned result here
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of membership applications in pages, pass in a pointing-to-empty shared_ptr objective function and fetch the returned result here
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of group members in pages, pass in a pointing-to-empty shared_ptr objective function and fetch the returned result here
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of group members, pass in an empty list to get group details list here after function executed
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of group Admins, pass in an empty list to get group details list here after function executed
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of blacklist details in pages, pass in a pointing-to-empty shared_ptr objective function and fetch the returned result here
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of group blacklist details, pass in an empty list to get group details list here after function executed
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of bans in pages, pass in a pointing-to-empty shared_ptr objective function and fetch the returned result here
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of bans, pass in an empty list to get group details list here after function executed
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of group shared files, pass in an empty list to get group details list here after function executed
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Latest group announcement, pass in a pointing-to-empty shared_ptr objective function and fetch the latest group announcement here
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of group announcements, pass in an empty list to get group details list here after function executed
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Allowed operation or not
docs/android/im/floo/floolib/BMXGroupService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Set as true for downloading thumbnail, false for downloading original image
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/attr-title = Class BMXGroupServiceListener
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/div = Group change listener
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = New Admin added
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Admin removed
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Group announcement received
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Join group accepted
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Join group rejected
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Group membership application received
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Delete blacklist
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Create a group cross-device synchronously
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Group information changes
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Join a group
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Quit a group
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Triggered when client pulls a new group from server, used to update user group list, and call local fetching group via SDK for all member information
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Group list updated
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Group invitation received
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Group invitation accepted
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Member nickname changed
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = New member added
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Member quit
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Member banned
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Member unbanned
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Become group Owner
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Shared file deleted
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Name of shared file updated
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Share file received
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = New created group
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Group list updated
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Group joined
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Group quitted
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Reason for quit
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Group id invited to
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Reason for invitation
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = A group in which invitation agreed
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Invitee id
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = A group in which invitation rejected
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Reason for rejection
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = A group in which membership application received
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Applicant id
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Reason for application
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = A group in which membership application accepted
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Approver of application
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = A group in which membership application rejected
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = A group in which member banned
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = A group in which member unbanned
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = A group in which new member added
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = New added member id
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = A group in which member quit
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Id of quit member
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Reason for quit
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = A group in which new Admin added
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of members that promoted to Admin
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Group that Admin removed
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of members that Admin removed
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Reason for removal
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = A group in which Owner transferred
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = A group in which group information changed
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Group information type that changed
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = A group in which member nickname changed
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Member id for which nickname changed
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Nickname after change
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = A group in which announcement changed
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Latest group announcement after change
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = A group in which shared file uploaded
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = New uploaded group shared file
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = A group in which shared file deleted
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Deleted group shared file
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = A group in which shared file updated
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Updated group shared file
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = A group in which blacklist added
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of added blacklist members
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = A group in which blacklist removed
docs/android/im/floo/floolib/BMXGroupServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of removed blacklist members
docs/android/im/floo/floolib/BMXImageAttachment.html/html/body/div/attr-title = Class BMXImageAttachment
docs/android/im/floo/floolib/BMXImageAttachment.html/html/body/div/div/ul/li/div = Message picture attachment
docs/android/im/floo/floolib/BMXImageAttachment.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Constructor, to build the message attachment of sent picture
docs/android/im/floo/floolib/BMXImageAttachment.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Constructor, to build the message attachment of received picture
docs/android/im/floo/floolib/BMXImageAttachment.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set a thumbnail for sent picture
docs/android/im/floo/floolib/BMXImageAttachment.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Picture size
docs/android/im/floo/floolib/BMXImageAttachment.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Thumbnail downloading state
docs/android/im/floo/floolib/BMXImageAttachment.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Local path of thumbnail
docs/android/im/floo/floolib/BMXImageAttachment.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Return the type of picture attachment
docs/android/im/floo/floolib/BMXImageAttachment.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Local path
docs/android/im/floo/floolib/BMXImageAttachment.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Picture size, width, and height
docs/android/im/floo/floolib/BMXImageAttachment.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Display name
docs/android/im/floo/floolib/BMXLocationAttachment.html/html/body/div/attr-title = Class BMXLocationAttachment
docs/android/im/floo/floolib/BMXLocationAttachment.html/html/body/div/div/ul/li/div = Location message attachment
docs/android/im/floo/floolib/BMXLocationAttachment.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Constructor
docs/android/im/floo/floolib/BMXLocationAttachment.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Latitude
docs/android/im/floo/floolib/BMXLocationAttachment.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Longitude
docs/android/im/floo/floolib/BMXLocationAttachment.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Return the type of location attachment
docs/android/im/floo/floolib/BMXLocationAttachment.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Latitude
docs/android/im/floo/floolib/BMXLocationAttachment.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Longitude
docs/android/im/floo/floolib/BMXLocationAttachment.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Address name
docs/android/im/floo/floolib/BMXLogLevel.html/html/body/div/attr-title = Enum BMXLogLevel
docs/android/im/floo/floolib/BMXLogLevel.html/html/body/div/div/ul/li/div = Log level
docs/android/im/floo/floolib/BMXMessage.ContentType.html/html/body/div/attr-title = Enum BMXMessage.ContentType
docs/android/im/floo/floolib/BMXMessage.ContentType.html/html/body/div/div/ul/li/div = Type of message content
docs/android/im/floo/floolib/BMXMessage.DeliveryQos.html/html/body/div/attr-title = Enum BMXMessage.DeliveryQos
docs/android/im/floo/floolib/BMXMessage.DeliveryQos.html/html/body/div/div/ul/li/div = Messaging quality
docs/android/im/floo/floolib/BMXMessage.Deliverystate.html/html/body/div/attr-title = Enum BMXMessage.Deliverystate
docs/android/im/floo/floolib/BMXMessage.Deliverystate.html/html/body/div/div/ul/li/div = Messaging state
docs/android/im/floo/floolib/BMXMessage.MessageType.html/html/body/div/attr-title = Enum BMXMessage.MessageType
docs/android/im/floo/floolib/BMXMessage.MessageType.html/html/body/div/div/ul/li/div = Message type
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/attr-title = Class BMXMessage
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Message attachment, BMXMessage owns the attachment and is responsible for releasing it
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Message client ID, only exists on message sender-side
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Local timestamp (local time when message created or received)
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Message settings
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Message text content
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Message content type, attachment-type with attachment, text-type with no attachment
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Session ID that message belongs to
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Create a sent command message (command message holds command information in a content field or an extension field)
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Create a received command message (command message holds command information in a content field or an extension field)
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Create a forwarding message
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Create a sent-attachment message
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Create a text message
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Create a received message
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = QOS of messaging
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Message extension information
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Message sender ID
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = AckCount of read group messages
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Whether all group messages are read
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = AckCount of unread group messages
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get count of played group messages
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set all playback receipts of group messages as read
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get count of unread playback receipts of group messages
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Show sender whether message has been delivered to the other party, and show receiver whether message delivered receipt has been sent
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Whether voice or video message receives a playback receipt, valid only for received audio/video messages
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Whether voice or video message has been played, valid only for received audio/video messages
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Whether it is a push message
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Message read or unread mark
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Show sender whether read receipt received, and show receiver whether message read receipt sent
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Message whether to receive
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Message unique ID
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Message diffusion priority
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Display name of message sender
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Message timestamp (when received by server-side)
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set message local timestamp
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set message config information
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set QOS of messaging
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set messaging state
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set message extension information
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set groupAckCount of read messages (an SDK internal calling interface that shall not be called by upper layer)
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set groupAckCount of unread messages (an SDK internal calling interface that shall not be called by upper layer)
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set message diffusion priority, default 0.
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set whether to push messages
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set display name of message sender
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set message timestamp (when received by server-side)
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Message receiver ID
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Message text content
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = QOS of messaging
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Set the count of read group messages
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Set the count of unread group messages
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/ul/li/div = Set message diffusion priority, default 0. 0 means diffusion, and the smaller the number, the more diffused.
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/ul/li/div = Value range 0-10. The default level of messages sent by ordinary users in chatroom is 5, which can be discarded. Admin level defaults to 0 and will not be discarded. Other values can be set according to business.
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Message sender
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Message receiver
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Message type
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Session id
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Message content
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Attachment
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Message id
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Server timestamp
docs/android/im/floo/floolib/BMXMessage.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Message to forward
docs/android/im/floo/floolib/BMXMessageAttachment.Downloadstate.html/html/body/div/attr-title = Enum BMXMessageAttachment.Downloadstate
docs/android/im/floo/floolib/BMXMessageAttachment.Size.html/html/body/div/attr-title = Class BMXMessageAttachment.Size
docs/android/im/floo/floolib/BMXMessageAttachment.Size.html/html/body/div/div/ul/li/div = Picture/video size
docs/android/im/floo/floolib/BMXMessageAttachment.Type.html/html/body/div/attr-title = Enum BMXMessageAttachment.Type
docs/android/im/floo/floolib/BMXMessageAttachment.Type.html/html/body/div/div/ul/li/div = Attachment type
docs/android/im/floo/floolib/BMXMessageAttachment.html/html/body/div/attr-title = Class BMXMessageAttachment
docs/android/im/floo/floolib/BMXMessageAttachment.html/html/body/div/div/ul/li/div = Message attachment
docs/android/im/floo/floolib/BMXMessageAttachment.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Copy attachment
docs/android/im/floo/floolib/BMXMessageConfig.BadgeCountType.html/html/body/div/attr-title = Enum BMXMessageConfig.BadgeCountType
docs/android/im/floo/floolib/BMXMessageConfig.html/html/body/div/attr-title = Class BMXMessageConfig
docs/android/im/floo/floolib/BMXMessageConfig.html/html/body/div/div/ul/li/div = Message configuration
docs/android/im/floo/floolib/BMXMessageConfig.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Member of group member id list with read messages added
docs/android/im/floo/floolib/BMXMessageConfig.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = List of member ids with read group messages emptied
docs/android/im/floo/floolib/BMXMessageConfig.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get Android message configuration
docs/android/im/floo/floolib/BMXMessageConfig.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get the list of group member ids that require read group messages
docs/android/im/floo/floolib/BMXMessageConfig.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get iOS message configuration
docs/android/im/floo/floolib/BMXMessageConfig.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get whether to @ all members
docs/android/im/floo/floolib/BMXMessageConfig.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get @ message
docs/android/im/floo/floolib/BMXMessageConfig.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get @ member list
docs/android/im/floo/floolib/BMXMessageConfig.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get push message
docs/android/im/floo/floolib/BMXMessageConfig.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get start time of push message displayed
docs/android/im/floo/floolib/BMXMessageConfig.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get end time of push message displayed
docs/android/im/floo/floolib/BMXMessageConfig.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get tittle of push message
docs/android/im/floo/floolib/BMXMessageConfig.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get nickname of sender
docs/android/im/floo/floolib/BMXMessageConfig.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Empty the list of member ids that require read group messages
docs/android/im/floo/floolib/BMXMessageConfig.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Serialization operation
docs/android/im/floo/floolib/BMXMessageConfig.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set the list of member ids that require read group messages
docs/android/im/floo/floolib/BMXMessageConfig.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set whether to @ all members
docs/android/im/floo/floolib/BMXMessageConfig.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set @ message
docs/android/im/floo/floolib/BMXMessageConfig.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set the list of notified member ids
docs/android/im/floo/floolib/BMXMessageConfig.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set push message
docs/android/im/floo/floolib/BMXMessageConfig.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set nickname of sender
docs/android/im/floo/floolib/BMXNetworkListener.html/html/body/div/attr-title = Class BMXNetworkListener
docs/android/im/floo/floolib/BMXNetworkListener.html/html/body/div/div/ul/li/div = Network listener
docs/android/im/floo/floolib/BMXNetworkType.html/html/body/div/attr-title = Enum BMXNetworkType
docs/android/im/floo/floolib/BMXNetworkType.html/html/body/div/div/ul/li/div = Network type
docs/android/im/floo/floolib/BMXPushEnvironmentType.html/html/body/div/attr-title = Enum BMXPushEnvironmentType
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/attr-title = Class BMXPushManager
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/div = Push manager
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Add push listener
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Push binding device token.
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Bind voiptoken of push device
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Clear notifications for the specified id.
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Clear tags of the push user.
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Delete tags of the push user.
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get push certificate returned by server after login.
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get push user details, force pull from server-side if forceRefresh == true
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get tags of the push user.
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get user token to use after login.
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Load the push message stored in local database.
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Remove push listener
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Restore push feature interface.
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Send a push uplink message and notify the listener of a change in message status
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set unread badge for push user.
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set whether to run push geo-fencing feature.
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set push enable state.
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set allowed push time.
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set whether to run push in background.
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set the start and end time of silent push.
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set tags of push user.
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Initialize push sdk.
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Push the current state of sdk.
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Shut push feature interface.
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Unbind user alias.
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/ul/li/div = Initialize push sdk. Use this interface to initialize the push sdk in the case of using push only. When using IM features at the same time, call login function directly in BMXClient. The config object initializes by passing in the platform type and device id.
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Current user alias used for push initialization
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = The user token passed in by App during push initialization, but not passed in without users.
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = The user alias that need to be unbound.
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Push token of device
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Voip push token of device
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Whether to force pull from server, automatically if local fetch fails
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Profile of push user, initially passing in to a pointing-to-empty shared_ptr object, from which to retrieve the user profile after function returns
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = User tag
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Operation id. Correspond to notification reminders in callback notification.
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = User tag to delete
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Number of unread badges by user
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/ul/li/div = Set push enabled state. Default enabled.
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Enabled state of push
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Start time (hour) of allowed silent push
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = End time (hour) of allowed silent push
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Start time (hour) of silent push
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = End time (hour) of silent push
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/ul/li/div = Set whether to run push in background, default false.
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Push running state in background.
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Whether geo-fencing feature running.
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Whether actively pops up user location request.
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Notification id
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Uplink push message content that sent
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/ul/li/div = Load push message stored locally in database. Start with latest message if not specified
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Start id of loading push message
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of loaded local push messages returned by database
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Direction of loading push message, default to load earlier messages
docs/android/im/floo/floolib/BMXPushManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Push listener
docs/android/im/floo/floolib/BMXPushProviderType.html/html/body/div/attr-title = Enum BMXPushProviderType
docs/android/im/floo/floolib/BMXPushService.PushDirection.html/html/body/div/attr-title = Enum BMXPushService.PushDirection
docs/android/im/floo/floolib/BMXPushService.PushDirection.html/html/body/div/div/ul/li/div = Search direction of local push message
docs/android/im/floo/floolib/BMXPushService.PushSdkstate.html/html/body/div/attr-title = Enum BMXPushService.PushSdkstate
docs/android/im/floo/floolib/BMXPushService.PushSdkstate.html/html/body/div/div/ul/li/div = push sdk state
docs/android/im/floo/floolib/BMXPushService.html/html/body/div/attr-title = Class BMXPushService
docs/android/im/floo/floolib/BMXPushService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Profile of push user, initially passing in a pointing-to-empty shared_ptr object, from which to retrieve the user profile after function returns
docs/android/im/floo/floolib/BMXPushServiceListener.html/html/body/div/attr-title = Class BMXPushServiceListener
docs/android/im/floo/floolib/BMXPushServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get push certificate after push initialization.
docs/android/im/floo/floolib/BMXPushServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Clear callback of user push success.
docs/android/im/floo/floolib/BMXPushServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Delete callback of user push success.
docs/android/im/floo/floolib/BMXPushServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get callback of user push success.
docs/android/im/floo/floolib/BMXPushServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Notification of push initialization complete.
docs/android/im/floo/floolib/BMXPushServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Notification of push feature stop.
docs/android/im/floo/floolib/BMXPushServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = New push notification received.
docs/android/im/floo/floolib/BMXPushServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set callback of user push success.
docs/android/im/floo/floolib/BMXPushServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Send notification of push uplink message status change.
docs/android/im/floo/floolib/BMXPushServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = bmxToken of current push
docs/android/im/floo/floolib/BMXPushServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Push certificate obtained from server
docs/android/im/floo/floolib/BMXPushServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Operation id
docs/android/im/floo/floolib/BMXPushServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Push notification list
docs/android/im/floo/floolib/BMXPushServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Uplink message with state change
docs/android/im/floo/floolib/BMXPushUserProfile.MessagePushSetting.html/html/body/div/attr-title = Class BMXPushUserProfile.MessagePushSetting
docs/android/im/floo/floolib/BMXPushUserProfile.html/html/body/div/attr-title = Class BMXPushUserProfile
docs/android/im/floo/floolib/BMXRosterItem.AddFriendAuthMode.html/html/body/div/attr-title = Enum BMXRosterItem.AddFriendAuthMode
docs/android/im/floo/floolib/BMXRosterItem.AddFriendAuthMode.html/html/body/div/div/ul/li/div = How roster authenticated when requested to be a friend
docs/android/im/floo/floolib/BMXRosterItem.RosterRelation.html/html/body/div/attr-title = Enum BMXRosterItem.RosterRelation
docs/android/im/floo/floolib/BMXRosterItem.RosterRelation.html/html/body/div/div/ul/li/div = Friend relationship
docs/android/im/floo/floolib/BMXRosterItem.html/html/body/div/attr-title = Class BMXRosterItem
docs/android/im/floo/floolib/BMXRosterItem.html/html/body/div/div/ul/li/div = Contact
docs/android/im/floo/floolib/BMXRosterItem.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = How roster to validate adding friend.
docs/android/im/floo/floolib/BMXRosterItem.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Comments added by user to adding friend
docs/android/im/floo/floolib/BMXRosterItem.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = How roster to validate friend.
docs/android/im/floo/floolib/BMXRosterItem.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Local storage path of friend avatar
docs/android/im/floo/floolib/BMXRosterItem.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Ratel server address of friend avatar
docs/android/im/floo/floolib/BMXRosterItem.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Local storage path of friend avatar thumbnail
docs/android/im/floo/floolib/BMXRosterItem.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Friend avatar thumbnail address
docs/android/im/floo/floolib/BMXRosterItem.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Friend avatar thumbnail server address
docs/android/im/floo/floolib/BMXRosterItem.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = User’s server extension information
docs/android/im/floo/floolib/BMXRosterItem.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Whether to alert user for message
docs/android/im/floo/floolib/BMXRosterItem.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = User’s local extension information
docs/android/im/floo/floolib/BMXRosterItem.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Friend nickname
docs/android/im/floo/floolib/BMXRosterItem.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Extension information which is visible to user’s friends, such as address, personal state and more
docs/android/im/floo/floolib/BMXRosterItem.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Contact relationship
docs/android/im/floo/floolib/BMXRosterItem.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Friend id
docs/android/im/floo/floolib/BMXRosterItem.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Friend name
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/attr-title = Class BMXRosterManager
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/div = Friend manager
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Accept adding friend request
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Add friend change listener
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Request to add friend
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Add to blacklist
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Reject adding friend request
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Download avatar
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get friend list, force pull from server-side if forceRefresh == true
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get list of adding friend requests
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get blacklist, force pull from server-side if forceRefresh == true
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Delete friend
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Remove friend change listener
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Batch search for users
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Search for users
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Update friend’s alias
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Update friend’s local extension information
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set whether to reject user message
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Remove from blacklist
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Whether to read data from server, true to force it from server, false to automatically read it from server if local read list is empty
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = [BMXErrorCode] friend id list
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Friend id to search
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = True to force fetch from server, false to fetch from server automatically if query result is empty.
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = [BMXErrorCode] user information returned by query
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Username to search
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of user ids to search
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Whether to force fetch from server, true to force fetch from server
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = [BMXErrorCode] List of friend information returned
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = User information
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Local extension information
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Friend alias
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Whether to reject user message, true to reject, false not to
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = User id requested to add
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Friend request information
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Delete friend id
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = [BMXErrorCode] List of friend requests returned
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = User id to request add friend
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = User id in blacklist
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = User id removed from blacklist
docs/android/im/floo/floolib/BMXRosterManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Friend change listener
docs/android/im/floo/floolib/BMXRosterService.Application.html/html/body/div/attr-title = Class BMXRosterService.Application
docs/android/im/floo/floolib/BMXRosterService.Application.html/html/body/div/div/ul/li/div = Friend invitation
docs/android/im/floo/floolib/BMXRosterService.Applicationstate.html/html/body/div/attr-title = Enum BMXRosterService.Applicationstate
docs/android/im/floo/floolib/BMXRosterService.Applicationstate.html/html/body/div/div/ul/li/div = Request state
docs/android/im/floo/floolib/BMXRosterService.html/html/body/div/attr-title = Class BMXRosterService
docs/android/im/floo/floolib/BMXRosterService.html/html/body/div/div/ul/li/div = Friend Service
docs/android/im/floo/floolib/BMXRosterService.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Update friend server extension information
docs/android/im/floo/floolib/BMXRosterService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Friend id list, pass in an empty list function and fetch returned friend id list here
docs/android/im/floo/floolib/BMXRosterService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = User information returned by query, pass in a pointing-to-empty shared_ptr objective function, and assign automatically after function is executed.
docs/android/im/floo/floolib/BMXRosterService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of friend information returned, pass in an empty list function and fetch returned friend information list here
docs/android/im/floo/floolib/BMXRosterService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Server extension information
docs/android/im/floo/floolib/BMXRosterService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of friend requests returned, pass in a pointing-to-empty shared_ptr objective function and assign automatically after function is executed.
docs/android/im/floo/floolib/BMXRosterService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = List of friend ids, pass in an empty list function and fetch returned blacklisted id list here
docs/android/im/floo/floolib/BMXRosterService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Whether to download thumbnail, true for thumbnail, false for original
docs/android/im/floo/floolib/BMXRosterServiceListener.html/html/body/div/attr-title = Class BMXRosterServiceListener
docs/android/im/floo/floolib/BMXRosterServiceListener.html/html/body/div/div/ul/li/div = Friend change listener
docs/android/im/floo/floolib/BMXRosterServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Request of adding friend approved
docs/android/im/floo/floolib/BMXRosterServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Request of adding friend rejected
docs/android/im/floo/floolib/BMXRosterServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Request of adding friend received
docs/android/im/floo/floolib/BMXRosterServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Add friend
docs/android/im/floo/floolib/BMXRosterServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Update user information
docs/android/im/floo/floolib/BMXRosterServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Triggered when client pulls new contact from server, used to update user contact list, and call local fetching contact via SDK for all member information
docs/android/im/floo/floolib/BMXRosterServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Operation initiator
docs/android/im/floo/floolib/BMXRosterServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Operation recipient
docs/android/im/floo/floolib/BMXRosterServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Friend request information
docs/android/im/floo/floolib/BMXRosterServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Reason for request rejected
docs/android/im/floo/floolib/BMXRosterServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Updated friend information
docs/android/im/floo/floolib/BMXSDKConfig.HostConfig.html/html/body/div/attr-title = Class BMXSDKConfig.HostConfig
docs/android/im/floo/floolib/BMXSDKConfig.HostConfig.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Service settings
docs/android/im/floo/floolib/BMXSDKConfig.HostConfig.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = IM server address
docs/android/im/floo/floolib/BMXSDKConfig.HostConfig.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = IM server interface
docs/android/im/floo/floolib/BMXSDKConfig.html/html/body/div/attr-title = Class BMXSDKConfig
docs/android/im/floo/floolib/BMXSDKConfig.html/html/body/div/div/ul/li/div = SDK settings management
docs/android/im/floo/floolib/BMXSDKConfig.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Client type
docs/android/im/floo/floolib/BMXSDKConfig.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Client OS version
docs/android/im/floo/floolib/BMXSDKConfig.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Chat data store path
docs/android/im/floo/floolib/BMXSDKConfig.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Cached data store path
docs/android/im/floo/floolib/BMXSDKConfig.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Push certificate name
docs/android/im/floo/floolib/BMXSDKConfig.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Whether to send message delivered receipt
docs/android/im/floo/floolib/BMXSignInstate.html/html/body/div/attr-title = Enum BMXSignInstate
docs/android/im/floo/floolib/BMXSignInstate.html/html/body/div/div/ul/li/div = Login state
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/attr-title = Class BMXUserManager
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/div = User manager
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Add user state listener
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Auto login, by id
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Auto login, by username
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Binding device push token
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Switch appId
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Delete device
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get list of logged-in devices
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get user details
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Remove user state listener
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set how to validate when adding friend
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set friend authentication questions
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set whether to automatically accept group invitations
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set whether to automatically download thumbnail and voice attachment
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set whether push is allowed
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set whether to push details
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set nickname
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set whether a new message is audibly alerted
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set whether a new message is alerted in vibration
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set private extension information
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set public extension information
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set push alias
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set push nickname
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = id login
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Username login
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Register
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Upload avatar
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Password
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = [BMXErrorCode] list of logged-in devices
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Force pull latest results from server
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = [BMXErrorCode], user details
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Nickname
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Local file path of avatar
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Uploading progress listener
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = User details
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Downloading progress listener
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = User public information
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = User private information (self-visibe only)
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = How to validate when adding friend
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Authentication questions
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Whether push is allowed, true to push, false not to
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Whether to push details, true to push, false not to
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Push nickname
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Alias
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Push token
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Whether a new message is audibly alerted, true to alert, false not to
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Whether a new message is alerted in vibration, true to alert, false not to
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Whether to automatically download thumbnail and voice attachment, true to download, false not to
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Whether to automatically agree to join group invitation, true to agree, false not to
docs/android/im/floo/floolib/BMXUserManager.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = User state listener
docs/android/im/floo/floolib/BMXUserProfile.AddFriendAuthMode.html/html/body/div/attr-title = Enum BMXUserProfile.AddFriendAuthMode
docs/android/im/floo/floolib/BMXUserProfile.AddFriendAuthMode.html/html/body/div/div/ul/li/div = How to validate when adding friend
docs/android/im/floo/floolib/BMXUserProfile.AuthQuestion.html/html/body/div/attr-title = Class BMXUserProfile.AuthQuestion
docs/android/im/floo/floolib/BMXUserProfile.AuthQuestion.html/html/body/div/div/ul/li/div = Authentication questions when adding friend
docs/android/im/floo/floolib/BMXUserProfile.MessageSetting.html/html/body/div/attr-title = Class BMXUserProfile.MessageSetting
docs/android/im/floo/floolib/BMXUserProfile.MessageSetting.html/html/body/div/div/ul/li/div = User message settings
docs/android/im/floo/floolib/BMXUserProfile.UserCategory.html/html/body/div/attr-title = Enum BMXUserProfile.UserCategory
docs/android/im/floo/floolib/BMXUserProfile.UserCategory.html/html/body/div/div/ul/li/div = User type
docs/android/im/floo/floolib/BMXUserProfile.html/html/body/div/attr-title = Class BMXUserProfile
docs/android/im/floo/floolib/BMXUserProfile.html/html/body/div/div/ul/li/div = User Profile
docs/android/im/floo/floolib/BMXUserProfile.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = How to validate when adding friend
docs/android/im/floo/floolib/BMXUserProfile.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Authentication questions when adding friend
docs/android/im/floo/floolib/BMXUserProfile.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Local storage path of user avatar
docs/android/im/floo/floolib/BMXUserProfile.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Ratel server address of user avatar
docs/android/im/floo/floolib/BMXUserProfile.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Local storage path of user avatar thumbnail
docs/android/im/floo/floolib/BMXUserProfile.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = User avatar
docs/android/im/floo/floolib/BMXUserProfile.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = User policy
docs/android/im/floo/floolib/BMXUserProfile.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = User email
docs/android/im/floo/floolib/BMXUserProfile.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Whether to automatically agree to join group when a group invitation is received
docs/android/im/floo/floolib/BMXUserProfile.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = User message settings
docs/android/im/floo/floolib/BMXUserProfile.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = User mobile phone
docs/android/im/floo/floolib/BMXUserProfile.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Use nickname
docs/android/im/floo/floolib/BMXUserProfile.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = User private extension information, not visible to friends
docs/android/im/floo/floolib/BMXUserProfile.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = User public extension information, visible to friends
docs/android/im/floo/floolib/BMXUserProfile.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = User ID (unique)
docs/android/im/floo/floolib/BMXUserProfile.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Username (unique)
docs/android/im/floo/floolib/BMXUserService.html/html/body/div/attr-title = Class BMXUserService
docs/android/im/floo/floolib/BMXUserService.html/html/body/div/div/ul/li/div = User Service
docs/android/im/floo/floolib/BMXUserService.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Download avatar, default to download thumbnail
docs/android/im/floo/floolib/BMXUserService.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get device list
docs/android/im/floo/floolib/BMXUserService.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Get user details, force pull from server if forceRefresh == true
docs/android/im/floo/floolib/BMXUserService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Device token
docs/android/im/floo/floolib/BMXUserService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Device list, pass in an empty list function and fetch returned device list here
docs/android/im/floo/floolib/BMXUserService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = User profile, pass in a pointing-to-empty shared_ptr object initially, from which to retrieve user profile after function returned.
docs/android/im/floo/floolib/BMXUserService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Device serial number
docs/android/im/floo/floolib/BMXUserService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = User nickname
docs/android/im/floo/floolib/BMXUserService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Local address to upload avatar
docs/android/im/floo/floolib/BMXUserService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = User profile
docs/android/im/floo/floolib/BMXUserService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Whether to download thumbnail, true to download, false not to
docs/android/im/floo/floolib/BMXUserService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Public extension information
docs/android/im/floo/floolib/BMXUserService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Private extension information
docs/android/im/floo/floolib/BMXUserService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = How to validate when adding friend
docs/android/im/floo/floolib/BMXUserService.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Authentication questions when adding friend
docs/android/im/floo/floolib/BMXUserServiceListener.html/html/body/div/attr-title = Class BMXUserServiceListener
docs/android/im/floo/floolib/BMXUserServiceListener.html/html/body/div/div/ul/li/div = User state listener
docs/android/im/floo/floolib/BMXUserServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Channel state changed
docs/android/im/floo/floolib/BMXUserServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Synchronize user information updates (when user information changes in other devices)
docs/android/im/floo/floolib/BMXUserServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = User login on another device
docs/android/im/floo/floolib/BMXUserServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = User logout on another device
docs/android/im/floo/floolib/BMXUserServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = User login
docs/android/im/floo/floolib/BMXUserServiceListener.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = User logout
docs/android/im/floo/floolib/BMXUserServiceListener.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Connection state
docs/android/im/floo/floolib/BMXVideoAttachment.html/html/body/div/attr-title = Class BMXVideoAttachment
docs/android/im/floo/floolib/BMXVideoAttachment.html/html/body/div/div/ul/li/div = Video attachment of message
docs/android/im/floo/floolib/BMXVideoAttachment.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Constructor to build the video attachment to send
docs/android/im/floo/floolib/BMXVideoAttachment.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Constructor to build the video attachment to receive
docs/android/im/floo/floolib/BMXVideoAttachment.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Length of video clip
docs/android/im/floo/floolib/BMXVideoAttachment.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Set the thumbnail for video clip to send
docs/android/im/floo/floolib/BMXVideoAttachment.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Video size, width, and height
docs/android/im/floo/floolib/BMXVideoAttachment.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Server path of thumbnail
docs/android/im/floo/floolib/BMXVideoAttachment.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Length of video clip
docs/android/im/floo/floolib/BMXVideoAttachment.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Video size, width, and height
docs/android/im/floo/floolib/BMXVideoAttachment.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Local path of thumbnail file
docs/android/im/floo/floolib/BMXVideoAttachment.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Server address of thumbnail file
docs/android/im/floo/floolib/BMXVideoAttachment.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Thumbnail of video clip
docs/android/im/floo/floolib/BMXVoiceAttachment.html/html/body/div/attr-title = Class BMXVoiceAttachment
docs/android/im/floo/floolib/BMXVoiceAttachment.html/html/body/div/div/ul/li/div = Audio attachment
docs/android/im/floo/floolib/BMXVoiceAttachment.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Constructor to build the audio attachment to send
docs/android/im/floo/floolib/BMXVoiceAttachment.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Constructor to build the audio attachment to receive
docs/android/im/floo/floolib/BMXVoiceAttachment.html/html/body/div/div/ul/li/ul/li/table/tr/td/div = Length of speech
docs/android/im/floo/floolib/BMXVoiceAttachment.html/html/body/div/div/ul/li/ul/li/ul/li/dl/dd = Length of audio
docs/android/im/floo/floolib/package-summary.html/html/body/div/ul/li = Previous package
docs/android/im/floo/floolib/package-summary.html/html/body/div/ul/li = Next package
docs/android/im/floo/floolib/package-summary.html/html/body/div/h1 = Package im.floo.floolib
docs/android/im/floo/floolib/package-summary.html/html/body/div/ul/li/attr-summary = Class profile table, list classes and explanation
docs/android/im/floo/floolib/package-summary.html/html/body/div/ul/li/table/caption/span = Class profile
docs/android/im/floo/floolib/package-summary.html/html/body/div/ul/li/table/tr/th = Description
docs/android/im/floo/floolib/package-summary.html/html/body/div/ul/li/attr-summary = Enum profile table, list enums and explanation
docs/android/im/floo/floolib/package-summary.html/html/body/div/ul/li/table/caption/span = Enum profile
docs/android/im/floo/floolib/package-tree.html/html/head/title = im.floo.floolib class hierarchy (floo-android api)
docs/android/im/floo/floolib/package-tree.html/html/body/div/h1 = Hierarchy of package im.floo.floolib
docs/android/im/floo/floolib/package-tree.html/html/body/div/attr-title = Enum hierarchy
docs/android/index-all.html/html/head/title = Index (floo-android api)
docs/android/index-all.html/html/body/div/dl/dt = Methods in class im.floo.floolib.
docs/android/index-all.html/html/body/div/dl/dt = Constructors in class im.floo.floolib.
docs/android/index-all.html/html/body/div/dl/dt = Classes in
docs/android/index-all.html/html/body/div/dl/dt = Enums in
docs/android/index-all.html/html/body/div/dl/dt = Static methods in class im.floo.floolib.
docs/android/index-all.html/html/body/div/dl/dt = Package im.floo.floolib
docs/android/index-all.html/html/body/div/dl/dt = Variables in class im.floo.floolib.
docs/android/index-all.html/html/body/div/dl/dt = Static methods in enum im.floo.floolib.
docs/android/index-all.html/html/body/div/dl/dt = Methods in enum im.floo.floolib.
docs/android/index.html/html/head/title = floo-android api - Maximtop - One-click and multi-cloud IM
docs/android/index.html/html/frameset/attr-title = All classes and interfaces (except for non-static nested types)
docs/android/index.html/html/frameset/frame/attr-title = Package, class and interface description
docs/android/index.html/html/frameset/frame/frame/noframes/h2 = Frame alert
docs/android/index.html/html/frameset/frame/frame/noframes/p = Use the frames feature to View this document for more frame features. If you see this message, it indicates that you are using a Web client with no frame support. Link to
docs/android/index.html/html/frameset/frame/frame/noframes/p/a = Frameless version
docs/android/overview-tree.html/html/head/title = Class hierarchy (floo-android api)
docs/android/overview-tree.html/html/body/div/h1 = Hierarchy of all packages
docs/android/overview-tree.html/html/body/div/span = Package hierarchy:
docs/api/api-docs.json/json = Get the parameters api_endpoint, app_id, and access-token from Console before calling Lanying IM API, 
docs/api/api-docs.json/json = api_endpoint is the service address, app_id and access-token are used in request Header. The default type of request Content-Type is application/json.
docs/api/api-docs.json/json = Lanying IM server-side API document
docs/api/api-docs.json/json = For technical support
docs/api/api-docs.json/json = token interface
docs/api/api-docs.json/json = Friend management interface
docs/api/api-docs.json/json = Push interface
docs/api/api-docs.json/json = File manipulation interface
docs/api/api-docs.json/json = Message processing
docs/api/api-docs.json/json = User action
docs/api/api-docs.json/json = Group interface
docs/api/api-docs.json/json = Token
docs/api/api-docs.json/json = App ID
docs/api/api-docs.json/json = This field can be set only if access-token is an Admin token, means call this interface as an Admin for this group ID
docs/api/api-docs.json/json = Image type, 1: original, 2: thumbnail, 3: cover
docs/api/api-docs.json/json = Object name
docs/api/api-docs.json/json = SDK signature
docs/api/api-docs.json/json = File token
docs/api/api-docs.json/json = Thumbnail generation policy, 1 – generated by third-party server, 2 – generated by local server, default 1
docs/api/api-docs.json/json = This field can be set only if access-token is a user token, means call this interface as a group member for this user ID
docs/api/api-docs.json/json = Download chat file
docs/api/api-docs.json/json = File signature
docs/api/api-docs.json/json = Audio file format to download, amr/mp3, default amr
docs/api/api-docs.json/json = Request source, miniprogram, default ‘
docs/api/api-docs.json/json = Get the URL of uploading group avatar
docs/api/api-docs.json/json = Get the URL of uploading user avatar
docs/api/api-docs.json/json = Get the URL of uploading chat file
docs/api/api-docs.json/json = File Type  100: plain chat file, 101: voice chat file (in .amr), 102: picture chat file, 103: video chat file, 104: voice chat file (in .mp3), 200: shared plain file, 201: shared voice file, 202: shared picture file, 203: shared video file
docs/api/api-docs.json/json = 1: User，2: Group
docs/api/api-docs.json/json = Get the URL of forwarded chat file
docs/api/api-docs.json/json = Add group Admin
docs/api/api-docs.json/json = Remove group Admin
docs/api/api-docs.json/json = Get the list of group Admins
docs/api/api-docs.json/json = #/definitions/Response«List« group member format»»
docs/api/api-docs.json/json = Get group announcement details by group id and announcement id
docs/api/api-docs.json/json = #/definitions/Response«Returned result of get group announcement»
docs/api/api-docs.json/json = Delete group announcement
docs/api/api-docs.json/json = Edit group announcement
docs/api/api-docs.json/json = Get the latest group announcement details
docs/api/api-docs.json/json = #/definitions/Response«List«Returned result of get group announcement »»
docs/api/api-docs.json/json = Get the list of group membership requests
docs/api/api-docs.json/json = Apply for group membership
docs/api/api-docs.json/json = Admin processes membership application
docs/api/api-docs.json/json = Ban a user
docs/api/api-docs.json/json = Blacklist a user
docs/api/api-docs.json/json = Get backlist
docs/api/api-docs.json/json = Disband group
docs/api/api-docs.json/json = Update group profile
docs/api/api-docs.json/json = Download group file
docs/api/api-docs.json/json = Delete group file
docs/api/api-docs.json/json = Get the list of group files
docs/api/api-docs.json/json = Update group file name
docs/api/api-docs.json/json = Upload group file
docs/api/api-docs.json/json = Get group information by group id
docs/api/api-docs.json/json = Update group avatar
docs/api/api-docs.json/json = #/definitions/Response«List«Group profile and user settings»»
docs/api/api-docs.json/json = Update group description
docs/api/api-docs.json/json = Update extension information
docs/api/api-docs.json/json = Update group name
docs/api/api-docs.json/json = Get group invitation list
docs/api/api-docs.json/json = Invite to group
docs/api/api-docs.json/json = Process group invitation by user
docs/api/api-docs.json/json = Kick member out of group
docs/api/api-docs.json/json = Member quit group
docs/api/api-docs.json/json = Get group member list by group id
docs/api/api-docs.json/json = #/definitions/PagingResponse«List«Group member format»»
docs/api/api-docs.json/json = Batch retrieval of group member profiles
docs/api/api-docs.json/json = Set group message blocking mode
docs/api/api-docs.json/json = Set group message pushing mode
docs/api/api-docs.json/json = Get public group list
docs/api/api-docs.json/json = Group invitation via QR code
docs/api/api-docs.json/json = Get Group invitation QR code
docs/api/api-docs.json/json = Get group settings
docs/api/api-docs.json/json = Update group settings – whether to allow member invitations
docs/api/api-docs.json/json = Update group settings – whether group members can modify group information
docs/api/api-docs.json/json = Update group settings – whether to enable “mark after read”
docs/api/api-docs.json/json = Update group settings – whether group chat history visible to new members
docs/api/api-docs.json/json = Update group settings – whether group membership request needs Admin approval
docs/api/api-docs.json/json = Transfer of group Owner
docs/api/api-docs.json/json = Remove user from ban list
docs/api/api-docs.json/json = Remove user from blacklist
docs/api/api-docs.json/json = Get the list of groups for the user
docs/api/api-docs.json/json = Get the message for the specified session
docs/api/api-docs.json/json = Delete the specified session for the user
docs/api/api-docs.json/json = Send system notification
docs/api/api-docs.json/json = Send message
docs/api/api-docs.json/json = Get the list of recent sessions for the specified user
docs/api/api-docs.json/json = Get push certificate
docs/api/api-docs.json/json = Run environment, 0 – development environment, 1 – production environment, default: 1
docs/api/api-docs.json/json = Certificate provider, 1-APNS，2-Huawei，3-Xiaomi，4-Meizu，5-VIVO， 6-OPPO, 7-FCM
docs/api/api-docs.json/json = Send push notification
docs/api/api-docs.json/json = Enable push function in background management to send push notification.
docs/api/api-docs.json/json = Specific request parameters can be found in Model.
docs/api/api-docs.json/json = Common request format as follows:
docs/api/api-docs.json/json = 1. Push text to all devices
docs/api/api-docs.json/json = 2. Push pictures to devices with push_token token1 or token2
docs/api/api-docs.json/json = 3. Push a pass-through message to all devices labeled Beijing or shanghai, pass-through message will not be displayed on notification bar
docs/api/api-docs.json/json = Agree to add friend
docs/api/api-docs.json/json = Apply to add friend
docs/api/api-docs.json/json = Add friends in batch
docs/api/api-docs.json/json = List of friend requests
docs/api/api-docs.json/json = List of blacklists
docs/api/api-docs.json/json = Reject friend request
docs/api/api-docs.json/json = Update friend extension information
docs/api/api-docs.json/json = Search for users by ID
docs/api/api-docs.json/json = User ID
docs/api/api-docs.json/json = List of friends
docs/api/api-docs.json/json = List of friend details
docs/api/api-docs.json/json = Whether to allow messaging
docs/api/api-docs.json/json = Search for user by mobile number
docs/api/api-docs.json/json = Search for user by user ID
docs/api/api-docs.json/json = Get ordinary user token by user ID and password
docs/api/api-docs.json/json = Get ordinary user token by username/mobile number/email
docs/api/api-docs.json/json = Get ordinary user token by username and password
docs/api/api-docs.json/json = Set avatar
docs/api/api-docs.json/json = Set avatar in batch
docs/api/api-docs.json/json = Bind openid to account. (/app/wechat/bind is recommended for binding; /app/wechat/unbind is recommended for unbinding)
docs/api/api-docs.json/json = Modify password
docs/api/api-docs.json/json = Device list
docs/api/api-docs.json/json = Delete device
docs/api/api-docs.json/json = Set whether to download thumbnails and files automatically
docs/api/api-docs.json/json = Kick specified device
docs/api/api-docs.json/json = No device_sn passed means kicking all devices
docs/api/api-docs.json/json = Set mobile number
docs/api/api-docs.json/json = Get user information
docs/api/api-docs.json/json = Update user information
docs/api/api-docs.json/json = Update user information in batch
docs/api/api-docs.json/json = Set whether to turn off push
docs/api/api-docs.json/json = Bind alias
docs/api/api-docs.json/json = Set badge
docs/api/api-docs.json/json = Set whether to turn off push details
docs/api/api-docs.json/json = Set push no-disturb time
docs/api/api-docs.json/json = Get tag
docs/api/api-docs.json/json = Bind tag
docs/api/api-docs.json/json = Unbind tag
docs/api/api-docs.json/json = Delete all tags
docs/api/api-docs.json/json = Register user
docs/api/api-docs.json/json = Register user in batch
docs/api/api-docs.json/json = Register push user
docs/api/api-docs.json/json = Get user settings
docs/api/api-docs.json/json = Modify user settings
docs/api/api-docs.json/json = Set whether to mute sound alert for new message
docs/api/api-docs.json/json = Bind token
docs/api/api-docs.json/json = Unbind token
docs/api/api-docs.json/json = Modify username
docs/api/api-docs.json/json = Set whether to vibrate alert for new message
docs/api/api-docs.json/json = Alias
docs/api/api-docs.json/json = Push token
docs/api/api-docs.json/json = Message alert sound, can be blank
docs/api/api-docs.json/json = Notification bar channel, can be blank
docs/api/api-docs.json/json = What to do after notification clicked: intent to open a specific page; open_app to open App homepage. Can be blank.
docs/api/api-docs.json/json = Click notification to open a specific page: can be blank, unless click_action is intent. Ex. intent:#Intent;component= package name/activity full path; S.parm1=value1;S.parm2=value2;end
docs/api/api-docs.json/json = Additional parameter for android platform, can be blank
docs/api/api-docs.json/json = Approval, bool type, true for approval, false for rejection
docs/api/api-docs.json/json = Group id
docs/api/api-docs.json/json = Avatar url
docs/api/api-docs.json/json = Upload avatar and thumbnail
docs/api/api-docs.json/json = Returned result for add friends in batch
docs/api/api-docs.json/json = Cause of failure
docs/api/api-docs.json/json = Success or not
docs/api/api-docs.json/json = Returned result for modify user avatars in batch
docs/api/api-docs.json/json = Username
docs/api/api-docs.json/json = Returned result for register users in batch
docs/api/api-docs.json/json = Returned result for modify user profiles in batch
docs/api/api-docs.json/json = Description
docs/api/api-docs.json/json = Nickname
docs/api/api-docs.json/json = Private information, visible only to yourself
docs/api/api-docs.json/json = Public information, visible to both friends and strangers
docs/api/api-docs.json/json = Update user request information, can be omitted except ID, only fields with content to be updated
docs/api/api-docs.json/json = Device SN
docs/api/api-docs.json/json = Certificate name
docs/api/api-docs.json/json = Bind device token request
docs/api/api-docs.json/json = Reason for rejection
docs/api/api-docs.json/json = Rejected user ID
docs/api/api-docs.json/json = Reject add friend request
docs/api/api-docs.json/json = Device platform,1:ios, 2:android, 3:windows, 4:mac, 5:linux, 6:web
docs/api/api-docs.json/json = User ID
docs/api/api-docs.json/json = User device information
docs/api/api-docs.json/json = FCM vendor extra parameter, can be blank; if set, will override the corresponding attribute in Android
docs/api/api-docs.json/json = Meizu vendor extra parameter, can be blank; if set, will override the corresponding attribute in Android
docs/api/api-docs.json/json = Announcement content
docs/api/api-docs.json/json = Group id
docs/api/api-docs.json/json = Announcement tittle
docs/api/api-docs.json/json = Reason for membership application
docs/api/api-docs.json/json = Duration of banned in minutes
docs/api/api-docs.json/json = User id list
docs/api/api-docs.json/json = Group id list
docs/api/api-docs.json/json = Group membership application settings, 0: Agree all requests 1: Need to confirm by Admin 2: Reject all requests
docs/api/api-docs.json/json = Creation time
docs/api/api-docs.json/json = History chat visibility settings for new members
docs/api/api-docs.json/json = Group member invitation settings
docs/api/api-docs.json/json = Group information modification settings for members
docs/api/api-docs.json/json = Push mode of group messages
docs/api/api-docs.json/json = Group Owner id
docs/api/api-docs.json/json = Group message read function settings
docs/api/api-docs.json/json = Group state, 0: normal, 1: dissolved
docs/api/api-docs.json/json = Update time
docs/api/api-docs.json/json = Group type: 1 for public group, 0 for private group, 2 for chatroom
docs/api/api-docs.json/json = List of user ids invited to join group
docs/api/api-docs.json/json = Update content
docs/api/api-docs.json/json = Invitation reason
docs/api/api-docs.json/json = Invitee id, List type, multiple users can be invited to a group at one time
docs/api/api-docs.json/json = Group message blocking mode: 0: No blocking; 1: Blocking local message notifications; 2: Blocking messages, not receiving messages
docs/api/api-docs.json/json = Group message push type: 0: Receive all pushes; 1: Do not accept push; 2: Receive Admin and @ pushes; 3. Only receive Admin pushes; 4: Only receive @ pushes
docs/api/api-docs.json/json = File id list
docs/api/api-docs.json/json = Shared file id
docs/api/api-docs.json/json = Shared file name
docs/api/api-docs.json/json = Shared file size
docs/api/api-docs.json/json = Shared file type
docs/api/api-docs.json/json = Shared file uploader
docs/api/api-docs.json/json = Shared file url
docs/api/api-docs.json/json = Returned format of group shared files
docs/api/api-docs.json/json = File name
docs/api/api-docs.json/json = File size
docs/api/api-docs.json/json = File type
docs/api/api-docs.json/json = File url
docs/api/api-docs.json/json = File id
docs/api/api-docs.json/json = New file name
docs/api/api-docs.json/json = User_id of new group Owner
docs/api/api-docs.json/json = The application entry Activity class corresponding to the desktop icon, such as com.test.badge.MainActivity, which can be blank
docs/api/api-docs.json/json = Huawei vendor extra parameter, can be blank; if set, will override the corresponding attribute in Android
docs/api/api-docs.json/json = Notification alert sound, can be blank
docs/api/api-docs.json/json = Corresponding to content-available in APNs, can be blank
docs/api/api-docs.json/json = Corresponding to mutable-content in APNs, can be blank
docs/api/api-docs.json/json = Corresponding to category in APNs Payload, can be blank
docs/api/api-docs.json/json = Corresponding to thread-id in APNs, can be blank; which is used for grouping notifications by thread-id
docs/api/api-docs.json/json = Ios platform extra parameter, can be blank
docs/api/api-docs.json/json = Return code, 200 is success
docs/api/api-docs.json/json = Cursor, no cursor in returned result means the last page has been returned
docs/api/api-docs.json/json = Result data
docs/api/api-docs.json/json = Error information, null means success
docs/api/api-docs.json/json = Version
docs/api/api-docs.json/json = Paged list to return incremental data, needs to be merged with local data
docs/api/api-docs.json/json = Message type TEXT      = 0;
docs/api/api-docs.json/json = Sender’s user ID
docs/api/api-docs.json/json = Receive user ID or group ID
docs/api/api-docs.json/json = Transaction ID for message deduplication
docs/api/api-docs.json/json = Target type, 1 – normal user, 2 -- group
docs/api/api-docs.json/json = Certificate
docs/api/api-docs.json/json = Push certificate information
docs/api/api-docs.json/json = Oppo vendor extra parameter, can be blank; if set, will override the corresponding attribute in Android
docs/api/api-docs.json/json = Cursor for page turning
docs/api/api-docs.json/json = Total
docs/api/api-docs.json/json = Version, not used at present, reserved for extension
docs/api/api-docs.json/json = Wrapper that returns result
docs/api/api-docs.json/json = PagingResponse«List« Group member format»»
docs/api/api-docs.json/json = #/definitions/Group member format
docs/api/api-docs.json/json = new_password New password
docs/api/api-docs.json/json = old_password Old password
docs/api/api-docs.json/json = Message type：text - text，image - image， cmd - pass-through message. Can be blank, which means text by default
docs/api/api-docs.json/json = Tittle, can be blank
docs/api/api-docs.json/json = Content, can be blank
docs/api/api-docs.json/json = Attachment address: URL address of image/audio/video, can be blank. If it is an image address, it needs to end with .jpg/jpeg/png, and the picture size should be less than 1M. 876*324 px is recommended
docs/api/api-docs.json/json = Badge: If it is a number, modify the badge to this number; If starts with +, means adding this number to badge, ex. “+1” means adding 1 to badge; If blank, default 
docs/api/api-docs.json/json = Badge: If it is a number, modify the badge to this number; If starts with +, means adding this number to badge, ex. \"+1\" means adding 1 to badge; If blank, default 
docs/api/api-docs.json/json = Extension field: Can be blank, JSONObject type, ex. {"
docs/api/api-docs.json/json = Start timestamp of timed presentation (seconds), blank for immediate presentation
docs/api/api-docs.json/json = End timestamp of timed presentation (seconds), can be blank
docs/api/api-docs.json/json = Android extra parameter, can be blank
docs/api/api-docs.json/json = ios extra parameter, can be blank
docs/api/api-docs.json/json = huawei vendor extra parameter
docs/api/api-docs.json/json = xiaomi vendor extra parameter
docs/api/api-docs.json/json = oppo vendor extra parameter
docs/api/api-docs.json/json = vivo vendor extra parameter
docs/api/api-docs.json/json = meizu vendor extra parameter
docs/api/api-docs.json/json = fcm vendor extra parameter
docs/api/api-docs.json/json = Message body pushed
docs/api/api-docs.json/json = Target of push, cannot be blank. Type is string or JSONObject:
docs/api/api-docs.json/json = ", means push to all devices
docs/api/api-docs.json/json = "]} means push to devices labeled tag1 or tag2
docs/api/api-docs.json/json = "]} means push to devices with alias1 or alias2
docs/api/api-docs.json/json = ":[111,222]} means push to devices with user ID 111 or 222
docs/api/api-docs.json/json = "]} means push to devices with PushToken push_token1 or push_token2
docs/api/api-docs.json/json = List length cannot exceed 500 when pushed with tag/alias/user ID/pushToken
docs/api/api-docs.json/json = Push settings, can be blank
docs/api/api-docs.json/json = Message body pushed, cannot be blank
docs/api/api-docs.json/json = Push request
docs/api/api-docs.json/json = Device ID
docs/api/api-docs.json/json = Signature
docs/api/api-docs.json/json = ^(?!mta|maxim)[a-zA-Z0-9_一-龥]*[a-zA-Z_一-龥]+[a-zA-Z0-9_一-龥]*
docs/api/api-docs.json/json = QR code generation time
docs/api/api-docs.json/json = QR code expiration time
docs/api/api-docs.json/json = QR code information
docs/api/api-docs.json/json = Mobile number
docs/api/api-docs.json/json = Verification code, used in combination with mobile phone or email
docs/api/api-docs.json/json = Request of user registration
docs/api/api-docs.json/json = Response«List«Group member format»»
docs/api/api-docs.json/json = Response«List«Group profile and user settings»»
docs/api/api-docs.json/json = #/definitions/Group profile and user settings
docs/api/api-docs.json/json = Response«List«Returned content of getting group announcement»»
docs/api/api-docs.json/json = #/definitions/Returned content of getting group announcement
docs/api/api-docs.json/json = Response«Returned content of getting group announcement »
docs/api/api-docs.json/json = Name in comment
docs/api/api-docs.json/json = Request description
docs/api/api-docs.json/json = Invitee ID
docs/api/api-docs.json/json = Information of friend request
docs/api/api-docs.json/json = Expiration time
docs/api/api-docs.json/json = User ID that initiate adding friend
docs/api/api-docs.json/json = List entries of adding friend request
docs/api/api-docs.json/json = Answer of question
docs/api/api-docs.json/json = Whether to receive message alert
docs/api/api-docs.json/json = Friend user ID
docs/api/api-docs.json/json = Friend extension information
docs/api/api-docs.json/json = Verification method: 0 – No verification, anyone can be added as a friend; 1 – consent is required to be added as a friend; 2 – answer questions correctly to be added as a friend; 3 – reject all adding friend requests
docs/api/api-docs.json/json = Verification question
docs/api/api-docs.json/json = Avatar
docs/api/api-docs.json/json = Nickname or name
docs/api/api-docs.json/json = Request ID for request deduplication, not pushed if request ID has been present before. Can be blank, which means no deduplication.
docs/api/api-docs.json/json = Push settings, can be blank
docs/api/api-docs.json/json = File key
docs/api/api-docs.json/json = Whether to enable encrypted connection
docs/api/api-docs.json/json = Expiration timestamp
docs/api/api-docs.json/json = Public key
docs/api/api-docs.json/json = Push Token
docs/api/api-docs.json/json = Access token
docs/api/api-docs.json/json = Token information
docs/api/api-docs.json/json = Device ID, if set, returns PushToken
docs/api/api-docs.json/json = Login name, which can be mobile number, email, username
docs/api/api-docs.json/json = Get Token request information
docs/api/api-docs.json/json = User ID, for login by user ID only
docs/api/api-docs.json/json = Username, for login by username only
docs/api/api-docs.json/json = Email
docs/api/api-docs.json/json = User information
docs/api/api-docs.json/json = Answer of verification question
docs/api/api-docs.json/json = Whether to download automatically
docs/api/api-docs.json/json = Whether user consent is required when inviting to join group: true – user consent is required, false – invitation is automatically agreed
docs/api/api-docs.json/json = Whether to turn off push
docs/api/api-docs.json/json = Whether to push details
docs/api/api-docs.json/json = Start of push no-disturb time
docs/api/api-docs.json/json = End of push no-disturb time
docs/api/api-docs.json/json = Whether to mute when message received
docs/api/api-docs.json/json = Push nickname
docs/api/api-docs.json/json = End of push no-reminder time
docs/api/api-docs.json/json = Start of push no-reminder time
docs/api/api-docs.json/json = Whether to vibrate when message received
docs/api/api-docs.json/json = User settings information
docs/api/api-docs.json/json = Push mode: 0 – production push; 1 – testing push. Default 0
docs/api/api-docs.json/json = Message type: 0 – operational message; 1 – system message. Default 0
docs/api/api-docs.json/json = vivo vendor extra parameter, can be blank. If set, will override the corresponding attribute in Android
docs/api/api-docs.json/json = xiaomi vendor extra parameter, can be blank. If set, will override the corresponding attribute in Android
docs/api/api-docs.json/json = Group member format
docs/api/api-docs.json/json = Group member profile
docs/api/api-docs.json/json = Member join time
docs/api/api-docs.json/json = Group profile and user settings
docs/api/api-docs.json/json = Group message blocking settings
docs/api/api-docs.json/json = Group message push settings
docs/api/api-docs.json/json = Returned result of getting group announcement
docs/api/api-docs.json/json = Announcement publisher
docs/api/api-docs.json/json = Announcement publish time
docs/api/api-docs.json/json = Announcement id
docs/floo/annotated.html/html/body/div/div/table/tr/td/span = ▼
docs/floo/annotated.html/html/body/div/div/table/tr/td = Forwarded attachment in message
docs/floo/annotated.html/html/body/div/div/table/tr/td = Custom message to forward attachment
docs/floo/annotated.html/html/body/div/div/table/tr/td = Push user Profile
docs/floo/annotated.html/html/body/div/div/table/tr/td = Paged result
docs/floo/bmx__chat__service_8h_source.html/html/body/div/div/div/div = Fetch older message
docs/floo/bmx__chat__service__listener_8h_source.html/html/body/div/div/div/div = Destructor
docs/floo/bmx__chat__service__listener_8h_source.html/html/body/div/div/div/div = Received receipt of audio/video message playback
docs/floo/bmx__conversation_8h_source.html/html/body/div/div/div/div = System notification
docs/floo/bmx__conversation_8h_source.html/html/body/div/div/div/div = Fetch newer message
docs/floo/bmx__defines_8h_source.html/html/body/div/div/div/span = // Apple APNS
docs/floo/bmx__defines_8h_source.html/html/body/div/div/div/span = // Huawei
docs/floo/bmx__defines_8h_source.html/html/body/div/div/div/span = // Xiaomi
docs/floo/bmx__defines_8h_source.html/html/body/div/div/div/span = // Meizu
docs/floo/bmx__defines_8h_source.html/html/body/div/div/div/span = // Development environment
docs/floo/bmx__defines_8h_source.html/html/body/div/div/div/span = // Production environment
docs/floo/bmx__group_8h_source.html/html/body/div/div/div/span = //Ratel server url of group shared file
docs/floo/bmx__group_8h_source.html/html/body/div/div/div/span = //Server url of group shared file
docs/floo/bmx__group__service_8h_source.html/html/body/div/div/div/span = // Group name
docs/floo/bmx__group__service_8h_source.html/html/body/div/div/div/span = // Group description
docs/floo/bmx__group__service_8h_source.html/html/body/div/div/div/span = // Public group or not
docs/floo/bmx__group__service_8h_source.html/html/body/div/div/div/span = // Invitation information received by members when group created
docs/floo/bmx__group__service_8h_source.html/html/body/div/div/div/span = // Members added when group created
docs/floo/bmx__message__config_8h_source.html/html/body/div/div/div/div = Operation type of the currently read Badge number
docs/floo/bmx__push__user__profile_8h_source.html/html/body/div/div/div/span = // Push settings
docs/floo/bmx__push__user__profile_8h_source.html/html/body/div/div/div/div = End of allowed-to-push time
docs/floo/bmx__push__user__profile_8h_source.html/html/body/div/div/div/div = End of push no-disturb time
docs/floo/bmx__push__user__profile_8h_source.html/html/body/div/div/div/div = Start of push no-disturb time
docs/floo/bmx__push__user__profile_8h_source.html/html/body/div/div/div/div = Whether to push when App is not launched
docs/floo/bmx__push__user__profile_8h_source.html/html/body/div/div/div/div = Push user Profile.
docs/floo/bmx__push__user__profile_8h_source.html/html/body/div/div/div/div = Start of allowed-to-push time
docs/floo/bmx__result__page_8h_source.html/html/body/div/div/div/div = Assignment function
docs/floo/bmx__result__page_8h_source.html/html/body/div/div/div/div = vector object-array
docs/floo/bmx__result__page_8h_source.html/html/body/div/div/div/div = Offset
docs/floo/bmx__result__page_8h_source.html/html/body/div/div/div/div = cursor offset
docs/floo/bmx__result__page_8h_source.html/html/body/div/div/div/div = Size of vector object-array
docs/floo/bmx__user__profile_8h_source.html/html/body/div/div/div/span = // Online message settings
docs/floo/bmx__user__profile_8h_source.html/html/body/div/div/div/div = Friend authentication question
docs/floo/bmx__user__profile_8h_source.html/html/body/div/div/div/div = Whether to sound alert when message received
docs/floo/bmx__user__profile_8h_source.html/html/body/div/div/div/div = Whether to push message details
docs/floo/bmx__user__profile_8h_source.html/html/body/div/div/div/div = Answer of friend authentication question
docs/floo/bmx__user__profile_8h_source.html/html/body/div/div/div/div = Whether to vibrate alert when message received
docs/floo/bmx__user__profile_8h_source.html/html/body/div/div/div/div = Whether to automatically download thumbnail or voice when message received
docs/floo/bmx__user__profile_8h_source.html/html/body/div/div/div/div = The name displayed when the other party receives the pushed message
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/table/tr/td = Send an audio/video message playback receipt
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/table/tr/td = Download thumbnail, downloading state changes and progress notified via listener. Thumbnail generation policy: 1 – generated by third-party server, 2 – generated by local server, default 1.
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/table/tr/td = Cancel attachment downloading
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/table/tr/td = Search for messages by keyword
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/table/tr/td = Get the user id list for sent group audio/video messages played (for audio/video messages only)
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/table/tr/td = Get the user id list for sent group audio/video messages unplayed (for audio/video messages only)
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/h2/span/a = ◆
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/table/tr/td/p = Generated by third-party server
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/table/tr/td/p = Generated by local server
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = Message requiring a read receipt to be sent
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = Session id requiring a session attachment path
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = Message requiring to cancel attachment downloading
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = Message requiring to cancel attachment uploading
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = Session id requiring to delete session
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = Whether to delete the session on other devices synchronously, default false, means only delete the session on the current device
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = Message requiring to download attachment
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = Message requiring to download thumbnail
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = List of forwarded messages
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = The session to which message is forwarded
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = The newly generated single forwarded message from the merging list of forwarded messages
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = Forwarded message
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = Message requiring to get list of unread user ids
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = List of unread user ids for this message, initially passed in as an empty list
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = Message requiring to get list of read user ids
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = List of read user ids for this message, initially passed in as an empty list
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = Message requiring to get list of played user ids
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = List of played user ids for this message, initially passed in as an empty list
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = Message requiring to get list of unplayed user ids
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = List of unplayed user ids for this message, initially passed in as an empty list
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = id of the message which needs to be fetched
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = Insert message list
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = id of the session which needs to be opened
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = Session type, single/group chat.
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = Whether to create a local session if no session existing, default to create
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = The message for which all earlier messages need to be marked as read
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = The message needs to send “read recalled”
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = Recalled message
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = Message to be deleted
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = Whether to synchronize to other devices, otherwise only the locally stored message will be deleted
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = Resent message
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = Session for which message history needs to pull
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = Start message Id for pulling session messages
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = Maximum number of messages to pull
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = List of messages fetched by pull operation, externally initializing an incoming empty list.
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = Keyword for search
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = Start time of message search
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = Maximum number of messages to search
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = List of searched message results, externally initializing an incoming empty list.
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = Message search direction, default （Direction::Up）means search from earlier messages.
docs/floo/classfloo_1_1_b_m_x_chat_service.html/html/body/div/div/div/dl/dd/table/tr/td = Sent message
docs/floo/classfloo_1_1_b_m_x_chat_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Message ID with downloading state changed
docs/floo/classfloo_1_1_b_m_x_chat_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = State error code
docs/floo/classfloo_1_1_b_m_x_chat_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Progress of attachment downloading
docs/floo/classfloo_1_1_b_m_x_chat_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Message with downloading state changed
docs/floo/classfloo_1_1_b_m_x_chat_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Message for uploading attachment
docs/floo/classfloo_1_1_b_m_x_chat_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Progress of attachment uploading
docs/floo/classfloo_1_1_b_m_x_chat_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Newly created local session
docs/floo/classfloo_1_1_b_m_x_chat_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Latest message for session, return for existing, empty for no existing
docs/floo/classfloo_1_1_b_m_x_chat_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Deleted local session id
docs/floo/classfloo_1_1_b_m_x_chat_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Message with state change canceled
docs/floo/classfloo_1_1_b_m_x_chat_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = List of received messages
docs/floo/classfloo_1_1_b_m_x_chat_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = List of deleted messages received
docs/floo/classfloo_1_1_b_m_x_chat_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = List of received messages with delivered receipt
docs/floo/classfloo_1_1_b_m_x_chat_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = List of received audio/video messages with playback receipt
docs/floo/classfloo_1_1_b_m_x_chat_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = List of received messages with read receipt
docs/floo/classfloo_1_1_b_m_x_chat_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = List of received messages with all-read receipt
docs/floo/classfloo_1_1_b_m_x_chat_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = List of received messages with re-unread receipt
docs/floo/classfloo_1_1_b_m_x_chat_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = List of canceled messages received
docs/floo/classfloo_1_1_b_m_x_chat_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = List of received system messages
docs/floo/classfloo_1_1_b_m_x_chat_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Session for which a specific message history was pulled
docs/floo/classfloo_1_1_b_m_x_chat_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Message with state changed
docs/floo/classfloo_1_1_b_m_x_chat_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Total number of local unread sessions
docs/floo/classfloo_1_1_b_m_x_client.html/html/body/div/table/tr/td = When send a message, the change of message status will be notified by listener. In the case of sending a group message in a specified group with group read receipt enabled, the interface will automatically obtain the group member list id and fill it in the message config, without the need for the client to fill the group member list by itself.
docs/floo/classfloo_1_1_b_m_x_client.html/html/body/div/div/div/dl/dd/table/tr/td = Newly changed appId
docs/floo/classfloo_1_1_b_m_x_client.html/html/body/div/div/div/dl/dd/table/tr/td = BMXSDKConfig SDK configuration object created by local client-side already
docs/floo/classfloo_1_1_b_m_x_client.html/html/body/div/div/div/dl/dd/table/tr/td = User password (for sdk to automatically update user token when internal token expires)
docs/floo/classfloo_1_1_b_m_x_client.html/html/body/div/div/div/dl/dd/table/tr/td = True to use locally cached DNS configuration, false to get the latest configuration from server.
docs/floo/classfloo_1_1_b_m_x_client.html/html/body/div/div/div/dl/dd/table/tr/td = Changed network type
docs/floo/classfloo_1_1_b_m_x_client.html/html/body/div/div/div/dl/dd/table/tr/td = Network needs to reconnect or not
docs/floo/classfloo_1_1_b_m_x_client.html/html/body/div/div/div/dl/dd/table/tr/td = User password
docs/floo/classfloo_1_1_b_m_x_client.html/html/body/div/div/div/dl/dd/table/tr/td = UID of logged out user (default 0 to logout the current user)
docs/floo/classfloo_1_1_b_m_x_client.html/html/body/div/div/div/dl/dd/table/tr/td = Whether the unbind device operation is ignored when the user logout. Set to true when server’s unbinding device operation is ignored and forced to logout directly when some servers are inaccessible.
docs/floo/classfloo_1_1_b_m_x_client.html/html/body/div/div/div/dl/dd/table/tr/td = After successful registration, get the profile of the newly registered user from this function, and initially passed in a pointing-to-empty shared_ptr object.
docs/floo/classfloo_1_1_b_m_x_conversation.html/html/body/div/div/div/dl/dd/table/tr/td = Inserted message
docs/floo/classfloo_1_1_b_m_x_conversation.html/html/body/div/div/div/dl/dd/table/tr/td = Message id of the message to read
docs/floo/classfloo_1_1_b_m_x_conversation.html/html/body/div/div/div/dl/dd/table/tr/td = Start id of the message to load
docs/floo/classfloo_1_1_b_m_x_conversation.html/html/body/div/div/div/dl/dd/table/tr/td = Maximum number of loaded messages
docs/floo/classfloo_1_1_b_m_x_conversation.html/html/body/div/div/div/dl/dd/table/tr/td = List of loaded messages returned by database
docs/floo/classfloo_1_1_b_m_x_conversation.html/html/body/div/div/div/dl/dd/table/tr/td = Message loading direction, default to load earlier messages
docs/floo/classfloo_1_1_b_m_x_conversation.html/html/body/div/div/div/dl/dd/table/tr/td = Keyword for search message
docs/floo/classfloo_1_1_b_m_x_conversation.html/html/body/div/div/div/dl/dd/table/tr/td = List of searched message results
docs/floo/classfloo_1_1_b_m_x_conversation.html/html/body/div/div/div/dl/dd/table/tr/td = Type of search message
docs/floo/classfloo_1_1_b_m_x_conversation.html/html/body/div/div/div/dl/dd/table/tr/td = Text message being edited by session
docs/floo/classfloo_1_1_b_m_x_conversation.html/html/body/div/div/div/dl/dd/table/tr/td = Session extension message
docs/floo/classfloo_1_1_b_m_x_conversation.html/html/body/div/div/div/dl/dd/table/tr/td = Message for which playback state needs to be set
docs/floo/classfloo_1_1_b_m_x_conversation.html/html/body/div/div/div/dl/dd/table/tr/td = Whether the message has been played
docs/floo/classfloo_1_1_b_m_x_conversation.html/html/body/div/div/div/dl/dd/table/tr/td = Message for which the read state needs to be set
docs/floo/classfloo_1_1_b_m_x_conversation.html/html/body/div/div/div/dl/dd/table/tr/td = Whether the message is set to read
docs/floo/classfloo_1_1_b_m_x_conversation.html/html/body/div/div/div/dl/dd/table/tr/td = The message that needs to change the extension information when the msg section has updated its extension field
docs/floo/classfloo_1_1_b_m_x_file_attachment.html/html/body/div/table/tr/td = URL for remote ratel
docs/floo/classfloo_1_1_b_m_x_file_attachment.html/html/body/div/table/tr/td = URL for remote
docs/floo/classfloo_1_1_b_m_x_file_attachment.html/html/body/div/div/div/dl/dd/table/tr/td = Local path of file
docs/floo/classfloo_1_1_b_m_x_file_attachment.html/html/body/div/div/div/dl/dd/table/tr/td = Display name of file
docs/floo/classfloo_1_1_b_m_x_file_attachment.html/html/body/div/div/div/dl/dd/table/tr/td = Address of ratel file server
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/table/tr/td = Url for group avatar Ratel server
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/table/tr/td = Url for group avatar server
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/table/tr/td = Url for group avatar thumbnail server
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Request pending
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Request accepted
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Request rejected
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Group state is normal
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Group destroyed
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Private group
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Public group (other sub-type groups are not released yet)
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Chatroom
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Only Admins can invite new group member
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Anyone can invite new group member
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = No authentication required
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Admin approval required
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = All requests rejected
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Group Admin
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Group Owner
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Non-group member
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Admin only
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Any group member can modify
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = No blocking
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Block local message notification
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Block message, no message received
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Alert all group messages
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Do not alert any group message
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Alert Admins only, except @ messages
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Alert Admins only
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Alert @ messages only
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Default initialization value
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Modify group name
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Modify group description
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Modify group avatar
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Modify group Owner
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Modify group extension
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Modify group member nickname
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Modify group information mode
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Modify group authentication mode
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Modify group invitation mode
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Modify group pushed message type
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Modify whether to alert message
docs/floo/classfloo_1_1_b_m_x_group.html/html/body/div/div/div/table/tr/td/p = Whether group chat history is visible to new members
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/table/tr/td = Get a list of group information from the ID list passed in to group, or pull from server if forceRefresh is set
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/table/tr/td = Get group information by group id, or pull from server if forceRefresh is set
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Group to operate on
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = User id that request to join group
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Inviter id
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = List of member ids to be added as Admins
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Reason for adding as Admin
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = List of member ids to join group
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Reason for membership application
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = List of banned member ids
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Duration of banned
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Reason for banned
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = List of member ids to be blacklisted
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Downloaded group shared files
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Group shared file to change
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Modified group shared file name by ^H
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Parameters passed in when creating a group
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Returned result of creation, pass in a pointing-to-empty objective function shared_ptr and fetch the returned result here
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Deleted group announcement id
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Group to destroy
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = True to download thumbnail, false to download original image
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Download callback function
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Tittle of group announcement
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Content of group announcement
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Group id to search
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Group information returned by search, pass in a pointing-to-empty shared_ptr objective function and fetch the returned result here
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = True to force fetch from server, sdk will fetch from server automatically if local fetch failed
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = List of group ids
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = List of group details, pass in an empty list function and fetch the returned result here
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Group list information returned by search result
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Keyword of group name for query
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = List of group ids, pass in an empty list function and fetch the returned result here
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = List of group Admins, pass in an empty list function and fetch the returned result here
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = List of group announcements, pass in an empty list function and fetch the returned result here
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = List of group ids for which group application list information needs to be obtained
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Paged list of group applications, pass in a pointing-to-emtpy shared_ptr objective function and fetch the returned result here
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Paged starting cursor, passed in as empty-valued first, followed by the cursor in the result returned by last operation
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Page size
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Paged ban list, pass in a pointing-to-empty shared_ptr objective function and fetch the returned result here
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Group ban list, pass in an empty list function and fetch the returned list of group details here
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Paged list of blacklists, pass in a pointing-to-empty shared_ptr objective function and fetch the returned result here
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = List of group blacklists, pass in an empty list function and fetch the returned list of group details here
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Group for which the latest information needs to be obtained
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Paged list of group invitations, pass in a pointing-to-empty shared_ptr objective function and fetch the returned result here
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Latest group announcement, pass in a pointing-to-empty shared_ptr objective function and fetch the latest group announcement here
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Paged list of group members, pass in a pointing-to-empty shared_ptr objective function and fetch the returned result here
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = List of group members, pass in an empty list function and fetch the returned list of group details
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Group member id to get group member details
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Returned group member details, pass in an empty list function and fetch the returned list of group member details here
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = List of group shared files, pass in an empty list function and fetch the returned list of group details here
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Group to join
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Information for group membership application
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Group to quit
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Group blocking mode
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = List of member ids to degrade from Admins
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Reason to degrade from Admin
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = List of group member ids to delete
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Reason for deletion
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Deleted group shared file
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Whether allowed to operate
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Local path of group avatar file
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Upload callback function
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Group description
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Enable or not
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Group extension information
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Group invitation mode
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Group message notification mode
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = User nickname in group
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = Group name
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = User id that transferred as new group Owner
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = List of unbanned group member ids
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = List of unblacklisted user ids
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = File display name
docs/floo/classfloo_1_1_b_m_x_group_service.html/html/body/div/div/div/dl/dd/table/tr/td = File extension name
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Group where addition of new Admin occurred
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = List of members promoted to Admins
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Group where Admin removal occurred
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = List of members degraded from Admins
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Reason for removal
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Group where announcement update occurred
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Latest group announcement after changed
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Group where membership application was accepted
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Approver of the application
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Group where membership application was rejected
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = A group in which received membership application
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Applicant id
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Application reason
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Group with blacklist added
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = List of blacklisted members
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Group with blacklist removed
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = List of unblacklisted members
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Newly created group
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Group with group information changed
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Type of group information that changed
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Group to join
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Group to quit
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Quit reason
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Updated group list
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Group id invited to
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Invitation reason
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = A group in which invitation approved
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Invitee id
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = A group in which invitation rejected
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Rejection reason
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = A group in which member nickname changed
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Group member id that changed group nickname
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Changed group nickname
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Group with new member added
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = ID of added member
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Group with member quitting
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = ID of quitted member
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Reason for quitting
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Group with member banned
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Group with member unbanned
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = A group in which group Owner transferred
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = A group in which shared file deleted
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Deleted group shared file
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = A group in which share file updated
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Updated group shared file
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = A group in which shared file uploading occurred
docs/floo/classfloo_1_1_b_m_x_group_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Newly uploaded group shared file
docs/floo/classfloo_1_1_b_m_x_image_attachment.html/html/body/div/table/tr/td = Thumbnail url for remote use
docs/floo/classfloo_1_1_b_m_x_image_attachment.html/html/body/div/div/div/dl/dd/table/tr/td = Size, width, and height of image
docs/floo/classfloo_1_1_b_m_x_image_attachment.html/html/body/div/div/div/dl/dd/table/tr/td = Display name
docs/floo/classfloo_1_1_b_m_x_image_attachment.html/html/body/div/div/div/dl/dd/table/tr/td = Address of image ratel server
docs/floo/classfloo_1_1_b_m_x_location_attachment.html/html/body/div/div/div/dl/dd/table/tr/td = Address name
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/table/tr/td = Set whether a voice or video message has been played, valid only for received audio or video messages
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/table/tr/td = Means whether playback receipt received for sender, and whether playback receipt sent for receiver
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/table/tr/td = Set playback receipt
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/table/tr/td = Message to set receiving condition
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/table/tr/td = Set read receipt
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/table/tr/td = Set delivery receipt
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/table/tr/td = AckCount of played group messages (valid only for messages with audio/video attachment)
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/table/tr/td = Set groupAckCount of played messages (an SDK internal calling interface that shall not be called by upper layer) (valid only for messages with audio/video attachment)
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/table/tr/td = AckCount of unplayed group messages (valid only for messages with audio/video attachment)
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/table/tr/td = Set groupAckCount of unplayed messages (an SDK internal calling interface that shall not be called by upper layer) (valid only for messages with audio/video attachment)
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/table/tr/td = Whether all group messages have been played
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/table/tr/td = Set whether the message is a push.
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/table/tr/td = Whether the message is a push
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/div/div/table/tr/td/p = Text message
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/div/div/table/tr/td/p = Image message
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/div/div/table/tr/td/p = Voice message
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/div/div/table/tr/td/p = Video clip message
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/div/div/table/tr/td/p = File message
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/div/div/table/tr/td/p = Location message
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/div/div/table/tr/td/p = Command message
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/div/div/table/tr/td/p = Forward message
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/div/div/table/tr/td/p = Deliver at least once
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/div/div/table/tr/td/p = Deliver at most once
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/div/div/table/tr/td/p = Deliver only once
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/div/div/table/tr/td/p = Newly created message
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/div/div/table/tr/td/p = Message delivering
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/div/div/table/tr/td/p = Message delivered
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/div/div/table/tr/td/p = Message delivery failed
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/div/div/table/tr/td/p = Message delivery canceled
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/div/div/table/tr/td/p = Single chat message
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/div/div/table/tr/td/p = Group chat message
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/div/div/table/tr/td/p = System message
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/div/div/dl/dd/table/tr/td = Message sender
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/div/div/dl/dd/table/tr/td = Message receiver
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/div/div/dl/dd/table/tr/td = Session id
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/div/div/dl/dd/table/tr/td = Message content
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/div/div/dl/dd/table/tr/td = Message id
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/div/div/dl/dd/table/tr/td = Server timestamp
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/div/div/dl/dd/table/tr/td = Message to forward
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/div/div/dl/dd/table/tr/td = Attachment
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/div/div/dl/dd/table/tr/td = Set the number of read group messages
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/div/div/dl/dd/table/tr/td = Set the number of unread group messages
docs/floo/classfloo_1_1_b_m_x_message.html/html/body/div/div/div/dl/dd/table/tr/td = Set the number of unplayed group messages
docs/floo/classfloo_1_1_b_m_x_message_attachment.html/html/body/div/div/div/table/tr/td/p = Downloading
docs/floo/classfloo_1_1_b_m_x_message_attachment.html/html/body/div/div/div/table/tr/td/p = Download succeeded
docs/floo/classfloo_1_1_b_m_x_message_attachment.html/html/body/div/div/div/table/tr/td/p = Download failed
docs/floo/classfloo_1_1_b_m_x_message_attachment.html/html/body/div/div/div/table/tr/td/p = Download has net started yet
docs/floo/classfloo_1_1_b_m_x_message_attachment.html/html/body/div/div/div/table/tr/td/p = Download canceled
docs/floo/classfloo_1_1_b_m_x_message_attachment.html/html/body/div/div/div/table/tr/td/p = Image
docs/floo/classfloo_1_1_b_m_x_message_attachment.html/html/body/div/div/div/table/tr/td/p = Voice
docs/floo/classfloo_1_1_b_m_x_message_attachment.html/html/body/div/div/div/table/tr/td/p = Video clip
docs/floo/classfloo_1_1_b_m_x_message_attachment.html/html/body/div/div/div/table/tr/td/p = File
docs/floo/classfloo_1_1_b_m_x_message_attachment.html/html/body/div/div/div/table/tr/td/p = Location
docs/floo/classfloo_1_1_b_m_x_message_config.html/html/body/div/table/tr/td = Set IOS system configuration information
docs/floo/classfloo_1_1_b_m_x_message_config.html/html/body/div/table/tr/td = Get IOS system configuration information
docs/floo/classfloo_1_1_b_m_x_message_config.html/html/body/div/table/tr/td = Set Android system configuration information
docs/floo/classfloo_1_1_b_m_x_message_config.html/html/body/div/table/tr/td = Get Android system configuration information
docs/floo/classfloo_1_1_b_m_x_message_config.html/html/body/div/table/tr/td = Set start time for push display
docs/floo/classfloo_1_1_b_m_x_message_config.html/html/body/div/table/tr/td = Get start time for push display
docs/floo/classfloo_1_1_b_m_x_message_config.html/html/body/div/table/tr/td = Set end time for push display
docs/floo/classfloo_1_1_b_m_x_message_config.html/html/body/div/table/tr/td = Get end time for push display
docs/floo/classfloo_1_1_b_m_x_message_config.html/html/body/div/table/tr/td = Set push header
docs/floo/classfloo_1_1_b_m_x_message_config.html/html/body/div/table/tr/td = Get push header
docs/floo/classfloo_1_1_b_m_x_message_config.html/html/body/div/table/tr/td = Get whether the current push is a silent message
docs/floo/classfloo_1_1_b_m_x_message_config.html/html/body/div/table/tr/td = Get the badge count of the current push
docs/floo/classfloo_1_1_b_m_x_message_config.html/html/body/div/div/div/table/tr/td/p = The type of operation to read the Badge count is increment or decrement. Positive number is increment and negative number is decrement.
docs/floo/classfloo_1_1_b_m_x_message_config.html/html/body/div/div/div/table/tr/td/p = Set the Badge count to the current count
docs/floo/classfloo_1_1_b_m_x_push_service.html/html/body/div/table/tr/td = Empty the drop-down notification bar for all notifications.
docs/floo/classfloo_1_1_b_m_x_push_service.html/html/body/div/div/div/table/tr/td/p = Starting
docs/floo/classfloo_1_1_b_m_x_push_service.html/html/body/div/div/div/table/tr/td/p = Started, online
docs/floo/classfloo_1_1_b_m_x_push_service.html/html/body/div/div/div/table/tr/td/p = Stop
docs/floo/classfloo_1_1_b_m_x_push_service.html/html/body/div/div/div/table/tr/td/p = Offline
docs/floo/classfloo_1_1_b_m_x_push_service.html/html/body/div/div/div/dl/dd/table/tr/td = Push listener
docs/floo/classfloo_1_1_b_m_x_push_service.html/html/body/div/div/div/dl/dd/table/tr/td = Device push token
docs/floo/classfloo_1_1_b_m_x_push_service.html/html/body/div/div/div/dl/dd/table/tr/td = Device voip push token
docs/floo/classfloo_1_1_b_m_x_push_service.html/html/body/div/div/div/dl/dd/table/tr/td = Notification id
docs/floo/classfloo_1_1_b_m_x_push_service.html/html/body/div/div/div/dl/dd/table/tr/td = Operation id. Corresponding notification reminder in callback notification.
docs/floo/classfloo_1_1_b_m_x_push_service.html/html/body/div/div/div/dl/dd/table/tr/td = User tag to delete
docs/floo/classfloo_1_1_b_m_x_push_service.html/html/body/div/div/div/dl/dd/table/tr/td = Push user profile information, initially passing in a pointing-to-empty shared_ptr object, fetch the user profile information here after function returned.
docs/floo/classfloo_1_1_b_m_x_push_service.html/html/body/div/div/div/dl/dd/table/tr/td = Whether to force pull from server, automatically if local fetch failed
docs/floo/classfloo_1_1_b_m_x_push_service.html/html/body/div/div/div/dl/dd/table/tr/td = User tag
docs/floo/classfloo_1_1_b_m_x_push_service.html/html/body/div/div/div/dl/dd/table/tr/td = Start id for loading pushes
docs/floo/classfloo_1_1_b_m_x_push_service.html/html/body/div/div/div/dl/dd/table/tr/td = List of loaded local pushes returned by database
docs/floo/classfloo_1_1_b_m_x_push_service.html/html/body/div/div/div/dl/dd/table/tr/td = Direction of loading pushes, default to load earlier messages
docs/floo/classfloo_1_1_b_m_x_push_service.html/html/body/div/div/div/dl/dd/table/tr/td = Sent uplink push content
docs/floo/classfloo_1_1_b_m_x_push_service.html/html/body/div/div/div/dl/dd/table/tr/td = Unread badge count of user
docs/floo/classfloo_1_1_b_m_x_push_service.html/html/body/div/div/div/dl/dd/table/tr/td = Whether the geo-fencing function is running.
docs/floo/classfloo_1_1_b_m_x_push_service.html/html/body/div/div/div/dl/dd/table/tr/td = Whether the user actively pops up a user location request.
docs/floo/classfloo_1_1_b_m_x_push_service.html/html/body/div/div/div/dl/dd/table/tr/td = Enabled state of push
docs/floo/classfloo_1_1_b_m_x_push_service.html/html/body/div/div/div/dl/dd/table/tr/td = Start time for allowed silent push (hour)
docs/floo/classfloo_1_1_b_m_x_push_service.html/html/body/div/div/div/dl/dd/table/tr/td = End time for allowed silent push (hour)
docs/floo/classfloo_1_1_b_m_x_push_service.html/html/body/div/div/div/dl/dd/table/tr/td = Running state of push background
docs/floo/classfloo_1_1_b_m_x_push_service.html/html/body/div/div/div/dl/dd/table/tr/td = Start time for silent push (hour)
docs/floo/classfloo_1_1_b_m_x_push_service.html/html/body/div/div/div/dl/dd/table/tr/td = End time for silent push (hour)
docs/floo/classfloo_1_1_b_m_x_push_service.html/html/body/div/div/div/dl/dd/table/tr/td = Current user alias used for push initialization
docs/floo/classfloo_1_1_b_m_x_push_service.html/html/body/div/div/div/dl/dd/table/tr/td = User token to use that passed in by App when push initialization, and no passing in is OK without users.
docs/floo/classfloo_1_1_b_m_x_push_service.html/html/body/div/div/div/dl/dd/table/tr/td = The user alias that needs to be unbound.
docs/floo/classfloo_1_1_b_m_x_push_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Push certificate obtained from server
docs/floo/classfloo_1_1_b_m_x_push_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Operation id
docs/floo/classfloo_1_1_b_m_x_push_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = bmxToken used in current push
docs/floo/classfloo_1_1_b_m_x_push_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Push notification list
docs/floo/classfloo_1_1_b_m_x_push_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Uplink message with state change
docs/floo/classfloo_1_1_b_m_x_push_user_profile.html/html/body/div/table/tr/td = Push user alias
docs/floo/classfloo_1_1_b_m_x_push_user_profile.html/html/body/div/table/tr/td = Push user token
docs/floo/classfloo_1_1_b_m_x_push_user_profile.html/html/body/div/table/tr/td = Push user information settings
docs/floo/classfloo_1_1_b_m_x_result_page.html/html/body/div/div/div/dl/dd/table/tr/td = List data
docs/floo/classfloo_1_1_b_m_x_result_page.html/html/body/div/div/div/dl/dd/table/tr/td = List result
docs/floo/classfloo_1_1_b_m_x_result_page.html/html/body/div/div/div/dl/dd/table/tr/td = BMXResultPage object
docs/floo/classfloo_1_1_b_m_x_roster_item.html/html/body/div/table/tr/td = Ratel server address of friend avatar
docs/floo/classfloo_1_1_b_m_x_roster_item.html/html/body/div/table/tr/td = Server address of friend avatar thumbnail
docs/floo/classfloo_1_1_b_m_x_roster_item.html/html/body/div/div/div/table/tr/td/p = No authentication required, anyone can be added as a friend
docs/floo/classfloo_1_1_b_m_x_roster_item.html/html/body/div/div/div/table/tr/td/p = Consent is required to be added as a friend
docs/floo/classfloo_1_1_b_m_x_roster_item.html/html/body/div/div/div/table/tr/td/p = Need to answer authentication question correctly to be added as a friend
docs/floo/classfloo_1_1_b_m_x_roster_item.html/html/body/div/div/div/table/tr/td/p = Reject all adding friend requests
docs/floo/classfloo_1_1_b_m_x_roster_item.html/html/body/div/div/div/table/tr/td/p = Friend
docs/floo/classfloo_1_1_b_m_x_roster_item.html/html/body/div/div/div/table/tr/td/p = Deleted
docs/floo/classfloo_1_1_b_m_x_roster_item.html/html/body/div/div/div/table/tr/td/p = Stranger
docs/floo/classfloo_1_1_b_m_x_roster_item.html/html/body/div/div/div/table/tr/td/p = Blacklisted
docs/floo/classfloo_1_1_b_m_x_roster_service.html/html/body/div/table/tr/td = Search for user by contact id
docs/floo/classfloo_1_1_b_m_x_roster_service.html/html/body/div/table/tr/td = Search for user by username
docs/floo/classfloo_1_1_b_m_x_roster_service.html/html/body/div/table/tr/td = Search for user in batch by contact id list
docs/floo/classfloo_1_1_b_m_x_roster_service.html/html/body/div/div/div/dl/dd/table/tr/td = User id to be added as a friend
docs/floo/classfloo_1_1_b_m_x_roster_service.html/html/body/div/div/div/dl/dd/table/tr/td = User id requested to be added
docs/floo/classfloo_1_1_b_m_x_roster_service.html/html/body/div/div/div/dl/dd/table/tr/td = Friend application information
docs/floo/classfloo_1_1_b_m_x_roster_service.html/html/body/div/div/div/dl/dd/table/tr/td = Blacklisted user id
docs/floo/classfloo_1_1_b_m_x_roster_service.html/html/body/div/div/div/dl/dd/table/tr/td = Whether to download thumbnail, true for thumbnail, false for original
docs/floo/classfloo_1_1_b_m_x_roster_service.html/html/body/div/div/div/dl/dd/table/tr/td = Friend id to search
docs/floo/classfloo_1_1_b_m_x_roster_service.html/html/body/div/div/div/dl/dd/table/tr/td = True to force fetch from server, false to automatically fetch from server when query result is empty.
docs/floo/classfloo_1_1_b_m_x_roster_service.html/html/body/div/div/div/dl/dd/table/tr/td = User information returned by query, passed in a pointing-to-empty shared_ptr objective function and assigned automatically after executed.
docs/floo/classfloo_1_1_b_m_x_roster_service.html/html/body/div/div/div/dl/dd/table/tr/td = Username to search
docs/floo/classfloo_1_1_b_m_x_roster_service.html/html/body/div/div/div/dl/dd/table/tr/td = List of user ids to search
docs/floo/classfloo_1_1_b_m_x_roster_service.html/html/body/div/div/div/dl/dd/table/tr/td = Returned friend information list, pass in an empty list function and fetch the returned result here
docs/floo/classfloo_1_1_b_m_x_roster_service.html/html/body/div/div/div/dl/dd/table/tr/td = Whether to force fetch from server, true to force fetch from server
docs/floo/classfloo_1_1_b_m_x_roster_service.html/html/body/div/div/div/dl/dd/table/tr/td = List of friend ids, pass in an empty list function and fetch the returned friend id list here
docs/floo/classfloo_1_1_b_m_x_roster_service.html/html/body/div/div/div/dl/dd/table/tr/td = Whether to read data from server, true to force read from server, false to automatically read from server if the local read list is empty
docs/floo/classfloo_1_1_b_m_x_roster_service.html/html/body/div/div/div/dl/dd/table/tr/td = Returned friend application list information, pass in a pointing-to-empty shared_ptr objective function which will be automatically assigned after executed.
docs/floo/classfloo_1_1_b_m_x_roster_service.html/html/body/div/div/div/dl/dd/table/tr/td = List of friend ids, pass in an empty list function and fetch the returned blacklist id list here.
docs/floo/classfloo_1_1_b_m_x_roster_service.html/html/body/div/div/div/dl/dd/table/tr/td = Delete friend id
docs/floo/classfloo_1_1_b_m_x_roster_service.html/html/body/div/div/div/dl/dd/table/tr/td = Friend alias
docs/floo/classfloo_1_1_b_m_x_roster_service.html/html/body/div/div/div/dl/dd/table/tr/td = Server extension information
docs/floo/classfloo_1_1_b_m_x_roster_service.html/html/body/div/div/div/dl/dd/table/tr/td = Local extension information
docs/floo/classfloo_1_1_b_m_x_roster_service.html/html/body/div/div/div/dl/dd/table/tr/td = Whether to reject user message, true to reject, false to accept
docs/floo/classfloo_1_1_b_m_x_roster_service.html/html/body/div/div/div/dl/dd/table/tr/td = Unblacklisted user id
docs/floo/classfloo_1_1_b_m_x_roster_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Operation initiator
docs/floo/classfloo_1_1_b_m_x_roster_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Operation recipient
docs/floo/classfloo_1_1_b_m_x_roster_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Reason for application rejection
docs/floo/classfloo_1_1_b_m_x_roster_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Friend request message
docs/floo/classfloo_1_1_b_m_x_roster_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Updated friend information
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/table/tr/td = Get storage path of chat data, including messages, attachments, and more
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/table/tr/td = Get storage path of cached data, including user avatar and more
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/table/tr/td = Client OS version
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/table/tr/td = SDK version
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/table/tr/td = Get Push certificate name
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/table/tr/td = Set Push certificate name
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/table/tr/td = Get user proxy information
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/table/tr/td = Whether to send message delivery receipt
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/table/tr/td = Set whether to send message delivery receipt
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/table/tr/td = Log output level
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/table/tr/td = Set Log output level
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/table/tr/td = Whether to output Log to Console.
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/table/tr/td = Set whether to output Log to Console
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/table/tr/td = Set server configuration
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/table/tr/td = Get server configuration
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/table/tr/td = Whether to create all sessions based on the unread list returned by server.
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/table/tr/td = Whether to create all sessions based on the unread list returned by server, default false to create sessions with unread only.
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/table/tr/td = Get the unique identifier of device
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/table/tr/td = Set unique identifier for device, which should always be consistent until app is uninstalled; later reinstallation will generate a different device id. Used for local database encryption.
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/table/tr/td = Whether need to verify server-side certificate when get https request.
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/table/tr/td = Whether to enable dns function for get.
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/table/tr/td = Set whether to enable dns function for get, default enabled.
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/table/tr/td = Get user-defined dns server address.
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/table/tr/td = Set user-defined dns server address, preferring user dns if dns server has been set.
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/table/tr/td = Get user’s appID.
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/table/tr/td = Set user’s appID.
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/table/tr/td = Get user’s appSecret.
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/table/tr/td = Set user’s appSecret.
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/table/tr/td = Get user’s Push provider type.
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/table/tr/td = Set user’s Push provider type.
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/table/tr/td = Get user’s Push environment type.
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/table/tr/td = Set user’s Push environment type.
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/table/tr/td = Get debug log receiving account (for SDK debugging only, used for receiving client log)
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/table/tr/td = Set debug log receiving account (for SDK debugging only, used for receiving client log)
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/div/div/dl/dd/table/tr/td = Storage path of chat data
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/div/div/dl/dd/table/tr/td = Storage path of cached data
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/div/div/dl/dd/table/tr/td = Push certificate name
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/div/div/dl/dd/table/tr/td = User’s appId
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/div/div/dl/dd/table/tr/td = User’s appSecret (for users using push, both appId and appSecret must be set)
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/div/div/dl/dd/table/tr/td = User’s appID
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/div/div/dl/dd/table/tr/td = User’s appSecret
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/div/div/dl/dd/table/tr/td = Debug log receiver id
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/div/div/dl/dd/table/tr/td = Unique identifier of device.
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/div/div/dl/dd/table/tr/td = Whether to enable dns function
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/div/div/dl/dd/table/tr/td = User’s push environment type
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/div/div/dl/dd/table/tr/td = Server configuration
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/div/div/dl/dd/table/tr/td = Whether to create all sessions based on the unread list returned by server
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/div/div/dl/dd/table/tr/td = User’s push provider type
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/div/div/dl/dd/table/tr/td = User-defined dns server address
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/div/div/p = Set whether https request verify server-side certificate.
docs/floo/classfloo_1_1_b_m_x_s_d_k_config.html/html/body/div/div/div/dl/dd/table/tr/td = Whether https request verify server-side certificate
docs/floo/classfloo_1_1_b_m_x_user_profile.html/html/body/div/table/tr/td = User ratel server avatar url
docs/floo/classfloo_1_1_b_m_x_user_profile.html/html/body/div/table/tr/td = User avatar url
docs/floo/classfloo_1_1_b_m_x_user_profile.html/html/body/div/div/div/table/tr/td/p = Normal user
docs/floo/classfloo_1_1_b_m_x_user_profile.html/html/body/div/div/div/table/tr/td/p = Power user
docs/floo/classfloo_1_1_b_m_x_user_service.html/html/body/div/div/div/dl/dd/table/tr/td = Device token
docs/floo/classfloo_1_1_b_m_x_user_service.html/html/body/div/div/div/dl/dd/table/tr/td = User profile
docs/floo/classfloo_1_1_b_m_x_user_service.html/html/body/div/div/div/dl/dd/table/tr/td = Whether to download thumbnail, true for thumbnail, false for original
docs/floo/classfloo_1_1_b_m_x_user_service.html/html/body/div/div/div/dl/dd/table/tr/td = Device list, pass in an empty list function and fetch the returned device list here
docs/floo/classfloo_1_1_b_m_x_user_service.html/html/body/div/div/div/dl/dd/table/tr/td = User profile, initially passed in a pointing-to-empty shared_ptr object, and fetch user profile here after the function returned.
docs/floo/classfloo_1_1_b_m_x_user_service.html/html/body/div/div/div/dl/dd/table/tr/td = Add friend authentication
docs/floo/classfloo_1_1_b_m_x_user_service.html/html/body/div/div/div/dl/dd/table/tr/td = Add friend authentication question
docs/floo/classfloo_1_1_b_m_x_user_service.html/html/body/div/div/div/dl/dd/table/tr/td = Whether to automatically agree to group invitation, true to agree, false not to
docs/floo/classfloo_1_1_b_m_x_user_service.html/html/body/div/div/div/dl/dd/table/tr/td = Whether to automatically download thumbnail and voice attachment, true to download, false not to
docs/floo/classfloo_1_1_b_m_x_user_service.html/html/body/div/div/div/dl/dd/table/tr/td = Whether to allow push, true to push, false not to
docs/floo/classfloo_1_1_b_m_x_user_service.html/html/body/div/div/div/dl/dd/table/tr/td = Whether to push details, true to push, false not to
docs/floo/classfloo_1_1_b_m_x_user_service.html/html/body/div/div/div/dl/dd/table/tr/td = Whether to sound alert when new message received, true to alert, false not to
docs/floo/classfloo_1_1_b_m_x_user_service.html/html/body/div/div/div/dl/dd/table/tr/td = Whether to vibrate alert when new message received, true to alert, false not to
docs/floo/classfloo_1_1_b_m_x_user_service.html/html/body/div/div/div/dl/dd/table/tr/td = Private extension information
docs/floo/classfloo_1_1_b_m_x_user_service.html/html/body/div/div/div/dl/dd/table/tr/td = Public extension information
docs/floo/classfloo_1_1_b_m_x_user_service.html/html/body/div/div/div/dl/dd/table/tr/td = Local address to upload avatar
docs/floo/classfloo_1_1_b_m_x_user_service_listener.html/html/body/div/div/div/dl/dd/table/tr/td = Connection state
docs/floo/classfloo_1_1_b_m_x_video_attachment.html/html/body/div/table/tr/td = URL for remote thumbnail
docs/floo/classfloo_1_1_b_m_x_video_attachment.html/html/body/div/table/tr/td = Set thumbnail ratel server path to send video clip message
docs/floo/classfloo_1_1_b_m_x_video_attachment.html/html/body/div/table/tr/td = Thumbnail ratel server path
docs/floo/classfloo_1_1_b_m_x_video_attachment.html/html/body/div/div/div/dl/dd/table/tr/td = Local path of thumbnail file
docs/floo/classfloo_1_1_b_m_x_video_attachment.html/html/body/div/div/div/dl/dd/table/tr/td = Thumbnail ratel file server address
docs/floo/classfloo_1_1_b_m_x_video_attachment.html/html/body/div/div/div/dl/dd/table/tr/td = Thumbnail of video clip message
docs/floo/classfloo_1_1_b_m_x_video_attachment.html/html/body/div/div/div/dl/dd/table/tr/td = Thumbnail server path for video clip message
docs/floo/classfloo_1_1_b_m_x_voice_attachment.html/html/body/div/div/div/dl/dd/table/tr/td = Audio length
docs/floo/structfloo_1_1_b_m_x_s_d_k_config_1_1_host_config.html/html/body/div/div/dl/dd/table/tr/td = IM server address
docs/floo/structfloo_1_1_b_m_x_s_d_k_config_1_1_host_config.html/html/body/div/div/dl/dd/table/tr/td = IM server interface
docs/floo/structfloo_1_1_b_m_x_s_d_k_config_1_1_host_config.html/html/body/div/div/dl/dd/table/tr/td = ratel server address
docs/index.html = title: "Maximtop Development Guide"
docs/index.html/div/nav/ul/li/attr-href = #Product features
docs/index.html/div/nav/ul/li/a = Product Features
docs/index.html/div/nav/ul/li/attr-href = #Access guide for beginners
docs/index.html/div/nav/ul/li/a = Access Guide for Beginners
docs/index.html/div/nav/ul/li/attr-href = #Server-side
docs/index.html/div/nav/ul/li/ul/li/attr-href = #api-document
docs/index.html/div/nav/ul/li/ul/li/a = API Document
docs/index.html/div/nav/ul/li/ul/li/attr-href = #On-premise deployment
docs/index.html/div/nav/ul/li/attr-href = #Client sdk
docs/index.html/div/nav/ul/li/a = Client SDK
docs/index.html/div/nav/ul/li/ul/li/attr-href = #api details
docs/index.html/div/nav/ul/li/ul/li/a = API Details
docs/index.html/div/nav/ul/li/ul/li/attr-href = #Platform compatibility
docs/index.html/div/nav/ul/li/ul/li/a = Platform Compatibility
docs/index.html/div/nav/ul/li/ul/li/attr-href = #Client error code
docs/index.html/div/nav/ul/li/ul/li/a = Client Error Code
docs/index.html/div/div/p = Maximtop is a one-click IM cloud service based on multi-cloud architecture. Enterprises can quickly add chat functions to applications by integrating instant messaging IM SDK and using cloud services. After SDK integrated, the typical application architecture is as follows:
docs/index.html/div/div/figure/figcaption = Maximtop open platform architecture
docs/index.html/div/div/p = With the accumulation of instant messaging IM technology for more than ten years, Maximtop IM SDK and service API have been optimized to provide more professional services through simpler interfaces.
docs/index.html/div/div/p = One-click enable multi-cloud architecture, which is the unique advantage of Maximtop IM Cloud Service.
docs/index.html/div/div/p = One-click enable means from basic functions to service customization, all can be opened and used with one-click operation on the console; Multi-cloud architecture supports free migration of applications in different deployment modes of Public Cloud, Proprietary Cloud and Private Cloud, conforming to the business development stages, and implementing worry-free, seamless platform migration and switching.
docs/index.html/div/div/p = With the omnipotent console, there are only two things you need to do, one is to integrate Maximtop IM SDK on the client side, and the other is to connect Maximtop API service on the server side. This paper mainly introduces the work related to client SDK integration.
docs/index.html/div/div/p = Maximtop IM SDK is cross-platform, including mobile (iOS/Android), PC desktop (Linux/Windows/Mac), Web browser (including H5) and WeChat applet. In order to maximize reuse and improve service quality, the IM SDK technology stack of Maximtop is as follows:
docs/index.html/div/div/figure/figcaption = Maximtop IM SDK technology stack
docs/index.html/div/div/ol/li/p = Unified design and implementation of binary instant messaging protocol XSYNC, providing C++ version and JavaScript version respectively;
docs/index.html/div/div/ol/li/p = Encapsulate the C++ SDK of the whole platform based on C++ communication library, and continue to encapsulate the SDK of mobile (iOS/Android) and PC desktop (Linux/Windows/Mac) on this basis;
docs/index.html/div/div/ol/li/p = Both mobile terminals encapsulate the local UI Kit library before implementing the Maximtop DemoApp, but iOS and Android are slightly different. iOS encapsulates SDK through Object-C and then further transforms it into Swift library, while Android directly encapsulates Java library for upper layer use through Swig framework and JNI technology;
docs/index.html/div/div/ol/li/p = PC desktop encapsulates C++ communication library through Electron, and shares a set of UI components implemented by Vue.js with Web browser end;
docs/index.html/div/div/ol/li/p = Javascript communication library is provided to the Web browser (including H5) after being encrypted and encapsulated by WebAssembly;
docs/index.html/div/div/ol/li/p = WeChat applet is different from Web browser except protocol library due to platform reasons. The system layer calls WeChat's network and repository, and the upper layer uses WeChat's UI Kit;
docs/index.html/div/div/p = Before you start integrating all clients, you need to create an application through Maximtop console, get the AppID of the application and set it on each side.
docs/index.html/div/div/ol/li = Create account
docs/index.html/div/div/p = Register and login
docs/index.html/div/div/p/a = Maximtop Console
docs/index.html/div/div/ol/li = Create application
docs/index.html/div/div/p = After login, click to create application
docs/index.html/div/div/figure/figcaption = Create application at console
docs/index.html/div/div/p = After application created, App ID and other important information can be obtained in Application Information page; or you can click on the function page to configure it.
docs/index.html/div/div/figure/figcaption = View application information
docs/index.html/div/div/attr-id = api-document
docs/index.html/div/div/p/a = Server-side API
docs/index.html/div/div/p/a = Installation package
docs/index.html/div/div/p = And then follow the steps directly from Console, you can also view
docs/index.html/div/div/p/a = detailed installation document
docs/index.html/div/div/attr-id = Client sdk
docs/index.html/div/div/p = Maximtop IM Client SDK, codename floo. Following IM SDKs in document will be replaced with floo.
docs/index.html/div/div/attr-id = api document
docs/index.html/div/div/ol/li = , WeChat applet API is exactly the same
docs/index.html/div/div/p = Maximtop supports following platforms:
docs/index.html/div/div/table/thead/tr/th = Platform
docs/index.html/div/div/table/thead/tr/th = Compatibility
docs/index.html/div/div/table/tbody/tr/td = iOS 9.0 +
docs/index.html/div/div/table/tbody/tr/td = Android 4.1 +
docs/index.html/div/div/table/tbody/tr/td = IE 10 and above, Chrome, Firefox, Safari
docs/index.html/div/div/table/tbody/tr/td = Node.js version of the SDK supports Electron development framework, but only for x86_64 architecture
docs/index.html/div/div/table/tbody/tr/td = C++ version of the SDK, supports x86/x86-x64/ARM/MIPS architecture
docs/index.html/div/div/p = To be added, please refer
docs/index.html/div/div/p/a = Source update
docs/index.html/div/div/table/thead/tr/th = Error code
docs/index.html/div/div/table/tbody/tr/td = Message don’t support the operation
docs/index.html/div/div/table/tbody/tr/td = Server don’t support encrypt method
docs/install_maxim.html = title: "Private Cloud Deployment Document"
docs/install_maxim.html/div/nav/ul/li/attr-href = #Profile
docs/install_maxim.html/div/nav/ul/li/a = Profile
docs/install_maxim.html/div/nav/ul/li/attr-href = #Create application
docs/install_maxim.html/div/nav/ul/li/attr-href = #Enable Private Cloud Services
docs/install_maxim.html/div/nav/ul/li/a = Enable Private Cloud Services
docs/install_maxim.html/div/nav/ul/li/attr-href = #Setup Private Cloud
docs/install_maxim.html/div/nav/ul/li/a = Setup Private Cloud
docs/install_maxim.html/div/nav/ul/li/ul/li/attr-href = #Single server version
docs/install_maxim.html/div/nav/ul/li/ul/li/a = Single server version
docs/install_maxim.html/div/nav/ul/li/ul/li/attr-href = #Cluster version
docs/install_maxim.html/div/nav/ul/li/ul/li/a = Cluster version
docs/install_maxim.html/div/nav/ul/li/attr-href = #Other considerations
docs/install_maxim.html/div/nav/ul/li/a = Other considerations
docs/install_maxim.html/div/div/p = Maximtop On-premise Deployment provides two deployment modes: Single server version and cluster version. 3 operates, 10 minutes to setup, the Console provides a concise state monitoring page for controlling system running state in real-time.
docs/install_maxim.html/div/div/p/a = Login Console
docs/install_maxim.html/div/div/p = Click to create application. Your application will use Free Edition package by default, or can be upgraded to Business Edition.
docs/install_maxim.html/div/div/p = 1. After application created, go to Application Details page.
docs/install_maxim.html/div/div/figure/figcaption = Application information
docs/install_maxim.html/div/div/p = 2. Click to change plan, select Private Cloud and then “Continue”.
docs/install_maxim.html/div/div/p = 3. Click the Private Cloud icon, go to the Private Cloud Details page, download installation package maxim.ctl
docs/install_maxim.html/div/div/figure/figcaption = Private Cloud Deployment
docs/install_maxim.html/div/div/p = 4. Get the installation token, which can be copied to clipboard or downloaded as a local file for later use. In the installation script, we use maxim.token.XXXXXXX.txt to demonstrate.
docs/install_maxim.html/div/div/figure/figcaption = Get Private Cloud installation token
docs/install_maxim.html/div/div/p = Installation prerequisites
docs/install_maxim.html/div/div/blockquote/p = Linux: Ubuntu 18.04 or CentOS 7/8 recommended
docs/install_maxim.html/div/div/blockquote/p = Raspberry Pie: Ubuntu 18.04 rasp3 recommended
docs/install_maxim.html/div/div/blockquote/p = MacOS: Catalina 10.15 recommended
docs/install_maxim.html/div/div/ul/li = Hardware configuration：
docs/install_maxim.html/div/div/blockquote/p = Quad-core CPU, 8 G RAM, 100 G hard disk
docs/install_maxim.html/div/div/ul/li = 3 or more servers required if you choose to install Cluster version
docs/install_maxim.html/div/div/ul/li = Download installation package maxim.ctl
docs/install_maxim.html/div/div/p = 1. First, get a server ready for on-premise deployment and log ssh on to it. Then, execute the download installation script command and elevate the executable permissions. The command is as follows:
docs/install_maxim.html/div/div/p = Screenshot of execution result:
docs/install_maxim.html/div/div/figure/figcaption = Single server version installation: Step 1
docs/install_maxim.html/div/div/p = 2. Run installation
docs/install_maxim.html/div/div/ul/li = Ensure your server to install on has a public network IP, and execute the following command to start.
docs/install_maxim.html/div/div/p = Note: “Enter maxim install token” hint, means please enter your copied installation token to continue.
docs/install_maxim.html/div/div/p = Screenshot of execution started:
docs/install_maxim.html/div/div/figure/figcaption = Single server version installation: Step 2
docs/install_maxim.html/div/div/p = Screenshot of installation completed
docs/install_maxim.html/div/div/figure/figcaption = Single server version installation: Step 3
docs/install_maxim.html/div/div/ul/li = The local environment is not accessible externally, and the parameter --net internal needs to be added during installation to prompt the installer to select intranet IP registration.
docs/install_maxim.html/div/div/p = Execute the following command to start installation
docs/install_maxim.html/div/div/p = Hint: The installation script hints “Enter maxim install token”, means please enter the copied installation token to continue.
docs/install_maxim.html/div/div/figure/figcaption = Single server version installation: Step 4
docs/install_maxim.html/div/div/figure/figcaption = Single server version installation: Step 5
docs/install_maxim.html/div/div/p = Hint: Wait for the installation to complete, which takes about 15 minutes.
docs/install_maxim.html/div/div/p = 1. Configure cluster access
docs/install_maxim.html/div/div/p = Configure the ssh permission of the first host to the remaining hosts, taking three hosts, 172.16.0.78, 172.16.0.79, 172.16.0.80 as examples.
docs/install_maxim.html/div/div/p = ssh login master node (172.16.0.78)
docs/install_maxim.html/div/div/p = Execute the following command to generate public and private key for ssh:
docs/install_maxim.html/div/div/figure/figcaption = Cluster permission configuration: Step 1
docs/install_maxim.html/div/div/p = Execute the output of the following commands on hosts 172.16.0.78, 172.16.0.79, 172.16.0.80, respectively
docs/install_maxim.html/div/div/p = Screenshot of command output:
docs/install_maxim.html/div/div/figure/figcaption = Cluster permission configuration: Step 2
docs/install_maxim.html/div/div/p = Execution result of the command output at 172.16.0.78:
docs/install_maxim.html/div/div/figure/figcaption = Cluster permission configuration: Step 3
docs/install_maxim.html/div/div/p = Execution result of the command output at 172.16.0.79:
docs/install_maxim.html/div/div/figure/figcaption = Cluster permission configuration: Step 4
docs/install_maxim.html/div/div/p = Execution result of the command output at 172.16.0.80:
docs/install_maxim.html/div/div/figure/figcaption = Cluster permission configuration: Step 5
docs/install_maxim.html/div/div/p = 2. ssh login on to the first host 172.16.0.78, execute the following command to download installation script and elevate executable permission:
docs/install_maxim.html/div/div/figure/figcaption = Cluster version installation: Step 1
docs/install_maxim.html/div/div/ul/li = Ensure the sever has a public network IP, execute the following command to start.
docs/install_maxim.html/div/div/figure/figcaption = Cluster version installation: Step 2
docs/install_maxim.html/div/div/figure/figcaption = Cluster version installation: Step 3
docs/install_maxim.html/div/div/p = Execute the following command to install.
docs/install_maxim.html/div/div/figure/figcaption = Cluster version installation: Step 4
docs/install_maxim.html/div/div/figure/figcaption = Cluster version installation: Step 5
docs/install_maxim.html/div/div/p = Hint: Wait for the installation to complete, which takes about 20 minutes.
docs/install_maxim.html/div/div/ol/li/p = After the service is installed, you need to contact the server for self-inspection. If it is determined that the local environment cannot be accessed externally, you need to add the parameter --net internal to prompt the installer to select intranet IP registration.
docs/install_maxim.html/div/div/ol/li/p = If the host has a firewall, you need to ensure that ports 443 and 80 are accessible.
docs/install_maxim.html/div/div/ol/li/p = How to check Private Cloud installation progress and data migration status?
docs/install_maxim.html/div/div/figure/figcaption = Click “Private Cloud” to view the installation progress through the progress of node information
docs/install_maxim.html/div/div/ol/li = After installation completed, open Maximtop Console to enter System Status page.
docs/install_maxim.html/div/div/figure/figcaption = If all checks are normal, means the service is normal
docs/ios/Classes/BMXClient.html/html/body/header/div/p/a = Maximtop
docs/ios/Classes/BMXClient.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Password
docs/ios/Classes/BMXClient.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Login by user ID and token
docs/ios/Classes/BMXClient.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Login automatically by username (a successful login before required, faster)
docs/ios/Classes/BMXClient.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Login automatically by user ID (a successful login before required, faster)
docs/ios/Classes/BMXClient.html/html/body/article/div/div/footer/div/p = Copyright © 2021 Maximtop. All rights reserved. Updated: 2021-06-26
docs/ios/Classes/BMXConversation.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Number of unread messages
docs/ios/Classes/BMXConversation.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Number of all messages in session
docs/ios/Classes/BMXConversation.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Playback state
docs/ios/Classes/BMXConversation.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Set message unread state, update the number of unread messages locally
docs/ios/Classes/BMXConversation.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Read or unread
docs/ios/Classes/BMXConversation.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Update result
docs/ios/Classes/BMXConversation.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Load messages, starting from the reference message to load earlier messages; starting from the latest message if not specified
docs/ios/Classes/BMXConversation.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Reference message Id
docs/ios/Classes/BMXCreatGroupOption.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Chatroom or not
docs/ios/Classes/BMXCreatGroupOption.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Invitation information received by members when group created
docs/ios/Classes/BMXCreatGroupOption.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Local path of group avatar
docs/ios/Classes/BMXCreatGroupOption.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Members added when group created
docs/ios/Classes/BMXCreatGroupOption.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Create group entity
docs/ios/Classes/BMXCreatGroupOption.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Required
docs/ios/Classes/BMXCreatGroupOption.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Optional
docs/ios/Classes/BMXFileAttachment.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Display name
docs/ios/Classes/BMXFileAttachment.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Download state
docs/ios/Classes/BMXFileAttachment.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Initialize file BMXFileAttachment
docs/ios/Classes/BMXFileAttachment.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = File data
docs/ios/Classes/BMXFileAttachment.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = File path
docs/ios/Classes/BMXGroup.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Group avatar thumbnail
docs/ios/Classes/BMXImageAttachment.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Set to receive thumbnail for image message
docs/ios/Classes/BMXLocationAttachment.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Initialize BMXLocationAttachment
docs/ios/Classes/BMXMessageObject.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Create text message
docs/ios/Classes/BMXMessageObject.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Content
docs/ios/Classes/BMXMessageObject.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Send id
docs/ios/Classes/BMXMessageObject.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Receive id
docs/ios/Classes/BMXMessageObject.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Create attachment-message
docs/ios/Classes/BMXMessageObject.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Create receive text-message
docs/ios/Classes/BMXMessageObject.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Timestamp
docs/ios/Classes/BMXMessageObject.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Create receive attachment-message
docs/ios/Classes/BMXMessageSetting.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Push switch
docs/ios/Classes/BMXMessageSetting.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Push details
docs/ios/Classes/BMXMessageSetting.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Push sound alert
docs/ios/Classes/BMXMessageSetting.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Push vibrate alert
docs/ios/Classes/BMXMessageSetting.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Automatically download attachment
docs/ios/Classes/BMXRoster.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Friend Avatar
docs/ios/Classes/BMXSDKConfig.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Get the unique identifier of device, is using a database
docs/ios/Classes/BMXSDKConfig.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Get whether dns function enabled, set whether to enable dns function, default enabled.
docs/ios/Classes/BMXSDKConfig.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Get user-defined dns server address, set user-defined server address, use the user-defined dns first when the dns server set.
docs/ios/Classes/BMXSDKConfig.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Get user’s appId, set user’s appId.
docs/ios/Classes/BMXUserProfile.html/html/body/article/div/div/main/div/div/div/div/div/div/p = User level
docs/ios/Classes/BMXUserProfile.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Avatar url
docs/ios/Classes/BMXUserProfile.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Local path of avatar
docs/ios/Classes/BMXUserProfile.html/html/body/article/div/div/main/div/div/div/div/div/div/p = url of avatar thumbnail
docs/ios/Classes/BMXUserProfile.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Local path of avatar thumbnail
docs/ios/Classes/BMXUserProfile.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Mobile number
docs/ios/Classes/BMXUserProfile.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Public information
docs/ios/Classes/BMXUserProfile.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Private information
docs/ios/Classes/BMXUserProfile.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Message settings
docs/ios/Classes/BMXUserProfile.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Friend authentication mode
docs/ios/Classes/BMXUserProfile.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Automatically receive group invitations
docs/ios/Classes/BMXVideoAttachment.html/html/body/article/div/div/main/div/div/div/div/div/div/p = video size
docs/ios/Classes/BMXVideoAttachment.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Length
docs/ios/Classes/BMXVideoAttachment.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Thumbnail path
docs/ios/Classes/BMXVideoAttachment.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Thumbnail url
docs/ios/Classes/BMXVideoAttachment.html/html/body/article/div/div/main/div/div/div/div/div/div/p = thumbnail file size
docs/ios/Classes/BMXVideoAttachment.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Video download status
docs/ios/Classes/BMXVoiceAttachment.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Initialization
docs/ios/Classes/BMXVoiceAttachment.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Audio path
docs/ios/Classes/BMXVoiceAttachment.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Display
docs/ios/Classes/BMXVoiceAttachment.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Audio Data
docs/ios/Protocols/BMXChatManager.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Simple forward message, user should first create the forward message via BMXMessagse::createForwardMessage()
docs/ios/Protocols/BMXChatServiceProtocol.html/html/body/article/div/div/main/div/div/div/div/div/div/p = New session locally created
docs/ios/Protocols/BMXChatServiceProtocol.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Number of unreads
docs/ios/Protocols/BMXGroupManager.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Get group list
docs/ios/Protocols/BMXGroupManager.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Pull from server if forceRefresh is set
docs/ios/Protocols/BMXGroupManager.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Get group information
docs/ios/Protocols/BMXGroupManager.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Group
docs/ios/Protocols/BMXGroupManager.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Group list information returned by search result,
docs/ios/Protocols/BMXGroupManager.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Destroy group (valid only for group Owner)
docs/ios/Protocols/BMXGroupManager.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Membership application information
docs/ios/Protocols/BMXGroupManager.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Get group member nicknames in batch
docs/ios/Protocols/BMXGroupManager.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Get group member list in pages
docs/ios/Protocols/BMXGroupManager.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Get group member list,
docs/ios/Protocols/BMXGroupManager.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Pull from server if forceRefresh is set, max. 1,000 members
docs/ios/Protocols/BMXGroupManager.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = id array
docs/ios/Protocols/BMXGroupManager.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Adding information
docs/ios/Protocols/BMXGroupManager.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Block group message
docs/ios/Protocols/BMXPushManager.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = User token passed in by App when push initialization.
docs/ios/Protocols/BMXPushManager.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Function interface for stop push
docs/ios/Protocols/BMXPushManager.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = token device’s push token
docs/ios/Protocols/BMXPushManager.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Bind callback
docs/ios/Protocols/BMXPushManager.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Get callback
docs/ios/Protocols/BMXPushManager.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Used to remove the specified push displayed in Notification
docs/ios/Protocols/BMXPushManager.html/html/body/article/div/div/main/div/div/div/div/div/div/p = iOS 10 and over support to remove specified push by identifier
docs/ios/Protocols/BMXPushManager.html/html/body/article/div/div/main/div/div/div/div/div/div/p = For iOS 10 and earlier versions, remove all pushes if identifier is set to 0
docs/ios/Protocols/BMXPushManager.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = If notificationId is set to 0, remove all pushes
docs/ios/Protocols/BMXPushManager.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Used to remove all pushes displayed in Notification
docs/ios/Protocols/BMXPushManager.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Listener
docs/ios/Protocols/BMXPushServiceProtocol.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Push certificate
docs/ios/Protocols/BMXPushServiceProtocol.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Set callback for succeeded tag of user push.
docs/ios/Protocols/BMXPushServiceProtocol.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Get callback for succeeded tag of user push.
docs/ios/Protocols/BMXPushServiceProtocol.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Delete callback for succeeded tag of user push.
docs/ios/Protocols/BMXPushServiceProtocol.html/html/body/article/div/div/main/div/div/div/div/div/div/p = New push notification received
docs/ios/Protocols/BMXRosterManager.html/html/body/article/div/div/main/div/div/div/div/div/div/ul/li = Get friend list
docs/ios/Protocols/BMXRosterManager.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = If forceRefresh == true, force pull from server-side
docs/ios/Protocols/BMXRosterManager.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Search by friend ID
docs/ios/Protocols/BMXRosterManager.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Friend ID
docs/ios/Protocols/BMXRosterManager.html/html/body/article/div/div/main/div/div/div/div/div/div/p = Search by friend Name
docs/ios/Protocols/BMXRosterManager.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Friend name
docs/ios/Protocols/BMXRosterServiceProtocol.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Initiator
docs/ios/Protocols/BMXRosterServiceProtocol.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Recipient
docs/ios/Protocols/BMXRosterServiceProtocol.html/html/body/article/div/div/main/div/div/div/div/div/div/ul/li = User A will receive this callback after User B removes a friend relationship with User A
docs/ios/Protocols/BMXRosterServiceProtocol.html/html/body/article/div/div/main/div/div/div/div/div/div/ul/li = User A will receive this callback after User B requests a friend relationship with User A
docs/ios/Protocols/BMXRosterServiceProtocol.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Friend request information
docs/ios/Protocols/BMXRosterServiceProtocol.html/html/body/article/div/div/main/div/div/div/div/div/div/ul/li = User A will receive this callback after User B agrees to User A’s friend request
docs/ios/Protocols/BMXRosterServiceProtocol.html/html/body/article/div/div/main/div/div/div/div/div/div/ul/li = User A will receive this callback after User B rejects to User A’s friend request
docs/ios/Protocols/BMXRosterServiceProtocol.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Reason for rejection
docs/ios/Protocols/BMXUserManager.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Upload progress
docs/ios/Protocols/BMXUserManager.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Download progress
docs/ios/Protocols/BMXUserManager.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Callback
docs/ios/Protocols/BMXUserServiceProtocol.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Network status
docs/ios/Protocols/BMXUserServiceProtocol.html/html/body/article/div/div/main/div/div/div/div/div/div/table/tr/td/p = Error code
docs/ios/index.html/html/head/title = floo-iOS Reference - Maximtop – One-click Instant Messaging IM Based On Multi-Cloud
docs/quick/android.html = title: "Android SDK (floo-android) Quick Integration Guide"
docs/quick/android.html/div/nav/ul/li/attr-href = #sdk-architecture
docs/quick/android.html/div/nav/ul/li/a = SDK architecture
docs/quick/android.html/div/nav/ul/li/ul/li/attr-href = #Low level -api-low-level
docs/quick/android.html/div/nav/ul/li/ul/li/a = Low level API (low-level)
docs/quick/android.html/div/nav/ul/li/ul/li/attr-href = #High level -api-high-level
docs/quick/android.html/div/nav/ul/li/ul/li/a = High level API (high-level)
docs/quick/android.html/div/nav/ul/li/ul/li/attr-href = #Other tool classes
docs/quick/android.html/div/nav/ul/li/ul/li/a = Other tool classes
docs/quick/android.html/div/nav/ul/li/ul/li/attr-href = #Class library diagram as follows
docs/quick/android.html/div/nav/ul/li/ul/li/a = Class library diagram as follows
docs/quick/android.html/div/nav/ul/li/attr-href = #Import sdk
docs/quick/android.html/div/nav/ul/li/a = Import SDK
docs/quick/android.html/div/nav/ul/li/ul/li/attr-href = #aar format
docs/quick/android.html/div/nav/ul/li/ul/li/a = aar format
docs/quick/android.html/div/nav/ul/li/ul/li/attr-href = #jarso format
docs/quick/android.html/div/nav/ul/li/ul/li/a = jar+so format
docs/quick/android.html/div/nav/ul/li/attr-href = #Permission configuration
docs/quick/android.html/div/nav/ul/li/a = Permission configuration
docs/quick/android.html/div/nav/ul/li/attr-href = #APP obfuscation
docs/quick/android.html/div/nav/ul/li/a = APP obfuscation
docs/quick/android.html/div/nav/ul/li/attr-href = #Quick integration
docs/quick/android.html/div/nav/ul/li/ul/li/attr-href = #bmxclient initialization
docs/quick/android.html/div/nav/ul/li/ul/li/a = BMXClient initialization
docs/quick/android.html/div/nav/ul/li/ul/li/ul/li/attr-href = #Step 1 – Import so library file
docs/quick/android.html/div/nav/ul/li/ul/li/ul/li/a = Step 1  Import so library file
docs/quick/android.html/div/nav/ul/li/ul/li/ul/li/attr-href = #Step 2 – Initialize bmxclient
docs/quick/android.html/div/nav/ul/li/ul/li/ul/li/a = Step 2 - Initialize BMXClient
docs/quick/android.html/div/nav/ul/li/ul/li/attr-href = #Register user
docs/quick/android.html/div/nav/ul/li/ul/li/attr-href = #Login
docs/quick/android.html/div/nav/ul/li/ul/li/attr-href = #Get session list
docs/quick/android.html/div/nav/ul/li/ul/li/a = Get session list
docs/quick/android.html/div/nav/ul/li/ul/li/attr-href = #Disconnect
docs/quick/android.html/div/nav/ul/li/ul/li/a = Disconnect
docs/quick/android.html/div/nav/ul/li/attr-href = #User system
docs/quick/android.html/div/nav/ul/li/a = User system
docs/quick/android.html/div/nav/ul/li/attr-href = #Basic features
docs/quick/android.html/div/nav/ul/li/a = Basic features
docs/quick/android.html/div/nav/ul/li/ul/li/attr-href = #Single chat
docs/quick/android.html/div/nav/ul/li/ul/li/attr-href = #Group chat
docs/quick/android.html/div/nav/ul/li/ul/li/attr-href = #Group management
docs/quick/android.html/div/nav/ul/li/ul/li/a = Group management
docs/quick/android.html/div/nav/ul/li/attr-href = #Message sending
docs/quick/android.html/div/nav/ul/li/a = Message sending
docs/quick/android.html/div/nav/ul/li/ul/li/attr-href = #Message remote push
docs/quick/android.html/div/nav/ul/li/ul/li/a = Message remote push
docs/quick/android.html/div/nav/ul/li/ul/li/attr-href = #Message format
docs/quick/android.html/div/nav/ul/li/ul/li/a = Message format
docs/quick/android.html/div/nav/ul/li/ul/li/ul/li/attr-href = #Text-message
docs/quick/android.html/div/nav/ul/li/ul/li/ul/li/attr-href = #Image-message
docs/quick/android.html/div/nav/ul/li/ul/li/ul/li/attr-href = #File-message
docs/quick/android.html/div/nav/ul/li/ul/li/ul/li/attr-href = #Location-message
docs/quick/android.html/div/nav/ul/li/ul/li/ul/li/attr-href = #Voice-message
docs/quick/android.html/div/nav/ul/li/ul/li/attr-href = #Message operation
docs/quick/android.html/div/nav/ul/li/ul/li/a = Message operation
docs/quick/android.html/div/nav/ul/li/attr-href = #Message delivery listening
docs/quick/android.html/div/nav/ul/li/a = Message delivery listening
docs/quick/android.html/div/nav/ul/li/attr-href = #Advanced features
docs/quick/android.html/div/nav/ul/li/a = Advanced features
docs/quick/android.html/div/div/attr-id = android-sdk-integration guide
docs/quick/android.html/div/div/h2 = Android SDK integration guide
docs/quick/android.html/div/div/attr-id = sdk-architecture
docs/quick/android.html/div/div/p = Maximtop IM SDK (codename floo) is implemented in C++, and each platform (Android, iOS, Linux, etc.) is encapsulated on this basis to complete the development of local library, so as to achieve the purpose of multi-platform reuse and keep the consistency of cross-platform protocol implementation. Floo-Android, as a native application library for Android, has two APIs available to developers, namely, low-level API and high-level API, in other words synchronous interface and asynchronous interface.
docs/quick/android.html/div/div/attr-id = Low level-api-low-level
docs/quick/android.html/div/div/p = Synchronous interface, the class name ends with Service, which is represented by L/S in the following description for easier understanding, where L stands for Low-level and S for Sync.
docs/quick/android.html/div/div/p = As mentioned earlier, floo-android entity is
docs/quick/android.html/div/div/p = generated by framework automatically. Its java code is generated by SWIG, invokes the underlaying C++ class library by JNI, so most interfaces are synchronous, that is, the result is returned after interface invoked.
docs/quick/android.html/div/div/p = In code generation and transformation process, related data structures are directly mapped to the underlying class library for reducing memory copies, so its performance is close to calling the underlying library directly.
docs/quick/android.html/div/div/p = Synchronous service classes are as follows:
docs/quick/android.html/div/div/pre/code = BMXClient: SDK aggregation class, which contains all service classes and implements network event listening interface
docs/quick/android.html/div/div/pre/code = BMXChatService: message sending, message history retrieval, session list
docs/quick/android.html/div/div/pre/code = BMXUserService: Register account, login, logout, my settings
docs/quick/android.html/div/div/pre/code = BMXRosterService: Friend list, blacklist
docs/quick/android.html/div/div/pre/code = BMXGroupService: Group management (create, dissolve, search, set, member management, invite, apply, accept, reject)
docs/quick/android.html/div/div/attr-id = High level-api-high-level
docs/quick/android.html/div/div/p = Asynchronous interface, and the class name ends with Manager, which is represented by H/A for easier understanding, where H for High-level and A for Async.
docs/quick/android.html/div/div/p = We also re-encapsulated high-level API based on this class, using a more friendly data structure and completing asynchronous encapsulation for development integration.
docs/quick/android.html/div/div/p = Simply put, the related call performs specific actions on child thread (for example, searching for friends), and the current thread will return result directly without blocking. The result of the action is notified to the caller through a callback function, where the caller can handle business logic such as UI refresh.
docs/quick/android.html/div/div/p = Asynchronous service classes are as follows:
docs/quick/android.html/div/div/pre/code = BaseManeger:Manger: Manage basic classes
docs/quick/android.html/div/div/pre/code = ChatManager: Message sending, message history retrieval, session list
docs/quick/android.html/div/div/pre/code = UserManager: Register account, login, logout, my settings
docs/quick/android.html/div/div/pre/code = RosterManager: Friend list, blacklist
docs/quick/android.html/div/div/pre/code = BMXCallBack: Untyped interface callback
docs/quick/android.html/div/div/pre/code = BMXDataCallBack<T>: Generic type with data callback
docs/quick/android.html/div/div/pre/code = BMXGroupServiceListener: Group event listening
docs/quick/android.html/div/div/pre/code = BMXUserServiceListener: User event listening
docs/quick/android.html/div/div/pre/code = BMXRosterServiceListener: Friend event listening
docs/quick/android.html/div/div/pre/code = BMXNetworkListener: Network event listening interface, implemented by BMXClient
docs/quick/android.html/div/div/pre/code = BMXConversation: Session
docs/quick/android.html/div/div/pre/code = BMXMessage: Message
docs/quick/android.html/div/div/pre/code = BMXGroup: Group
docs/quick/android.html/div/div/pre/code = BMXRosterItem roster item (friend, stranger, blacklist, former friend)
docs/quick/android.html/div/div/pre/code = BMXUserProfile: User information
docs/quick/android.html/div/div/pre/code = +---+ Low-level API: L/S  +------> BMXRosterService
docs/quick/android.html/div/div/pre/code = |                      |  +---+ High-level API: H/A +-----+
docs/quick/android.html/div/div/pre/code = | Maximtop IM SDK: Floo +--+   |               |     +---> BMXRosterManager
docs/quick/android.html/div/div/pre/code = +---+ Utility：Tool class +--+
docs/quick/android.html/div/div/attr-id = Import sdk
docs/quick/android.html/div/div/p = Aar or jar + so formats are selectable in SDK import
docs/quick/android.html/div/div/ul/li = Download aar file to /libs in project
docs/quick/android.html/div/div/ul/li = Add dependency in the dependencies block of build.gradle file, refer to
docs/quick/android.html/div/div/ul/li/a = maxim-android source
docs/quick/android.html/div/div/ul/li = for the latest version.
docs/quick/android.html/div/div/attr-id = jarso format
docs/quick/android.html/div/div/ul/li = Download jar package and so library to /lib in project
docs/quick/android.html/div/div/ul/li = Add implementation fileTree(dir: ‘libs’, include: \[’\*.jar’]) to build.gradle file
docs/quick/android.html/div/div/p = Add permissions as follows in AndroidManifest.xml:
docs/quick/android.html/div/div/pre/code = Add -keep class im.floo.floolib.**{*;} in ProGuard file
docs/quick/android.html/div/div/attr-id = bmxclient initialization
docs/quick/android.html/div/div/attr-id = Step 1 – Import so library file
docs/quick/android.html/div/div/p = Add import to app entry class
docs/quick/android.html/div/div/attr-id = Step 2 – Initialize bmxclient
docs/quick/android.html/div/div/pre/code = // Set storage path
docs/quick/android.html/div/div/pre/code = // Set ID for push platform
docs/quick/android.html/div/div/pre/code = // Set sdk config
docs/quick/android.html/div/div/pre/code = // Initialize BMXClient
docs/quick/android.html/div/div/p = Note: If you use a High-level API (asynchronous invocation), following methods are required to get the service class API entity:
docs/quick/android.html/div/div/pre/code = ChatManager: Get message’s manager object via bmxClient.getChatManager().
docs/quick/android.html/div/div/pre/code = UserManager: Get user’s manager object via bmxClient.getUserManager().
docs/quick/android.html/div/div/pre/code = GroupManager: Get group’s manager object via bmxClient.getGroupManager().
docs/quick/android.html/div/div/pre/code = RosterManager: Get roster’s manager object via bmxClient.getRosterManager().
docs/quick/android.html/div/div/p = L/S: BMXUserProfile object reference is passed in and synchronous called, after which the profile is retrieved.
docs/quick/android.html/div/div/p = H/A: Asynchronous call on BMXDataCallBack
docs/quick/android.html/div/div/p/bmxuserprofile = Return profile instance in callback.
docs/quick/android.html/div/div/pre/code = //Return profile
docs/quick/android.html/div/div/p = Two login modes: One is normal manual login, which involves getting the token and establishing a tcp connection; the other is quick login, which caches the token locally.
docs/quick/android.html/div/div/p = L/S: Success is judged by the value of returned BMXErrorCode.
docs/quick/android.html/div/div/pre/code = // Parameter：username password
docs/quick/android.html/div/div/p = H/A: Success is judge by the returned BMXErrorCode in BMXCallBack.
docs/quick/android.html/div/div/p = L/S: BMXConversationList object reference is passed in and called, after which the session list is retrieved.
docs/quick/android.html/div/div/p = H/A: From BMXDataCallBack
docs/quick/android.html/div/div/p/bmxconversationlist = to get session list.
docs/quick/android.html/div/div/pre/code = //Return BMXConversation instance
docs/quick/android.html/div/div/p = L/S: Success is judged by the value of returned BMXErrorCode.
docs/quick/android.html/div/div/p = H/A: Judged by BMXErrorCode in BMXCallBack.
docs/quick/android.html/div/div/pre/code = //Return BMXErrorCode
docs/quick/android.html/div/div/blockquote/p = L/S: BMXErrorCode is retrieved to determine success. Parameter description: RosterId reason
docs/quick/android.html/div/div/blockquote/p = H/A: Get BMXErrorCode in BMXCallBack to determine success.
docs/quick/android.html/div/div/ul/li = Agree to add friend
docs/quick/android.html/div/div/pre/code = //Parameter description: rosterId
docs/quick/android.html/div/div/ul/li = Reject to add friend
docs/quick/android.html/div/div/pre/code = //Parameter description: rosterId reason
docs/quick/android.html/div/div/ul/li = Get rosterId
docs/quick/android.html/div/div/blockquote/p = L/S: ListOfLongLong object reference is passed in and called, after which the rosterId list is retrieved.
docs/quick/android.html/div/div/blockquote/p/listoflonglong = Get rosterID list in callback.
docs/quick/android.html/div/div/pre/code = //Return ListOfLongLong instance
docs/quick/android.html/div/div/p = Single chat refers to one-to-one chat function, BMXConversationType of single chat is BMXConversationSingle, and toId refers to userId of single chat object.
docs/quick/android.html/div/div/p = Group chat refers to the chat function of internal broadcast mode within the user set with roles and permissions, BMXConversationType is BMXConversationGroup, and toId refers to group Id.
docs/quick/android.html/div/div/ul/li = Create group
docs/quick/android.html/div/div/blockquote/p = L/S: BMXGroup object reference is passed in and called, after which the group information is retrieved.
docs/quick/android.html/div/div/pre/code = //Parameter description: option(group configuration)  group(group information)
docs/quick/android.html/div/div/blockquote/p/bmxgroup = Get group information in callback.
docs/quick/android.html/div/div/pre/code = //Return BMXGroup instance
docs/quick/android.html/div/div/ul/li = Join group
docs/quick/android.html/div/div/pre/code = //Parameter description: group(group information)  message(reason for membership application)
docs/quick/android.html/div/div/pre/code = //Return BMXErrorCode instance
docs/quick/android.html/div/div/ul/li = Quit group Parameter description: group (group information)
docs/quick/android.html/div/div/ul/li = Dissolve group
docs/quick/android.html/div/div/pre/code = //Parameter description: group (group information)
docs/quick/android.html/div/div/ul/li = Get group member list
docs/quick/android.html/div/div/blockquote/p = L/S: BMXGroupMemberList object reference is passed in and called, after which the group member list is retrieved.
docs/quick/android.html/div/div/pre/code = //Parameter description: group (group information) forceRefresh (whether to pull from server)
docs/quick/android.html/div/div/blockquote/p/bmxgroupmemberlist = Get group member list in callback.
docs/quick/android.html/div/div/pre/code = //Return BMXGroupMemberList instance
docs/quick/android.html/div/div/blockquote/p = L/S: BMXGroupList object reference is passed in and called, after which the group list is retrieved.
docs/quick/android.html/div/div/pre/code = //Parameter description: forceRefresh (whether to pull from server)
docs/quick/android.html/div/div/blockquote/p/bmxgrouplist = Get group list in callback.
docs/quick/android.html/div/div/pre/code = //Return BMXGroupList instance
docs/quick/android.html/div/div/ul/li = Get group information
docs/quick/android.html/div/div/pre/code = //Parameter description: groupId  forceRefresh(whether to pull from server)
docs/quick/android.html/div/div/p = You can't chat until you login successfully. When sending messages, single chat and group chat call the same unified interface, but the only difference is to set BMXConversationType.
docs/quick/android.html/div/div/p = Developer shall configure the certificate for remote push, apply for permission in code, and send the deviceToken to MaxIM server. When receiver is not online, MaxIM server will automatically send the message through remote push.
docs/quick/android.html/div/div/p = Note: The pushed content is determined by the pushContent field of the sending message interface. If this field is empty-valued when the built-in message is sent, the default content will be pushed; user-defined messages must set this field, otherwise they will not be pushed.
docs/quick/android.html/div/div/ul/li = deviceToken passed to MaxIM interface
docs/quick/android.html/div/div/pre/code = //Parameter description: pushToken
docs/quick/android.html/div/div/pre/code = //Return BMXErroeCode instance
docs/quick/android.html/div/div/pre/code = //Parameter description: from(sender id)  to(receiver id)  type(single/group chat type)  text(text-message)
docs/quick/android.html/div/div/pre/code = //Parameter description: from(sender id)  to(receiver id)  type(single/group chat type)  w(image width)   h(image height)  path(local path of image)  size(image size)
docs/quick/android.html/div/div/p = Parameter description: from(sender id) to(receiver id) type(singe/group chat type) path(local path of file) name(file name)
docs/quick/android.html/div/div/p = Parameter description: from(sender id) to(receiver id) type(single/group chat type) latitude longitude address
docs/quick/android.html/div/div/p = Parameter description: from(sender id) to(receiver id) type(single/group chat type) path(local path of voice) time(voice length)
docs/quick/android.html/div/div/ul/li = Send
docs/quick/android.html/div/div/pre/code = // Parameter description: BMXMessage(message body)
docs/quick/android.html/div/div/pre/code = //Message sending status, required to register message receiving listener
docs/quick/android.html/div/div/ul/li = Forward
docs/quick/android.html/div/div/ul/li = Resend
docs/quick/android.html/div/div/ul/li = Revoke
docs/quick/android.html/div/div/ul/li = Download message attachment
docs/quick/android.html/div/div/p = Call instruction: pass in the download url in FileCallBack, onProgress for download progress, onFail returned for download failure, and onFinish returned for download successfully with the path.
docs/quick/android.html/div/div/ul/li = Register message callback
docs/quick/android.html/div/div/pre/code = //Message status update
docs/quick/android.html/div/div/pre/code = //Attachment status update
docs/quick/android.html/div/div/pre/code = //Revoke status update
docs/quick/android.html/div/div/pre/code = //Message received
docs/quick/android.html/div/div/pre/code = //System notification received
docs/quick/android.html/div/div/pre/code = //Read receipt received
docs/quick/android.html/div/div/pre/code = //Message delivery receipt received
docs/quick/android.html/div/div/pre/code = //Message revocation notification received
docs/quick/android.html/div/div/pre/code = //Attachment upload progress update
docs/quick/android.html/div/div/p = BMXMessageObject entity provides extensible attributes (extensionJson and configJson), extensionJson is an extension field for development use, such as edit status; configJson is an extension field for SDK's own use, such as mention and push functions.
docs/quick/android.html/div/div/ul/li/p = Group @ function
docs/quick/android.html/div/div/ul/li/p = @ function is supported in group, for meeting your @ specified user or
docs/quick/android.html/div/div/ul/li/p/attr-data-cites = every member’s need
docs/quick/android.html/div/div/ul/li/p/span = @every member’s need
docs/quick/android.html/div/div/ul/li/p = , Developer shall set the config field in BMXMessage to implement group Owner’s @ function, the later @ actions will be notified by push
docs/quick/android.html/div/div/pre/code = // Text function: Add @ object
docs/quick/android.html/div/div/pre/code = // Stored information for @ object, including all or partial members
docs/quick/android.html/div/div/pre/code = // @all
docs/quick/android.html/div/div/pre/code = // @all if all are included, besides it is necessary to judge whether the text message contains the completed @ name. If not, @ will not be triggered.
docs/quick/android.html/div/div/pre/code = // @partial members, need to traverse added @ information
docs/quick/android.html/div/div/pre/code = // Add this only if the sent text includes the name of @object, prevent the @object name in input box being modified
docs/quick/android.html/div/div/pre/code = // @partial members, only feedId and userId are necessary in feed, so other useless information shall be removed
docs/quick/android.html/div/div/ul/li = Typing message
docs/quick/android.html/div/div/pre/code = // Empty
docs/quick/android.html/div/div/pre/code = // Key up
docs/quick/api.html = title: "Server API Quick Integration Guide"
docs/quick/api.html/div/nav/ul/li/attr-href = #Getting started
docs/quick/api.html/div/nav/ul/li/a = Getting started
docs/quick/api.html/div/nav/ul/li/ul/li/attr-href = #Terminology introduction
docs/quick/api.html/div/nav/ul/li/ul/li/a = Terminology introduction
docs/quick/api.html/div/nav/ul/li/ul/li/attr-href = #api profile
docs/quick/api.html/div/nav/ul/li/ul/li/a = API profile
docs/quick/api.html/div/nav/ul/li/ul/li/attr-href = #api classification
docs/quick/api.html/div/nav/ul/li/ul/li/a = API classification
docs/quick/api.html/div/nav/ul/li/attr-href = #User api
docs/quick/api.html/div/nav/ul/li/a = User API
docs/quick/api.html/div/nav/ul/li/attr-href = #Friend api
docs/quick/api.html/div/nav/ul/li/a = Friend API
docs/quick/api.html/div/nav/ul/li/ul/li/attr-href = #Add friend
docs/quick/api.html/div/nav/ul/li/ul/li/attr-href = #Get friend list
docs/quick/api.html/div/nav/ul/li/attr-href = #Group api
docs/quick/api.html/div/nav/ul/li/a = Group API
docs/quick/api.html/div/nav/ul/li/ul/li/attr-href = #Create group
docs/quick/api.html/div/nav/ul/li/ul/li/attr-href = #Invite user to join group
docs/quick/api.html/div/nav/ul/li/ul/li/a = Invite user to join group
docs/quick/api.html/div/nav/ul/li/ul/li/attr-href = #Get group member list
docs/quick/api.html/div/nav/ul/li/ul/li/attr-href = #Dissolve group
docs/quick/api.html/div/nav/ul/li/attr-href = #Send message api
docs/quick/api.html/div/nav/ul/li/a = Send message API
docs/quick/api.html/div/nav/ul/li/ul/li/attr-href = #Admin send single chat text-message
docs/quick/api.html/div/nav/ul/li/ul/li/a = Admin send single chat text-message
docs/quick/api.html/div/nav/ul/li/ul/li/attr-href = #Error code description
docs/quick/api.html/div/nav/ul/li/ul/li/a = Error code description
docs/quick/api.html/div/div/ul/li/p = is the unique identity that MaxIM generates for App when it is created and is of string type. Available from "Application Information" page in Console.
docs/quick/api.html/div/div/ul/li/p = is the address of the API service where the app resides. Available from "Application Information" page in Console.
docs/quick/api.html/div/div/ul/li/p = is used for permission verification. You can generate access-token for App or select existing access-token from “Token Management” page in Console.
docs/quick/api.html/div/div/attr-id = api profile
docs/quick/api.html/div/div/p = MaxIM API service is based on the HTTPS security protocol, which ensures the security of data transfer when invoked. At the same time, MaxIM API service provides access control, and it is necessary to obtain the unique
docs/quick/api.html/div/div/p = to operate users, groups and other data under App legally. Involved
docs/quick/api.html/div/div/p = shall be kept properly.
docs/quick/api.html/div/div/p = Before calling any MaxIM API, please get parameter first
docs/quick/api.html/div/div/p = . Parameter
docs/quick/api.html/div/div/p = will be used in the header of request, and unspecified request Content-Type type is
docs/quick/api.html/div/div/p = a generic example of the request that calls MaxIM API (please replace the variable represented by
docs/quick/api.html/div/div/p = with a specified value):
docs/quick/api.html/div/div/attr-id = api classification
docs/quick/api.html/div/div/p = MaxIM API is mainly divided into user API, friend API, group API, message API and push API.
docs/quick/api.html/div/div/ul/li/p = Users belong to a single App, which is the foundation of instant messaging. Only with users can we realize the functions of friends and groups. User data is divided into basic information and setting information. Basic information includes email address, mobile number, username and password. Setting information includes whether to download thumbnails and files automatically, whether to confirm the invitation to join group, etc. Generally speaking, the user API mainly involves the update of its basic information and user settings, and the related API starts with
docs/quick/api.html/div/div/ul/li/p = , followed by specific resources, ex. “GET /user/settings” to get user settings API.
docs/quick/api.html/div/div/ul/li/p = Friend is the relationship between users. In MaxIM friendship design, users can set remarks for friends, set the notification method of friend messages, apply for adding friends, and blacklist a friend. Friend API provides friend information, friend application, friend list, friend blacklist and other related operations, and its API starts with
docs/quick/api.html/div/div/ul/li/p = .
docs/quick/api.html/div/div/ul/li/p = Groups enable multi-user communication. In MaxIM design, the roles of group members are divided into group Owners, group Admins and group Members, and the authority levels are lowered in turn. The group Owners have all the permissions of the group, while the Admins have the permissions to operate group members and modify group information settings. According to group settings, ordinary group Members may have or not have the permissions to modify group information and invite users to join group. The functional design of group membership includes invitation to join group, application to join group, set group blacklist and group ban list. The main APIs include group data operations and group member operations. Group data operations mainly include create group, dissolve group, transfer group Owner, update group information and group settings, group announcement operation, group shared file operation; and group member operations mainly include invite user to join group, Admin process invitation, user apply to join group, user process application, set group blacklist, set group ban list, user quit group, kick user out of group, etc. APIs start with
docs/quick/api.html/div/div/ul/li/p = Message API
docs/quick/api.html/div/div/ul/li/p = Message APIs are encapsulations of IM services designed to provide an easy way for messaging. Message APIs start with
docs/quick/api.html/div/div/p = In general, the API requested to MaxIM service will return an http code of 200 in case of a business error, and a MaxIM custom error code will be returned in the response body. See the Error Code page for the specific meaning of error code.
docs/quick/api.html/div/div/p = Some of the key APIs are demonstrated with the following values, which should be replaced in your actual request.
docs/quick/api.html/div/div/attr-id = User api
docs/quick/api.html/div/div/ul/li/p = API description
docs/quick/api.html/div/div/ul/li/p = Register a MaxIM user for the specified App.
docs/quick/api.html/div/div/ul/li/p = Request description
docs/quick/api.html/div/div/ul/li/p = Http method:
docs/quick/api.html/div/div/ul/li/p = Resource path:
docs/quick/api.html/div/div/ul/li/p = Parameter description
docs/quick/api.html/div/div/ul/li/ul/li = Header parameter
docs/quick/api.html/div/div/ul/li/table/thead/tr/th = Parameter
docs/quick/api.html/div/div/ul/li/table/thead/tr/th = Description
docs/quick/api.html/div/div/ul/li/table/thead/tr/th = Comment
docs/quick/api.html/div/div/ul/li/ul/li = Request Body parameter
docs/quick/api.html/div/div/ul/li/table/tbody/tr/td = Required, username supports only alphanumeric and underscore combinations, and cannot be pure numbers nor begin with maxim, mta
docs/quick/api.html/div/div/ul/li/p = cURL request example
docs/quick/api.html/div/div/ul/li/p = Returned result example
docs/quick/api.html/div/div/attr-id = Friend api
docs/quick/api.html/div/div/ul/li/p = Add friend for specified user.
docs/quick/api.html/div/div/ul/li/ul/li/table/tbody/tr/td = user_id of adding party
docs/quick/api.html/div/div/ul/li/ul/li/table/tbody/tr/td = user_id list of added party
docs/quick/api.html/div/div/ul/li/p = Get friend list of the specified user.
docs/quick/api.html/div/div/ul/li/ul/li/table/tbody/tr/td = user_id of current user
docs/quick/api.html/div/div/ul/li/ul/li/p = None
docs/quick/api.html/div/div/attr-id = Group api
docs/quick/api.html/div/div/ul/li/p = Create a group with the specified user as group Owner.
docs/quick/api.html/div/div/ul/li/ul/li/table/tbody/tr/td = user_id of group Owner
docs/quick/api.html/div/div/ul/li/ul/li/table/tbody/tr/td = Optional
docs/quick/api.html/div/div/ul/li/p = Invite user to join the group with the specified user as group Owner.
docs/quick/api.html/div/div/ul/li/p = Get group member list, can be in pages. Pages are controlled by limit and cursor fields, limit for page size, cursor as the name suggest.
docs/quick/api.html/div/div/ul/li/p = ：If there is still member data left after fetching data on a certain page, it will return cursor field for fetching data from the next page of the cursor.
docs/quick/api.html/div/div/ul/li/ul/li/p = Query parameter
docs/quick/api.html/div/div/ul/li/ul/li/table/tbody/tr/td = Paged cursor
docs/quick/api.html/div/div/ul/li/ul/li/table/tbody/tr/td = Optional, default the first page
docs/quick/api.html/div/div/ul/li/ul/li/table/tbody/tr/td = Number of members to fetch at once
docs/quick/api.html/div/div/ul/li/ul/li/table/tbody/tr/td = Optional, default 1,000
docs/quick/api.html/div/div/ul/li/p = Dissolve group.
docs/quick/api.html/div/div/attr-id = Send message api
docs/quick/api.html/div/div/ul/li/p = Send message to a specified destination, which can be sent in batches to groups or users. The specified destination is represented by targets field, list type and ids in list can only be one of user/group ids, and the both types cannot be mixed.
docs/quick/api.html/div/div/ul/li/ul/li/table/tbody/tr/td = List of target ids
docs/quick/api.html/div/div/ul/li/ul/li/table/tbody/tr/td = Target type, 1: Single chat 2: Group chat
docs/quick/api.html/div/div/ul/li/ul/li/table/tbody/tr/td = Message content type, 0: text-message
docs/quick/api.html/div/div/ul/li/ul/li/table/tbody/tr/td = Extension field
docs/quick/api.html/div/div/ul/li/attr-id = Appendix
docs/quick/api.html/div/div/ul/li = 1xxxx indicates an issue related to user/friend system
docs/quick/api.html/div/div/ul/li = 2xxxx indicates an issue related to group system
docs/quick/api.html/div/div/ul/li = 3xxxx indicates an issue related to license
docs/quick/api.html/div/div/table/tbody/tr/td = User does not exist
docs/quick/api.html/div/div/table/tbody/tr/td = Incorrect verification code
docs/quick/api.html/div/div/table/tbody/tr/td = Incorrect request parameter
docs/quick/api.html/div/div/table/tbody/tr/td = Missing access-token parameter in header
docs/quick/api.html/div/div/table/tbody/tr/td = User already exists
docs/quick/api.html/div/div/table/tbody/tr/td = User already exists in friend list
docs/quick/api.html/div/div/table/tbody/tr/td = User already exists in blacklist
docs/quick/api.html/div/div/table/tbody/tr/td = Friend does not exist or expired
docs/quick/api.html/div/div/table/tbody/tr/td = Invalid access-token in header
docs/quick/api.html/div/div/table/tbody/tr/td = oss exception
docs/quick/api.html/div/div/table/tbody/tr/td = User has no permission
docs/quick/api.html/div/div/table/tbody/tr/td = user_id bound
docs/quick/api.html/div/div/table/tbody/tr/td = User rejected friend request
docs/quick/api.html/div/div/table/tbody/tr/td = Server database exception
docs/quick/api.html/div/div/table/tbody/tr/td = Group does not exist
docs/quick/api.html/div/div/table/tbody/tr/td = The user is not a group member
docs/quick/api.html/div/div/table/tbody/tr/td = msg_push_mode value is illegal
docs/quick/api.html/div/div/table/tbody/tr/td = Group Owner cannot quit the group directly
docs/quick/api.html/div/div/table/tbody/tr/td = Group transfer error: Assignee is not a group member
docs/quick/api.html/div/div/table/tbody/tr/td = Group in repair mode
docs/quick/api.html/div/div/table/tbody/tr/td = Number of groups in App exceeds limit
docs/quick/api.html/div/div/table/tbody/tr/td = Number of user-created groups exceeds limit
docs/quick/api.html/div/div/table/tbody/tr/td = Number of user-joined groups exceeds limit
docs/quick/api.html/div/div/table/tbody/tr/td = Number of group members exceeds limit
docs/quick/api.html/div/div/table/tbody/tr/td = This operation needs group member permission
docs/quick/api.html/div/div/table/tbody/tr/td = This operation needs group Admin permission
docs/quick/api.html/div/div/table/tbody/tr/td = This oeration needs group Owner permission
docs/quick/api.html/div/div/table/tbody/tr/td = Application of membership expired or processed
docs/quick/api.html/div/div/table/tbody/tr/td = Invitation of membership expired or processed
docs/quick/api.html/div/div/table/tbody/tr/td = Times of user’s kicked-out exceeds limit, can no longer join group
docs/quick/api.html/div/div/table/tbody/tr/td = User is already a group member
docs/quick/api.html/div/div/table/tbody/tr/td = User is already blacklisted
docs/quick/api.html/div/div/table/tbody/tr/td = Group announcement does not exist
docs/quick/api.html/div/div/table/tbody/tr/td = Group announcement disabled by Admin
docs/quick/api.html/div/div/table/tbody/tr/td = Group shared file does not exist
docs/quick/api.html/div/div/table/tbody/tr/td = No permission to operate group shared file
docs/quick/api.html/div/div/table/tbody/tr/td = Group invitation QR Code is illegal
docs/quick/api.html/div/div/table/tbody/tr/td = Group invitation QR Code has expired
docs/quick/api.html/div/div/table/tbody/tr/td = Invalid MaxIM License
docs/quick/api.html/div/div/table/tbody/tr/td = Expired MaxIM License
docs/quick/api.html/div/div/table/tbody/tr/td = MaxIM License limit exceeded
docs/quick/api.html/div/div/table/tbody/tr/td = app_id does not exist
docs/quick/floo.html = title: "C++ SDK (floo) Quick Integration Guide"
docs/quick/floo.html/div/nav/ul/li/attr-href = #sdk-overall architecture
docs/quick/floo.html/div/nav/ul/li/a = SDK overall architecture
docs/quick/floo.html/div/nav/ul/li/attr-href = #sdk integration
docs/quick/floo.html/div/nav/ul/li/a = SDK integration
docs/quick/floo.html/div/nav/ul/li/ul/li/attr-href = #I. Initialize, import of related header file
docs/quick/floo.html/div/nav/ul/li/ul/li/a = I. Initialize, import of related header file
docs/quick/floo.html/div/nav/ul/li/ul/li/attr-href = #II. Register user
docs/quick/floo.html/div/nav/ul/li/ul/li/a = II. Register user
docs/quick/floo.html/div/nav/ul/li/ul/li/attr-href = #III. Login connected server
docs/quick/floo.html/div/nav/ul/li/ul/li/a = III. Login connected server
docs/quick/floo.html/div/nav/ul/li/ul/li/attr-href = #IV. Get session list
docs/quick/floo.html/div/nav/ul/li/ul/li/a = IV. Get session list
docs/quick/floo.html/div/nav/ul/li/ul/li/attr-href = #V. Disconnect
docs/quick/floo.html/div/nav/ul/li/ul/li/a = V. Disconnect
docs/quick/floo.html/div/nav/ul/li/attr-href = #User friend system
docs/quick/floo.html/div/nav/ul/li/a = User friend system
docs/quick/floo.html/div/nav/ul/li/ul/li/attr-href = #Build message body
docs/quick/floo.html/div/nav/ul/li/ul/li/a = Build message body
docs/quick/floo.html/div/div/attr-id = sdk-overall architecture
docs/quick/floo.html/div/div/p = SDK architecture description
docs/quick/floo.html/div/div/ul/li = BMXClient:SDK function aggregation class that contains all service classes and implements the network event listening interface.
docs/quick/floo.html/div/div/ul/li = BMXChatService: Message sending, message history retrieval, session list
docs/quick/floo.html/div/div/ul/li = BMXUserService: Register account, login, logout, my settings
docs/quick/floo.html/div/div/ul/li = BMXRosterService: Friend list, blacklist
docs/quick/floo.html/div/div/ul/li = BMXGroupService: Group management (create, dissolve, search, set, member management, invite, apply, accept, reject)
docs/quick/floo.html/div/div/ul/li = BMXChatServiceListener: Message delivery event, message sent result event listening
docs/quick/floo.html/div/div/ul/li = BMXGroupServiceListener: Group event listening
docs/quick/floo.html/div/div/ul/li = BMXUserServiceListener: User event listening
docs/quick/floo.html/div/div/ul/li = BMXRosterServiceListener: Friend event listening
docs/quick/floo.html/div/div/ul/li = BMXNetworkListener: Network event listening interface, implemented by BMXClient
docs/quick/floo.html/div/div/ul/li = BMXConversation: Session
docs/quick/floo.html/div/div/ul/li = BMXMessage: Message
docs/quick/floo.html/div/div/ul/li = BMXGroup: Group
docs/quick/floo.html/div/div/ul/li = BMXRosterItem Roster item (friend, stranger, blacklist, former friend)
docs/quick/floo.html/div/div/ul/li = BMXUserProfile: User information
docs/quick/floo.html/div/div/p = Relationship among main classes is as follows:
docs/quick/floo.html/div/div/attr-id = sdk integration
docs/quick/floo.html/div/div/ol/li = SDK document description
docs/quick/floo.html/div/div/ol/li = Add system library dependencies Before import SDK in your project, you need to add following system library references.
docs/quick/floo.html/div/div/ul/li = libz decompression library
docs/quick/floo.html/div/div/ul/li = libcrypto openssl encryption library
docs/quick/floo.html/div/div/ul/li = libsqlite3 sqlite3 local database
docs/quick/floo.html/div/div/ul/li = lcurl libcurl network library
docs/quick/floo.html/div/div/ul/li = lcurses ncurses library, which is required to run the embedded version of our demo
docs/quick/floo.html/div/div/attr-id = I. Initialize, import of related header file
docs/quick/floo.html/div/div/attr-id = II. Register user
docs/quick/floo.html/div/div/attr-id = III. Login connected server
docs/quick/floo.html/div/div/p = Pass the account password you obtained in the previous step into the -signInById method through the UserService class, a singleton of BMXClient, to establish a connection with the server.
docs/quick/floo.html/div/div/p = Two login modes provided: One for normal manual login, and the other for quick login
docs/quick/floo.html/div/div/pre/code = // Quick login needs no getting token
docs/quick/floo.html/div/div/attr-id = IV. Get session list
docs/quick/floo.html/div/div/p = Get a list of all sessions through the singleton of BMXClient, getAllConversations method of ChatService class. It returns an array list of BMXConversationPtr objects.
docs/quick/floo.html/div/div/p = If you need to get a list of offline sessions for multi-device synchronization, it’s required to configure the setLoadAllServerConversations property value to true at SDK initialization, and only get the local session list by default.
docs/quick/floo.html/div/div/attr-id = V. Disconnect
docs/quick/floo.html/div/div/p = When you disconnect from MaxIM server, it stops receiving later messages by default.
docs/quick/floo.html/div/div/p = Developers can choose to get friend list data from server or locally with the forceRefresh parameter. If it is set to NO, when the local data is empty, it will automatically get the data from server and return the result.
docs/quick/floo.html/div/div/ul/li = Text
docs/quick/floo.html/div/div/ul/li = Emoji
docs/quick/floo.html/div/div/ul/li = Voice clip
docs/quick/floo.html/div/div/ul/li = Geo-location
docs/quick/floo.html/div/div/ul/li = Custom message
docs/quick/floo.html/div/div/p = Single chat is the most basic chat interface, which provides a variety of input contents such as text, emoji, voice clip, image, etc., and solves the communication bottleneck of users in App. BMXConversationType of single chat is BMXConversationSingle, and toId is userId of single chat object.
docs/quick/floo.html/div/div/p = Group chat refers to the chat function of internal broadcast mode in the user set with roles and permissions. BMXConversationType of group is BMXConversationGroup, and toId is group Id.
docs/quick/floo.html/div/div/p = Developers can register to listener, then receive corresponding callback notifications after group created, thus do some UI processing.
docs/quick/floo.html/div/div/ul/li = Quit group
docs/quick/floo.html/div/div/pre/code = @param list Group id list, pass in an empty list function and fetch the returned group id list here.
docs/quick/floo.html/div/div/pre/code = @param forceRefresh True to force fetching from server, sdk will automatically fetch from server if local fetching failed.
docs/quick/floo.html/div/div/p = You can't chat until login successfully. When sending messages, single chat and group chat call the same unified interface, but the only difference is to set BMXConversationType.
docs/quick/floo.html/div/div/pre/code = * @param from Message sender Id
docs/quick/floo.html/div/div/pre/code = * @param to Message receiver Id
docs/quick/floo.html/div/div/pre/code = * @param type Message type
docs/quick/floo.html/div/div/pre/code = * @param conversationId Session id
docs/quick/floo.html/div/div/pre/code = * @param content Message content
docs/quick/floo.html/div/div/pre/code = * @param path Local path
docs/quick/floo.html/div/div/pre/code = * @param size Image size, width and height
docs/quick/floo.html/div/div/pre/code = * @param displayName Display name
docs/quick/floo.html/div/div/ul/li = Video-message
docs/quick/floo.html/div/div/p = After message body is built, call the sendMessage: method through the singleton of BMXClient, ChatService class, and pass in the built message body, so that the message can be sent. Message status changes are notified by a listener callback of the registered BMXChatServiceListener type.
docs/quick/floo.html/div/div/pre/code = client->getChatService().addChatListener(listener); //Add chat listener
docs/quick/floo.html/div/div/pre/code = client->getChatService().removeChatListener(listener);  //Remove chat listener
docs/quick/floo.html/div/div/ul/li = Message notification received
docs/quick/floo.html/div/div/ul/li = Status callback notificated after message sending
docs/quick/floo.html/div/div/ul/li = Status callback of attachment sending
docs/quick/floo.html/div/div/ul/li = Status changes of attachment donwloading
docs/quick/floo.html/div/div/p = Extension fields in BMXMessage entity provide extensible attributes (extension and config). Extension for development use, such as edit status. Config is an extension field for SDK's own use, such as the mention function and the push function.
docs/quick/floo.html/div/div/ul/li/p = Group @ function Support @ function in group to meet the needs of your @ specified user or @ every member. Developers can realize the @ function of group Owner by setting setConfig in BMXMessage, and push notifications will be sent on the mobile side after @ members operation. You can set the @ notification list by setting the setMentionList in the Config object. Set whether to @ all group members through setMentionAll.
docs/quick/floo.html/div/div/pre/code = // ExtensionJson can be used to extend the message being edited, (json format, which can extend a variety of user-defined functions)
docs/quick/floo.html/div/div/p = You can use setExtension function of BMXMessage to set information in json format, to indicate the client-side is typing.
docs/quick/floo.html/div/div/ul/li = Search for message
docs/quick/floo.html/div/div/p = Search for specified message by keyword
docs/quick/floo.html/div/div/pre/code = * @param keywords Keyword to search
docs/quick/floo.html/div/div/pre/code = * @param refTime Start time of message searching
docs/quick/floo.html/div/div/pre/code = * @param size Max. number of messages to search
docs/quick/floo.html/div/div/pre/code = * @param result List of searched result, initially pass in an empty list externally.
docs/quick/floo.html/div/div/pre/code = * @param Direction Message search direction, default（Direction::Up）to search from earlier messages
docs/quick/ios.html = title: "iOS SDK (floo-ios) Quick Integration Guide"
docs/quick/ios.html/div/nav/ul/li/attr-href = #Previous preparation
docs/quick/ios.html/div/nav/ul/li/a = Previous preparation
docs/quick/ios.html/div/nav/ul/li/ul/li/attr-href = #Mode I: Auto integration via cocoapods
docs/quick/ios.html/div/nav/ul/li/ul/li/a = Mode I: Auto integration/CocoaPods
docs/quick/ios.html/div/nav/ul/li/ul/li/attr-href = #Mode II: Manual integration
docs/quick/ios.html/div/nav/ul/li/ul/li/a = Mode II: Manual integration
docs/quick/ios.html/div/nav/ul/li/ul/li/attr-href = #I. Initialization
docs/quick/ios.html/div/nav/ul/li/ul/li/a = I. Initialization
docs/quick/ios.html/div/nav/ul/li/ul/li/attr-href = #IV. Session list function
docs/quick/ios.html/div/nav/ul/li/ul/li/a = IV. Session list function
docs/quick/ios.html/div/nav/ul/li/attr-href = #User friend
docs/quick/ios.html/div/nav/ul/li/a = User friend
docs/quick/ios.html/div/div/p = Maximtop IM SDK provides two ways to integrate our floo-ios, automatically through CocoaPods or manually add it to the project by downloading the floo-ios.framework model manually.
docs/quick/ios.html/div/div/attr-id = Mode I: Auto integration via cocoapods
docs/quick/ios.html/div/div/p = Hint: If cocoapods is not installed, please refer to
docs/quick/ios.html/div/div/p/a = CocoaPods installation
docs/quick/ios.html/div/div/ol/li/p = Add floo-ios to Prodfile:
docs/quick/ios.html/div/div/ol/li/p = Install with the following command
docs/quick/ios.html/div/div/ol/li/p = Hint: If you cannot install the latet version of SDK, run the following command to update your local CocoaPods repo list
docs/quick/ios.html/div/div/attr-id = Mode II: Manual integration
docs/quick/ios.html/div/div/ol/li/p/a = Download floo-ios.framework
docs/quick/ios.html/div/div/ol/li/p = , and then reference the file to your project.
docs/quick/ios.html/div/div/ol/li/p = Add system library dependencies
docs/quick/ios.html/div/div/ol/li/p = Before importing SDK to your project, please add the following system library references.
docs/quick/ios.html/div/div/ol/li/p = Note：
docs/quick/ios.html/div/div/ol/li/p = If libcrypto.a is already referenced within your project, no need to import it again to avoid introducing conflicts.
docs/quick/ios.html/div/div/ol/li/p = If libcrypto.a is not referenced in your project yet, please unzip the downloaded SDK package to import libcrypto.a into your project.
docs/quick/ios.html/div/div/ol/li/p = In Xcode project’s Build Settings - Other Linker Flags, add “-ObjC”.
docs/quick/ios.html/div/div/ol/li/p = Set App to support HTTPS
docs/quick/ios.html/div/div/ol/li/p = Make push certificate
docs/quick/ios.html/div/div/attr-id = I. Initialization
docs/quick/ios.html/div/div/p = Import the related header file in the class where you need to use MaxIM SDK functionality.
docs/quick/ios.html/div/div/p = You must call this method to initialize MaxIM SDK before you can use all of its features. You only need to initialize the SDK once in the whole life cycle of the App.
docs/quick/ios.html/div/div/pre/code = NSString* dataDir = [NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES).firstObject stringByAppendingPathComponent:@“ChatData”];
docs/quick/ios.html/div/div/pre/code = NSString* cacheDir = [NSSearchPathForDirectoriesInDomains(NSCachesDirectory, NSUserDomainMask, YES).firstObject stringByAppendingString:@“UserCache”];
docs/quick/ios.html/div/div/pre/code = // Initialization
docs/quick/ios.html/div/div/pre/code = BMXSDKConfig *config = [[BMXSDKConfig alloc] initConfigWithDataDir:dataDir cacheDir:cacheDir pushCertName:@“Your APNS Certification” userAgent:@“userAgent”];
docs/quick/ios.html/div/div/pre/code = config.appID = @“Your AppID”;
docs/quick/ios.html/div/div/p = Pass in signUpMobile:password:vertifyCode:userName: method through the singleton of BMXClient, UserService class, to register IM account.
docs/quick/ios.html/div/div/pre/code = NSLog(@"Registered");
docs/quick/ios.html/div/div/pre/code = NSLog(@"Failed errorCode = %ld ", error.errorCode);
docs/quick/ios.html/div/div/pre/code = NSLog(@"Login successful username = %lld , password = %@",userid, password);
docs/quick/ios.html/div/div/pre/code = NSLog(@"Failed errorCode = %lu ", error.errorCode);
docs/quick/ios.html/div/div/pre/code = NSLog(@"Registered username = %@ , password = %@", userid, password);
docs/quick/ios.html/div/div/attr-id = IV. Session list function
docs/quick/ios.html/div/div/p = Pass in getAllConversationsWithCompletion method through the singleton of BMXClient, ChatService class, to get a list of all sessions. Then return an array list of BMXConversation objects.
docs/quick/ios.html/div/div/p = If you need to get a list of offline sessions for multi-device synchronization, you need to configure the loadAllServerConversations property value to Yes at SDK initialization, and only get the local session list by default.
docs/quick/ios.html/div/div/p = devicetoken.When disconnected from MaxIM server, remote push is stopped by default and device devicetoken is automatically unbound.
docs/quick/ios.html/div/div/pre/code = NSLog(@"Quit successfully");
docs/quick/ios.html/div/div/ul/li/pre/code = MAXLog(@"Application successful");
docs/quick/ios.html/div/div/ul/li/pre/code = MAXLog(@"Application failed");
docs/quick/ios.html/div/div/ul/li/pre/code = MAXLog(@"Added successfully");
docs/quick/ios.html/div/div/ul/li/p = Developers can choose to get friend list data from server or locally via parameter forceRefresh.
docs/quick/ios.html/div/div/ul/li/p = If set to NO, when the local data is empty, it will automatically get the data from server and return the result.
docs/quick/ios.html/div/div/p = Group’s BMXConversationType is BMXConversationGroup，toId is group Id。
docs/quick/ios.html/div/div/pre/code = // Build information body of created group
docs/quick/ios.html/div/div/pre/code = option.message = message;  // Invitation information received by members when group created
docs/quick/ios.html/div/div/pre/code = option.members = ids;   // Member list added when group created
docs/quick/ios.html/div/div/ul/li/pre/code = @param message Application information
docs/quick/ios.html/div/div/ul/li/pre/code = @param forceRefresh Pull from server if forceRefresh is set
docs/quick/ios.html/div/div/p = Remote push of messages:
docs/quick/ios.html/div/div/p = Pass deviceToken to MaxIM interface as follows:
docs/quick/ios.html/div/div/pre/code = NSLog(@"Binding succeeded");
docs/quick/ios.html/div/div/pre/code = @param content Content
docs/quick/ios.html/div/div/pre/code = @param fromId Send id
docs/quick/ios.html/div/div/pre/code = @param toId Receive id
docs/quick/ios.html/div/div/pre/code = @param mtype Message id
docs/quick/ios.html/div/div/pre/code = @param conversationId Session id
docs/quick/ios.html/div/div/pre/code = Create image-message object
docs/quick/ios.html/div/div/pre/code = @param aData Binary data
docs/quick/ios.html/div/div/pre/code = @param aThumbnailData Thumbnail
docs/quick/ios.html/div/div/pre/code = @param imageSize Image size
docs/quick/ios.html/div/div/pre/code = @param conversationId Session IDID
docs/quick/ios.html/div/div/p = After message body is built, call the -sendMessage: method through the singleton of BMXClient, ChatService class, and pass in the built message body to send the message
docs/quick/ios.html/div/div/ul/li/pre/code = MAXLog(@"Send message%@", error);
docs/quick/ios.html/div/div/ul/li/pre/code = Simple forwarding message, users should create forwarding message first through BMXMessagseObject, initWithForwardMessage
docs/quick/ios.html/div/div/ul/li/pre/code = * Download attachment, and download status changes and progress are notified through listener
docs/quick/ios.html/div/div/pre/code = * Add chat listener
docs/quick/ios.html/div/div/pre/code = * Remove chat listener
docs/quick/ios.html/div/div/ul/li/pre/code = * Message received
docs/quick/ios.html/div/div/ul/li/pre/code = // Text-message received, wait for processing by UI
docs/quick/ios.html/div/div/ul/li/pre/code = // Image-message received
docs/quick/ios.html/div/div/ul/li/pre/code = // Voice-message received
docs/quick/ios.html/div/div/ul/li/pre/code = // Location-message received
docs/quick/ios.html/div/div/ul/li/pre/code = // File-message received
docs/quick/ios.html/div/div/ul/li/pre/code = // Message status changed
docs/quick/ios.html/div/div/ul/li/pre/code = // percent of uploading progress
docs/quick/ios.html/div/div/ul/li/p = Message reminder settings You can set message push reminder as follows via the singleton of BMXClient, UserService class.
docs/quick/ios.html/div/div/ul/li/pre/code = * Attachment download status changed
docs/quick/ios.html/div/div/ul/li/p = Support @ function in group to meet the needs of your @ specified user or @ every member. Developers can realize the @ function of group Owner by setting setConfig in BMXMessageObject, and push notifications will be sent to all @ members.
docs/quick/ios.html/div/div/ul/li/p = Message read receipt
docs/quick/ios.html/div/div/ul/li/pre/code = //Whether all messages read
docs/quick/ios.html/div/div/ul/li/pre/code = //Whether to send a read receipt after message delivered
docs/quick/ios.html/div/div/ul/li/pre/code = //Whether to send a delivery receipt after message received
docs/quick/ios.html/div/div/ul/li/p = Multi-terminal read message count synchronization
docs/quick/ios.html/div/div/ul/li/p = BMXConversation entity provides unread message count and total number of messages in session /\*\* Unread message count \*/
docs/quick/ios.html/div/div/ul/li/pre/code = @param keywords Keyword
docs/quick/ios.html/div/div/ul/li/pre/code = @param refTime Time
docs/quick/ios.html/div/div/ul/li/pre/code = @param size Page
docs/quick/ios.html/div/div/ul/li/pre/code = @param directionType Message order
docs/quick/ios.html/div/div/ul/li/pre/code = @param aCompletionBlock Search result
docs/quick/ios.html/div/div/ul/li/pre/code = [[[BMXClient sharedClient] chatService] searchMessages:@"Haha" refTime:0 size:100 directionType:BMXMessageDirectionUp completion:^(NSArray *array, BMXError *error) {
docs/quick/push.html = title: "Push SDK Quick Integration Guide"
docs/quick/push.html/div/nav/ul/li/attr-href = #Import sdk into android-studio
docs/quick/push.html/div/nav/ul/li/a = Import SDK into Android Studio
docs/quick/push.html/div/nav/ul/li/ul/li/attr-href = #Advanced invokation form
docs/quick/push.html/div/nav/ul/li/ul/li/a = Advanced invokation form
docs/quick/push.html/div/nav/ul/li/ul/li/attr-href = #Enable push
docs/quick/push.html/div/nav/ul/li/ul/li/a = Enable push
docs/quick/push.html/div/nav/ul/li/ul/li/attr-href = #Stop push
docs/quick/push.html/div/nav/ul/li/ul/li/a = Stop push
docs/quick/push.html/div/nav/ul/li/ul/li/attr-href = #Evoke push
docs/quick/push.html/div/nav/ul/li/ul/li/a = Evoke push
docs/quick/push.html/div/nav/ul/li/ul/li/attr-href = #Get push status
docs/quick/push.html/div/nav/ul/li/ul/li/a = Get push status
docs/quick/push.html/div/nav/ul/li/ul/li/attr-href = #Unbind alias
docs/quick/push.html/div/nav/ul/li/ul/li/a = Unbind alias
docs/quick/push.html/div/nav/ul/li/ul/li/attr-href = #Get token
docs/quick/push.html/div/nav/ul/li/ul/li/a = Get token
docs/quick/push.html/div/nav/ul/li/ul/li/attr-href = #Get cert
docs/quick/push.html/div/nav/ul/li/ul/li/a = Get cert
docs/quick/push.html/div/nav/ul/li/ul/li/attr-href = #Bind vendor token
docs/quick/push.html/div/nav/ul/li/ul/li/a = Bind vendor token
docs/quick/push.html/div/nav/ul/li/ul/li/attr-href = #Get information of the user who pushed
docs/quick/push.html/div/nav/ul/li/ul/li/a = Get information of the user who pushed
docs/quick/push.html/div/nav/ul/li/attr-href = #Advanced interface
docs/quick/push.html/div/nav/ul/li/a = Advanced interface
docs/quick/push.html/div/nav/ul/li/ul/li/attr-href = #Set push tag
docs/quick/push.html/div/nav/ul/li/ul/li/a = Set push tag
docs/quick/push.html/div/nav/ul/li/ul/li/attr-href = #Get push tag list
docs/quick/push.html/div/nav/ul/li/ul/li/a = Get push tag list
docs/quick/push.html/div/nav/ul/li/ul/li/attr-href = #Delete push tag
docs/quick/push.html/div/nav/ul/li/ul/li/a = Delete push tag
docs/quick/push.html/div/nav/ul/li/ul/li/attr-href = #Clear all tags
docs/quick/push.html/div/nav/ul/li/ul/li/a = Clear all tags
docs/quick/push.html/div/nav/ul/li/ul/li/attr-href = #Set push switch
docs/quick/push.html/div/nav/ul/li/ul/li/a = Set push switch
docs/quick/push.html/div/nav/ul/li/ul/li/attr-href = # Set push time
docs/quick/push.html/div/nav/ul/li/ul/li/a = Set push time
docs/quick/push.html/div/nav/ul/li/ul/li/attr-href = #Set silent-push time
docs/quick/push.html/div/nav/ul/li/ul/li/a = Set silent-push time
docs/quick/push.html/div/nav/ul/li/ul/li/attr-href = #Send push message
docs/quick/push.html/div/nav/ul/li/ul/li/a = Send push message
docs/quick/push.html/div/nav/ul/li/ul/li/attr-href = #Get message list to push
docs/quick/push.html/div/nav/ul/li/ul/li/a = Get message list to push
docs/quick/push.html/div/nav/ul/li/attr-href = #Set listener
docs/quick/push.html/div/nav/ul/li/a = Set listener
docs/quick/push.html/div/nav/ul/li/attr-href = #Vendor push integration
docs/quick/push.html/div/nav/ul/li/a = Vender push integration
docs/quick/push.html/div/nav/ul/li/ul/li/attr-href = #Huawei
docs/quick/push.html/div/nav/ul/li/ul/li/a = Huawei
docs/quick/push.html/div/nav/ul/li/ul/li/attr-href = #Xiaomi
docs/quick/push.html/div/nav/ul/li/ul/li/a = Xiaomi
docs/quick/push.html/div/nav/ul/li/ul/li/attr-href = #Meizu
docs/quick/push.html/div/nav/ul/li/ul/li/a = Meizu
docs/quick/push.html/div/nav/ul/li/ul/li/attr-href = #Google push fcm
docs/quick/push.html/div/nav/ul/li/ul/li/a = Google push（FCM）
docs/quick/push.html/div/div/attr-id = Push-sdk-integration description
docs/quick/push.html/div/div/h2 = Push SDK integration description
docs/quick/push.html/div/div/p = Maximtop Push is developed based on Maximtop IM technology, which can have both push and IM services with only one integration, improving R&D efficiency and greatly reducing IT expenditure of enterprises.
docs/quick/push.html/div/div/p = Since the channels of major vendors are supported by default, in order to further reduce the difficulty of integration, certificate settings and updating mechanism are also built into the implementation of Maximtop Push. Simply put, after Maximtop Push integrated, developer only needs to set the certificates pushed by each vendor on the console, and the front end will package the vendor push SDKs, which can automatically complete the adaptation of the system vendor. It is no longer necessary to adjust the application and settings of various push tokens.
docs/quick/push.html/div/div/p = Note: Unlike other push vendors, Maximtop Push SDK focuses on the construction and serving of push channels, and does not collect terminal information. If you have similar advertising business, you need to integrate the advertising SDK separately, or set business data tags through the interface before you can use it.
docs/quick/push.html/div/div/p = As mentioned earlier, since Maximtop Push SDK and IM SDK are the same SDK, the push function only adds a push interface to the original IM SDK. Therefore, the integration method is the same as that of IM SDK, and the quick integration document can also be found in
docs/quick/push.html/div/div/p/a = Maximtop IM for Android Quick Integration
docs/quick/push.html/div/div/p/a = Maximtop IM for iOS Quick Integration
docs/quick/push.html/div/div/p = Push function mainly involves the following three classes:
docs/quick/push.html/div/div/p = Where BMXPushService and BMXPushManager are both push setting classes, the former is a synchronous calling class, and the latter is an asynchronous calling class. You can choose one according to needs when implementing.
docs/quick/push.html/div/div/p = Other functional classes are:
docs/quick/push.html/div/div/ul/li = BMXCallBack : Untyped interface callback
docs/quick/push.html/div/div/ul/li/t = : Generic type with data callback
docs/quick/push.html/div/div/ul/li = BMXPushServiceListener : Push event listening
docs/quick/push.html/div/div/ul/li = BMXMessage : Push message
docs/quick/push.html/div/div/ul/li = BMXUserProfile : Push user message
docs/quick/push.html/div/div/p = Android SDK is used as an example for push API below.
docs/quick/push.html/div/div/attr-id = Import sdk into android-studio
docs/quick/push.html/div/div/ul/li/a = Download aar file
docs/quick/push.html/div/div/ul/li = to /lib in project
docs/quick/push.html/div/div/ul/li = Add implementation(name:'floo-android\_3.1.3.aar',ext:'aar') to the dependencies block in build.gradle file
docs/quick/push.html/div/div/ul/li = Import so library file into app entry class:
docs/quick/push.html/div/div/ul/li = Initialize BMXClient
docs/quick/push.html/div/div/pre/code = String pushId = getPushId();//Set the ID corresponding to push platform
docs/quick/push.html/div/div/pre/code = //Set push appId
docs/quick/push.html/div/div/pre/code = //Set push secret
docs/quick/push.html/div/div/pre/code = //Set the unique id of device
docs/quick/push.html/div/div/pre/code = //Set production environment
docs/quick/push.html/div/div/pre/code = //Set pushProviderType based-on device model
docs/quick/push.html/div/div/pre/code = //Get BMXClient instance
docs/quick/push.html/div/div/pre/code = //Get type based-on device model
docs/quick/push.html/div/div/ul/li = BMXPushManager: Get the manager object to push via bmxClient.getPushManager().
docs/quick/push.html/div/div/p = Parameter description: alias (push alias), bmxToken(push token) callBack
docs/quick/push.html/div/div/pre/code = SDK will automatically generate an alias if not passed in
docs/quick/push.html/div/div/pre/code = SDK will automatically generate a token and callback via BMXPushServiceListener if not passed in
docs/quick/push.html/div/div/pre/code = Synchronous call
docs/quick/push.html/div/div/pre/code = Calling description: Success is judged by returned value of BMXErrorCode.
docs/quick/push.html/div/div/pre/code = bmxClient.getPushService().start();//No parameter passed in
docs/quick/push.html/div/div/pre/code = bmxClient.getPushService().start("zhangsan");//Pass in alias
docs/quick/push.html/div/div/pre/code = bmxClient.getPushService().start("zhangsan", token);//Pass in alias  token
docs/quick/push.html/div/div/pre/code = Asynchronous calling
docs/quick/push.html/div/div/pre/code = Calling description: Get the manager object via bmxClient.getPushManager(), success is judged by returned BMXErrorCode in BMXCallBack callback.
docs/quick/push.html/div/div/pre/code = //No parameter passed in
docs/quick/push.html/div/div/pre/code = //Pass in alias
docs/quick/push.html/div/div/pre/code = //Pass in alias token
docs/quick/push.html/div/div/p = Parameter description: callBack
docs/quick/push.html/div/div/pre/code = Synchronous call
docs/quick/push.html/div/div/pre/code = Asynchronous call
docs/quick/push.html/div/div/pre/code = Calling description: Get the manager object via bmxClient.getPushManager(), success is judged by returned BMXErrorCode in BMXCallBack callback.
docs/quick/push.html/div/div/p = Returned value description: public static enum PushSdkState { Starting(1), Started, Stoped, Offline; }
docs/quick/push.html/div/div/pre/code = Synchronous call:
docs/quick/push.html/div/div/pre/code = Asynchronous call:
docs/quick/push.html/div/div/p = Parameter description: alias (push alias)
docs/quick/push.html/div/div/pre/code = Value is only available after start called successfully
docs/quick/push.html/div/div/pre/code = Value is only available after start called successfully, meanwhile it needs to register the certificate with the corresponding vendor and set the correct provideType
docs/quick/push.html/div/div/pre/code = Currently support Huawei, Xiaomi, Meizu, oppo, and vivo
docs/quick/push.html/div/div/p = Parameter description: token (the token returned by register vendor push)
docs/quick/push.html/div/div/p = Parameter description: forceRefresh (whether to pull from server)
docs/quick/push.html/div/div/pre/code = Calling description: Passing in the BMXPushUserProfile object reference, and push user information can be obtained after successfully called.
docs/quick/push.html/div/div/pre/code = Calling description: Get the manager object via bmxClient.getPushManager(), and get push user information in BMXDataCallBack<BMXPushUserProfile> callback.
docs/quick/push.html/div/div/pre/code = //Return BMXPushUserProfile instance
docs/quick/push.html/div/div/attr-id = Set push tag
docs/quick/push.html/div/div/p = Parameter description: tags (tag list) operationId (the unique id generated manually in this operation)
docs/quick/push.html/div/div/pre/code = tags.add("tag content");
docs/quick/push.html/div/div/attr-id = Get push tag list
docs/quick/push.html/div/div/p = Parameter description: operationId (the unique id generated manually in this operation)
docs/quick/push.html/div/div/p = Calling description: Passing in the TagList object reference, and tag list information can be obtained after successfully called.
docs/quick/push.html/div/div/pre/code = Calling description: Get the manager object via bmxClient.getPushManager(), success is judged by returned BMXErrorCode in BMXCallBack callback.
docs/quick/push.html/div/div/attr-id = Delete push tag
docs/quick/push.html/div/div/attr-id = Clear all tag
docs/quick/push.html/div/div/p = Parameter description: enable (boolean push switch)
docs/quick/push.html/div/div/p = Parameter description: startHour (start time of push) endHour (end time of push) in 24-hour Set the daily push time range
docs/quick/push.html/div/div/p = Parameter description: startHour (start time of push) endHour (end time of push) in 24-hour Set the daily non-push time range
docs/quick/push.html/div/div/p = Parameter description: content(push content)
docs/quick/push.html/div/div/p = Parameter description: refMsgId(starting message id, passed 0 first) size(number of fetched messagers)
docs/quick/push.html/div/div/pre/code = Calling description: Passing in the BMXMessageList object reference, the push information list can be obtained after successfully called.
docs/quick/push.html/div/div/ul/li = Register push callback
docs/quick/push.html/div/div/ul/li = Remove push callback
docs/quick/push.html/div/div/ul/li = Callback example
docs/quick/push.html/div/div/pre/code = //Turn on push to return token
docs/quick/push.html/div/div/pre/code = //Return vendor-registered certificate You can register vendor’s push channel after obtaining the certificate
docs/quick/push.html/div/div/p = Platform integration only needs to put the integration SDK into your application according to the platform push document, and the corresponding configuration can be set based-on the specified platform requirements (except Huawei).
docs/quick/push.html/div/div/p = Need to be set according to Huawei push platform
docs/quick/push.html/div/div/p/a = Huawei push
docs/quick/push.html/div/div/ol/li = Project-level build.gradle filed added
docs/quick/push.html/div/div/ol/li = App-level build.gradle
docs/quick/push.html/div/div/ol/li = Finally, download agconnect-services.json from push platform to your app directory.
docs/quick/push.html/div/div/p = Integrate according to Xiaomi push platform
docs/quick/push.html/div/div/p/a = Xiaomi push
docs/quick/push.html/div/div/p = Integrate according to Oppo push platform
docs/quick/push.html/div/div/p/a = oppo push
docs/quick/push.html/div/div/p = Integrate according to Meizu push platform
docs/quick/push.html/div/div/p/a = Meizu push
docs/quick/push.html/div/div/attr-id = Google push fcm
docs/quick/push.html/div/div/p = Google Push Guide
docs/quick/web.html = title: "Web SDK (floo-web) Quick Integration Guide"
docs/quick/web.html/div/nav/ul/li/attr-href = #Selection guide
docs/quick/web.html/div/nav/ul/li/a = Selection guide
docs/quick/web.html/div/nav/ul/li/ul/li/attr-href = #Delete friend
docs/quick/web.html/div/nav/ul/li/ul/li/attr-href = #Agree to add friend
docs/quick/web.html/div/nav/ul/li/ul/li/attr-href = #Reject to add friend
docs/quick/web.html/div/nav/ul/li/ul/li/ul/li/attr-href = #Send
docs/quick/web.html/div/nav/ul/li/ul/li/ul/li/attr-href = #Forward
docs/quick/web.html/div/nav/ul/li/ul/li/ul/li/attr-href = #Revoke
docs/quick/web.html/div/nav/ul/li/ul/li/attr-href = #Message notification received
docs/quick/web.html/div/nav/ul/li/ul/li/attr-href = #Status callback notification after message sent
docs/quick/web.html/div/nav/ul/li/ul/li/attr-href = #Group function
docs/quick/web.html/div/nav/ul/li/ul/li/attr-href = #Typing message
docs/quick/web.html/div/nav/ul/li/ul/li/attr-href = #Message search
docs/quick/web.html/div/div/p = Maximtop front end provides 3 versions of Web SDK, please choose on needs:
docs/quick/web.html/div/div/ol/li/a = Web version
docs/quick/web.html/div/div/ol/li = , which is mainly used by PC desktop browsers and suitable for various traditional front-end applications;
docs/quick/web.html/div/div/ol/li/a = Uni-app version
docs/quick/web.html/div/div/ol/li = , developed based-on DCloud.io uni-app framework, for H5 and various Applets (WeChat/Alypay/Baidu/Toutiao/QQ/DingTalk/Taobao), and also suitable for iOS, Android, QuickApp and other platforms;
docs/quick/web.html/div/div/ol/li/a = WeChat Applet version
docs/quick/web.html/div/div/ol/li = , a native version for WeChat Applet standard, with the same features as the uni-app version;
docs/quick/web.html/div/div/p = The following documenting takes the Web version as an example, and all versions are basically the same. Our DemoApp source code has been opened already, so it is recommended to check for development.
docs/quick/web.html/div/div/ol/li = Login our official website console, get your appid and replace the following YOU\_APP\_IDs with it.
docs/quick/web.html/div/div/ol/li = Download SDK
docs/quick/web.html/div/div/p = Set AppID first
docs/quick/web.html/div/div/p = Then create an im object for global invocation.
docs/quick/web.html/div/div/p = Two modes are currently supported:
docs/quick/web.html/div/div/ol/li = Script: You can import it directly and use window.flooIM()
docs/quick/web.html/div/div/p = This approach mainly supports script tag references in browsers, but there are initialization concurrency issues, so try-catch-retry is used, see
docs/quick/web.html/div/div/p/a = maxim-web source
docs/quick/web.html/div/div/ol/li = module mode，import flooim first，then use flooim()
docs/quick/web.html/div/div/p = Register user via the asyncRegister of IM’s userManager
docs/quick/web.html/div/div/p = If the SDK sets autoLogin to true, you will not need to login if you open or refresh the page again after the first login. For the first login, call im.login
docs/quick/web.html/div/div/p = You can listen for login information or progress:
docs/quick/web.html/div/div/p = Direcly call userManage’s getConversationList, returning lists of names, ids, types, and unreads
docs/quick/web.html/div/div/p = im login information is stored in localstorage, you can delete it and refresh to implement by yourself
docs/quick/web.html/div/div/p = How to call im.rosterManage’s asyncApply method:
docs/quick/web.html/div/div/pre/code = console.log("Request sent successfully!");
docs/quick/web.html/div/div/p = Call rosterManage’s asyncDeleteRoster method to delete friend
docs/quick/web.html/div/div/pre/code = Friend deleted
docs/quick/web.html/div/div/p = Call rosterManage’s asyncAccept method to approve friend request
docs/quick/web.html/div/div/pre/code = console.log("Friend request has been approved");
docs/quick/web.html/div/div/p = Call rosterManage’s asyncDecline method to reject friend request
docs/quick/web.html/div/div/pre/code = console.log("Friend request has been rejected");
docs/quick/web.html/div/div/p = Call rosterManage’s getAllRosterDetail method to get friend list
docs/quick/web.html/div/div/p = Listen onRosterListUpdate to instantly view changes to user list
docs/quick/web.html/div/div/p = Single chat is the most basic chat interface, which provides a variety of input contents, ex. text, emoji, image and so on.
docs/quick/web.html/div/div/p = Group chat, where many members participate together.
docs/quick/web.html/div/div/p = Call groupManage’s asyncCreate method to create a group
docs/quick/web.html/div/div/pre/code = type, // Yes/No pulbic， 0， 1
docs/quick/web.html/div/div/pre/code = console.log("Group created");
docs/quick/web.html/div/div/p = Call groupManage’s asyncApply method to apply to join a group
docs/quick/web.html/div/div/p = Call groupManage’s asyncLeave method to quit a group
docs/quick/web.html/div/div/pre/code = console.log("Quitted group");
docs/quick/web.html/div/div/p = Call groupManage’s asyncDestroy method to dissolve a group
docs/quick/web.html/div/div/pre/code = console.log("Group dissolved");
docs/quick/web.html/div/div/p = Call groupManage’s getGroupMembers method to get a list of all members
docs/quick/web.html/div/div/ol/li = Get group list  Call groupManage’s asyncGetJoinedGroups method to get groups that all users joined
docs/quick/web.html/div/div/ol/li = Get group information  Call groupManage’s asyncGetGroupInfo method to get group details
docs/quick/web.html/div/div/p = You can't chat until login successfully. When sending messages, single chat and group chat are divided seperately. For easier operation, it only supports sending text, images and files at present.
docs/quick/web.html/div/div/pre/code = uid,  // User id, only used for single chat
docs/quick/web.html/div/div/pre/code = gid,  // id, only used for group chat
docs/quick/web.html/div/div/pre/code = content, // Message text
docs/quick/web.html/div/div/pre/code = priority， // Set the dissemination priority of messages in the range of 0-10. The message level sent by ordinary member in chatroom defaults to 5, which can be discarded, while Admin defaults to 0 and messages will not be discarded. Other values can be set according to the business.
docs/quick/web.html/div/div/pre/code = git, // uid, gid User or A group in which sent to, respectively
docs/quick/web.html/div/div/pre/code = priority, //Set priority of message dissemination
docs/quick/web.html/div/div/pre/code = mid, // Message id
docs/quick/web.html/div/div/pre/code = gid, // uid or gid
docs/quick/web.html/div/div/pre/code = im.on({  // Status changed
docs/quick/web.html/div/div/pre/code = im.on({ //Message revoked
docs/quick/web.html/div/div/pre/code = im.on({ //Message deleted
docs/quick/web.html/div/div/pre/code = im.on({ //Message unread set
docs/quick/web.html/div/div/attr-id = Group functions
docs/quick/web.html/div/div/pre/code = txt, // Text-message
docs/quick/web.html/div/div/pre/code = mentionAll, // Whether to @every member
docs/quick/web.html/div/div/pre/code = mentionedMessage, // mention content
docs/quick/web.html/div/div/pre/code = pushMessage, // push
docs/quick/web.html/div/div/pre/code = senderNickname // sender nickname
docs/web/index.html/html/body/div/div/div/a = Homepage
docs/web/index.html/html/body/div/div/p = Maximtop IM SDK：floo-web API introduction
docs/web/index.html/html/body/div/div/p = Download the corresponding SDK file, address of desktop Web version is :
docs/web/index.html/html/body/div/div/p = , and refer to it in code.
docs/web/index.html/html/body/div/div/p = base
docs/web/index.html/html/body/div/div/pre = mobile:String, #or name
docs/web/index.html/html/body/div/div/p = Listen
docs/web/index.html/html/body/div/div/p = See the Event Notification section of this document for event list
docs/web/index.html/html/body/div/div/p = Unlisten
docs/web/index.html/html/body/div/div/p = QR code login
docs/web/index.html/html/body/div/div/p = token login
docs/web/index.html/html/body/div/div/p = Get friend id list
docs/web/index.html/html/body/div/div/p = Get friend information
docs/web/index.html/html/body/div/div/p = User registeration
docs/web/index.html/html/body/div/div/p = Get user details by id list
docs/web/index.html/html/body/div/div/p = Get chat message by id
docs/web/index.html/html/body/div/div/p = Read message
docs/web/index.html/html/body/div/div/p = Get all cached new users
docs/web/index.html/html/body/div/div/p = Revoke a message, only valid for last 5 minutes
docs/web/index.html/html/body/div/div/p = Delete message
docs/web/index.html/html/body/div/div/p = Get number of user’s unreads
docs/web/index.html/html/body/div/div/p = Set message to unread
docs/web/index.html/html/body/div/div/p = Get friend request list
docs/web/index.html/html/body/div/div/p = Remove blacklist
docs/web/index.html/html/body/div/div/p = Request to add friend
docs/web/index.html/html/body/div/div/p = Approve add-friend request
docs/web/index.html/html/body/div/div/p = Search for user by name
docs/web/index.html/html/body/div/div/p = Search for user by ID
docs/web/index.html/html/body/div/div/p = Get the group to join
docs/web/index.html/html/body/div/div/p = Open group
docs/web/index.html/html/body/div/div/pre = // This approach prepares some of necessary information for group chat interface.
docs/web/index.html/html/body/div/div/p = Get all cached group details
docs/web/index.html/html/body/div/div/p = Get group members (asynchronous)
docs/web/index.html/html/body/div/div/p = Get group members (synchronous)
docs/web/index.html/html/body/div/div/p = Get group details by id
docs/web/index.html/html/body/div/div/p = Get group information
docs/web/index.html/html/body/div/div/p = Set group message to read
docs/web/index.html/html/body/div/div/p = Revoke message
docs/web/index.html/html/body/div/div/p = Get number of unread group messages
docs/web/index.html/html/body/div/div/p = Add group Admin
docs/web/index.html/html/body/div/div/p = Remove group Admin
docs/web/index.html/html/body/div/div/p = Get group announcement details
docs/web/index.html/html/body/div/div/p = Add group announcement
docs/web/index.html/html/body/div/div/p = Group announcement list
docs/web/index.html/html/body/div/div/pre = alert("You have dissolved this group.");
docs/web/index.html/html/body/div/div/p = Get group details
docs/web/index.html/html/body/div/div/pre = alert("Avatar updated");
docs/web/index.html/html/body/div/div/p = Get group member
docs/web/index.html/html/body/div/div/p = Set do-not-disturb conditions for group message
docs/web/index.html/html/body/div/div/p = Get group blacklist
docs/web/index.html/html/body/div/div/p = Ban group member
docs/web/index.html/html/body/div/div/p = Unban group member
docs/web/index.html/html/body/div/div/p = Set whether group members can invite new member
docs/web/index.html/html/body/div/div/p = Set whether group members can modify group information
docs/web/index.html/html/body/div/div/p = Set whether to enable read mode in group
docs/web/index.html/html/body/div/div/p = Set whether group history is visible
docs/web/index.html/html/body/div/div/p = Set whether need to apply for group joining
docs/web/index.html/html/body/div/div/p = Change group Owner
docs/web/index.html/html/body/div/div/p = Apply to join group
docs/web/index.html/html/body/div/div/p = Accept/reject group membership application
docs/web/index.html/html/body/div/div/p = Add member to blacklist
docs/web/index.html/html/body/div/div/p = Remove member from blacklist
docs/web/index.html/html/body/div/div/p = Kick out group member
docs/web/index.html/html/body/div/div/p = Invite member to group
docs/web/index.html/html/body/div/div/p = Accept/reject group invitation
docs/web/index.html/html/body/div/div/p = Modify group profile
docs/web/index.html/html/body/div/div/p = Get group file
docs/web/index.html/html/body/div/div/p = Send message to friend
docs/web/index.html/html/body/div/div/p = Send group message
docs/web/index.html/html/body/div/div/p = Group-sent @message
docs/web/index.html/html/body/div/div/p = Send type status
docs/web/index.html/html/body/div/div/pre = gid, //either-or
docs/web/index.html/html/body/div/div/p = Request history
docs/web/index.html/html/body/div/div/pre = // mid：message ID, from which message to fetch history, 0 for the latest message. amount：max. number of messages to fetch.
docs/web/index.html/html/body/div/div/p = Get all unread messages
docs/web/index.html/html/body/div/div/p = Get upload url of group file
docs/web/index.html/html/body/div/div/p = Get upload address of chat file
docs/web/index.html/html/body/div/div/p = Upload file
docs/web/index.html/html/body/div/div/p = Assemble image path
docs/web/index.html/html/body/div/div/p = Get token of logged-in user
docs/web/index.html/html/body/div/div/p = Get uid of logged-in user
docs/web/index.html/html/body/div/div/p = Get appid
docs/web/index.html/html/body/div/div/p = Get recent reply list
docs/web/index.html/html/body/div/div/p = Send verification code
docs/web/index.html/html/body/div/div/p = Send verification code (in image)
docs/web/index.html/html/body/div/div/p = Check whether username is available
docs/web/index.html/html/body/div/div/p = Bind mobile number – bind with signature
docs/web/index.html/html/body/div/div/p = Login with mobile number and verification vode
docs/web/index.html/html/body/div/div/p = Update mobile number
docs/web/index.html/html/body/div/div/p = Update avatar
docs/web/index.html/html/body/div/div/p = Update nickname
docs/web/index.html/html/body/div/div/p = Get user profile
docs/web/index.html/html/body/div/div/p = Update user profile
docs/web/index.html/html/body/div/div/p = Get user settings
docs/web/index.html/html/body/div/div/p = Event notification
docs/web/index.html/html/body/div/div/p = Floo notification
docs/web/index.html/html/body/div/div/pre = Event name：flooNotice
docs/web/index.html/html/body/div/div/pre = Event content：({category, desc})
docs/web/index.html/html/body/div/div/pre = {category: 'loginMessage',desc: 'socket connecting...'} // Start connecting
docs/web/index.html/html/body/div/div/pre = {category: 'loginMessage',desc: 'socket connect success...'} // Connected
docs/web/index.html/html/body/div/div/pre = {category: 'loginMessage',desc: 'logining socket service...'} // Start logging in
docs/web/index.html/html/body/div/div/pre = {category: 'loginMessage',desc: 'login socket failure ......'} // Login failed
docs/web/index.html/html/body/div/div/pre = {category: 'loginMessage',desc: 'login socket success.....'} // Login succeeded
docs/web/index.html/html/body/div/div/pre = {category: 'loginMessage', desc: 'getting token...' } //Get token
docs/web/index.html/html/body/div/div/pre = {category: 'loginMessage',desc: 'token sucecc, getting roster lists..'} // Getting token succeeded, start to fetch friend list
docs/web/index.html/html/body/div/div/pre = {category: 'loginMessage',desc: 'get roster list failure:' + ex.message} // Friend list fetching failed
docs/web/index.html/html/body/div/div/pre = {category: 'action', desc: 'relogin' } // Need to automatically login
docs/web/index.html/html/body/div/div/pre = {category: 'action', desc: 'relogin_manually' }  // Need to manually login
docs/web/index.html/html/body/div/div/pre = {category: 'conversation_deleted',desc: { id, source:'user_operation' }} // Session deleted. ID：session ID， source: source
docs/web/index.html/html/body/div/div/pre = {category: 'userNotice', desc:'PASSWORD_CHANGED'} // User password changed
docs/web/index.html/html/body/div/div/pre = {category: 'userNotice', desc:'FROZEN'} // User account frozen
docs/web/index.html/html/body/div/div/pre = {category: 'userNotice', desc:'REMOVED'} // User removed
docs/web/index.html/html/body/div/div/pre = {category: 'userNotice', desc:'KICK_BY_SAME_DEVICE'} // Current device is kicked off the line by the same device
docs/web/index.html/html/body/div/div/pre = {category: 'userNotice', desc:'KICKED_BY_OTHER_DEVICE'} // Current device is kicked off the line by other device
docs/web/index.html/html/body/div/div/pre = {category: 'userNotice', desc:'INFO_UPDATED'} // User information changed：profile or setting
docs/web/index.html/html/body/div/div/pre = {category: 'userNotice', desc:'DEVICE_LOGIN'} // User’s other device logged-in
docs/web/index.html/html/body/div/div/pre = {category: 'userNotice', desc:'DEVICE_LOGOUT'} // User’s other device logged-out
docs/web/index.html/html/body/div/div/pre = {category: 'userNotice', desc:'DEVICE_ADDED'} // New device notified
docs/web/index.html/html/body/div/div/pre = {category: 'userNotice', desc:'DEVICE_REMOVED'} // Device removal notified
docs/web/index.html/html/body/div/div/pre = {category: 'userNotice', desc:'CLUSTER_CHANGED'} // User’s group changed, please re-login
docs/web/index.html/html/body/div/div/p = 2. Floo error
docs/web/index.html/html/body/div/div/pre = Event name：flooError
docs/web/index.html/html/body/div/div/pre = {category: 'USER_BANNED', desc:'User is banned'}
docs/web/index.html/html/body/div/div/pre = {category: 'USER_FROZEN', desc:'User is frozen, please contact App Admin.'}
docs/web/index.html/html/body/div/div/pre = {category: 'APP_FROZEN', desc:'APP is frozen, please login Maximtop Console for more details.'}
docs/web/index.html/html/body/div/div/pre = {category: 'LICENSE', desc:'Invalid LICENSE, please make sure service is paid on time.'}
docs/web/index.html/html/body/div/div/pre = {category: 'LICENSE', desc:'LICENSE user limit reached, please purchase higher service package.'}
docs/web/index.html/html/body/div/div/pre = {category: 'DNS_FAILED', desc: dnsServer } // DNS error: unaccessible
docs/web/index.html/html/body/div/div/p = 3. Login failed
docs/web/index.html/html/body/div/div/pre = Event name: loginFail
docs/web/index.html/html/body/div/div/pre = Event content: (desc) description of failure cause
docs/web/index.html/html/body/div/div/p = 4. Login succeeded
docs/web/index.html/html/body/div/div/pre = Event name：loginSuccess
docs/web/index.html/html/body/div/div/pre = Event content：({})
docs/web/index.html/html/body/div/div/p = 5. Group list update
docs/web/index.html/html/body/div/div/pre = Event name：onGroupListUpdate
docs/web/index.html/html/body/div/div/pre = Event content：()
docs/web/index.html/html/body/div/div/p = 6. Group member list update
docs/web/index.html/html/body/div/div/pre = Event name：onGroupMemberChanged
docs/web/index.html/html/body/div/div/pre = Event content: (groupId) group ID
docs/web/index.html/html/body/div/div/p = 7. Group message received
docs/web/index.html/html/body/div/div/pre = Event name: onGroupMessage
docs/web/index.html/html/body/div/div/pre = Event content: (meta) Message content
docs/web/index.html/html/body/div/div/p = 8. The other party is typing
docs/web/index.html/html/body/div/div/pre = Event name: onInputStateMessage
docs/web/index.html/html/body/div/div/pre = Event content: ({ext,from,to})  ext:extension field from: sender’s user ID to: receiver’s user ID
docs/web/index.html/html/body/div/div/p = 9. Group @message received
docs/web/index.html/html/body/div/div/pre = Event name: onMentionMessage
docs/web/index.html/html/body/div/div/p = 10. Message re-unread
docs/web/index.html/html/body/div/div/pre = Event name: onMessageCanceled
docs/web/index.html/html/body/div/div/pre = Event content: ({uid,mid})  uid: session ID， mid: message ID
docs/web/index.html/html/body/div/div/p = 11. Message deleted
docs/web/index.html/html/body/div/div/pre = Event name: onMessageDeleted
docs/web/index.html/html/body/div/div/p = 12. Message revoked
docs/web/index.html/html/body/div/div/pre = Event name: onMessageRecalled
docs/web/index.html/html/body/div/div/p = 13. Message status change: revoked/deleted/read
docs/web/index.html/html/body/div/div/pre = Event name: onMessageStateChanged
docs/web/index.html/html/body/div/div/p = 14. Message history received
docs/web/index.html/html/body/div/div/pre = Event name: onReceiveHistoryMsg
docs/web/index.html/html/body/div/div/pre = Event content: ({next})  next: Get message history key next time
docs/web/index.html/html/body/div/div/p = 15. Friend information changed
docs/web/index.html/html/body/div/div/pre = Event name: onRosterInfoUpdate
docs/web/index.html/html/body/div/div/pre = Event content: (rosterIds)  rosterIds: List of friends’ user ids
docs/web/index.html/html/body/div/div/p = 16. Friend list changed
docs/web/index.html/html/body/div/div/pre = Event name: onRosterListUpdate
docs/web/index.html/html/body/div/div/pre = Event content: (meta) Message content of friend notification
docs/web/index.html/html/body/div/div/p = 17. Single chat received
docs/web/index.html/html/body/div/div/pre = Event name: onRosterMessage
docs/web/index.html/html/body/div/div/p = 18. Message sending status changed
docs/web/index.html/html/body/div/div/pre = Event name: onSendingMessageStateChanged
docs/web/index.html/html/body/div/div/pre = Event content: ({state,mid})  state: sending status, valued as sending|failed|sent， mid: client_mid generated by client
docs/web/index.html/html/body/div/div/p = 19. Number of unreads changed
docs/web/index.html/html/body/div/div/pre = Event name: onUnreadChange
docs/web/index.html/html/body/div/div/pre = Event content: (cid)  session ID
docs/web/index.html/html/body/div/div/p = 20. Recent session updated
docs/web/index.html/html/body/div/div/pre = Event name: recentlistUpdate
docs/web/index.html/html/body/div/div/pre = Event content: ()
docs/web/index.html/html/body/div/div/p = 21. Group creation notification
docs/web/index.html/html/body/div/div/pre = Event name: onGroupCreated
docs/web/index.html/html/body/div/div/pre = Event content: (meta) Content of group notification
docs/web/index.html/html/body/div/div/p = 22. Group dissolution notification
docs/web/index.html/html/body/div/div/pre = Event name: onGroupDestoryed
docs/web/index.html/html/body/div/div/p = 23. Notification of group membership
docs/web/index.html/html/body/div/div/pre = Event name: onGroupJoined
docs/web/index.html/html/body/div/div/p = 24. Group application approved
docs/web/index.html/html/body/div/div/pre = Event name: onGroupApplyAccepted
docs/web/index.html/html/body/div/div/p = 25. Group application rejected
docs/web/index.html/html/body/div/div/pre = Event name: onGroupApplyDeclined
docs/web/index.html/html/body/div/div/p = 26. Banned in group
docs/web/index.html/html/body/div/div/pre = Event name: onGroupBaned
docs/web/index.html/html/body/div/div/p = 27. Unbanned in group
docs/web/index.html/html/body/div/div/pre = Event name: onGroupUnbaned
js/index.js/script =   // Set tabs + click
js/index.js/script = 'One-Click  Instant Messaging  Public Cloud'
js/index.js/script = 'Maximtop has open sourced 153,277 lines of code'
js/index.js/script = 'One-Click  Instant Messaging  Proprietary Cloud'
js/index.js/script = 'The Only IM Private Cloud on Alicloud Marketplace'
js/index.js/script = 'Maximtop Open Source（MTOS）2021.08.12'
js/index.js/script = 'Purchasing Alicloud Host, Matching Maximtop Image'
docs/xxx = "Registered"
trans/xxxx = Number of uploading/downloading files
trans/xxxx = Number of files in transfer
trans/xxxx = Message list obtained by pull
trans/xxxx = Send delivery receipt
trans/xxxx = Number of uploading/downloading files
trans/xxxx = Message that need to send a delivery receipt
trans/xxxx = Number of files
trans/xxxx = Expiration time of banning all group members
trans/xxxx = Ban all members
trans/xxxx = Unban all members
trans/xxxx = Modified group shared file name
trans/xxxx = Ban all members, the expiration time is calculated from the current server time plus banning duration (only Admins and group Owner can speak in the duration)
trans/xxxx = Unban all members
trans/xxxx = Banning duration (minute)
trans/xxxx = Get username of message sender
trans/xxxx = Register BMXChatService to which BMXChatServiceListener is bound (automatic registration in SDK)
trans/xxxx = Set username
trans/xxxx = Get username
trans/xxxx = Register BMXPushService to which BMXPushServiceListener is bound (automatic registration in SDK)
trans/xxxx = Register BMXRosterService to which BMXRosterServiceListener is bound (automatic registration in SDK)
trans/xxxx = Whether the config sends message carrying
trans/xxxx = Set whether the config sends message carrying username
trans/xxxx = Set the unique ID of the device, which should always be consistent before the app is uninstalled. Different device IDs can be generated when the app is deleted and installed again.
trans/xxxx = Get the local database encryption key for the device.
trans/xxxx = Set the encryption key of the local database, which should always be kept until the app is uninstalled, and a different key can be generated when the app is deleted and installed again. Used for local database encryption.
trans/xxxx = Register BMXGroupService to which BMXGroupServiceListener is bound (automatic registration in SDK)
trans/xxxx = Set whether the config sends message carrying username
trans/xxxx = Local database encryption key
trans/xxxx = Register BMXUserService to which BMXUserServiceListener is bound (automatic registration in SDK)
trans/xxxx = Environment variable
trans/xxxx = Default environment
trans/xxxx = Parameter name
trans/xxxx = Field value
trans/xxxx = Contact
trans/xxxx = URL
trans/xxxx = Document version
trans/xxxx = Expiration time (second), during which only Admins are allowed to send messages, 0 or less than the current time means no banning, -1 means banned permanently
trans/xxxx = Ban all members, only Admins can send messages
trans/xxxx = Expiration time of banning all members
trans/xxxx = Unban all members
trans/xxxx = Request ID, which is used for message deduplication. If two requests with the same transaction_id are received in a short time, the second request will not be executed. No deduplication when request ID is not set.
trans/xxxx = Notification distribution strategy: combined- means to use Lanying channel to distribute first, and if Lanying is not online, use vendor channel to distribute; Mxpush_only- indicates that only the Lanying channel is used for distribution; Ospush_only- indicates that only the vendor channel is used for distribution. Can be empty, which defaults to combined
trans/xxxx = Vendor push priority: ups - domestic vendors (Xiaomi/Huawei/Meizu/oppo/vivo); fcm - FCM push; Huawei - Huawei push; Xiaomi - Xiaomi push; Oppo - OPPO push; Vivo - Vivo push, Meizu - Meizu push. Can be empty, which defaults to [ups, fcm]
trans/xxxx = Large text: If this field is set and the vendor supports pushing large text, use this field to push large text; Otherwise, use the body field to push ordinary text
trans/xxxx = Subtitle corresponding to APNs, can be empty
trans/xxxx = apns-collapse-id corresponding to APNs, can be empty. The notifications with apns-collapse-id parameter will override other notifications with the same apns-collapse-id in the Notification Center.
trans/xxxx = Task ID
trans/xxxx = Query push stats
trans/xxxx = Delivery number on APNs channel
trans/xxxx = Sent number on APNs channel
trans/xxxx = Valid target number on APNs channel
trans/xxxx = Delivery number on FCM channel
trans/xxxx = Sent number on FCM channel
trans/xxxx = Valid target number on FCM channel
trans/xxxx = Delivery number on Meizu channel
trans/xxxx = Sent number on Meizu channel
trans/xxxx = Valid target number on Meizu channel
trans/xxxx = Delivery number on Huawei channel
trans/xxxx = Sent number on Huawei channel
trans/xxxx = Valid target number on Huawei channel
trans/xxxx = Delivery number on Lanying channel
trans/xxxx = Sent number on Lanying channel
trans/xxxx = Valid target number on Lanying channel
trans/xxxx = Delivery number on oppo channel
trans/xxxx = Sent number on oppo channel
trans/xxxx = Valid target number on oppo channel
trans/xxxx = Delivery number on vivo channel
trans/xxxx = Sent number on vivo channel
trans/xxxx = Valid target number on vivo channel
trans/xxxx = Delivery number on Xiaomi channel
trans/xxxx = Sent number on Xiaomi channel
trans/xxxx = Valid target number on Xiaomi channel
trans/xxxx = Push task ID
trans/xxxx = Banned user
trans/xxxx = Unbanned user
trans/xxxx = Query user online status
trans/xxxx = User online info
trans/xxxx = Online or not: true – online, false - offline
trans/xxxx = Application server
trans/xxxx = Maximtop IM Cloud
trans/xxxx = Third-party services
trans/xxxx = Callback server
trans/xxxx = Friendship service
trans/xxxx = User info service
trans/xxxx = Real-time callback notification
trans/xxxx = Data synchronization
trans/xxxx = Message subscription service
trans/xxxx = API service
trans/xxxx = IM service
trans/xxxx = Notify vendor to push
trans/xxxx = Anti-spam check
trans/xxxx = Mobile vendor’s push service
trans/xxxx = Content security service
trans/xxxx = Mobile push notification
trans/xxxx = Send a message
trans/xxxx = Persistent connection in TCP
trans/xxxx = APP
trans/xxxx = Real-time synchronization and smooth migration for Proprietary Cloud data
trans/xxxx = Real-time check and configure at will in Private Cloud (optional)
trans/xxxx = Online service
trans/xxxx = Live broadcast room
trans/xxxx = APP social
trans/xxxx = Online education
add/xxxx = One-click IM Cloud Service Based on Mutil-Cloud Architecture
add/xxxx = (
add/xxxx = )
add/xxxx = '
add/xxxx = -
add/xxxx = :
add/xxxx = ,
add/xxxx = .
add/xxxx = Request Header
add/xxxx = Query Param
add/xxxx = Request Body
add/xxxx = Response Body
add/xxxx = Response data format
add/xxxx = Interface Description
add/xxxx = Parameter name
add/xxxx = Default
add/xxxx = Type
add/xxxx = Data Type
add/xxxx = Not null
add/20220228-1 = flooim object
add/20220228-1 = SDK initialization settings
add/20220228-1 = Whether the connection address is prefixed with ws/wss: ture – the connection address is prefixed with ws or wss; false – the connection address is prefixed with http/https
add/20220228-1 = Whether to login automatically
add/20220228-1 = DNS server address, can be empty, default https://dns.maximtop.com/v2/app_dns
add/20220228-1 = Login with user ID and password
add/20220228-1 = Logged in or not
add/20220228-1 = Event listening
add/20220228-1 = Can be event name, and also event name plus event callback
add/20220228-1 = Event callback, only required if options is set as event name
add/20220228-1 = Log out
add/20220228-1 = Group management
add/20220228-1 = Group info
add/20220228-1 = Whether to force pull from server: true - pull from server, false - prefer to pull from local storage
add/20220228-1 = Whether to force pull from server: true - pull from server, false - pull from local storage
add/20220228-1 = Group ID list
add/20220228-1 = Open group, this method will prepare some necessary information for the group chat screen.
add/20220228-1 = Group details
add/20220228-1 = List of group members
add/20220228-1 = List of group details
add/20220228-1 = List of group messages
add/20220228-1 = List of group admins
add/20220228-1 = List of results
add/20220228-1 = Group announcement details
add/20220228-1 = Announcement ID
add/20220228-1 = List of group announcement details
add/20220228-1 = Request parameters
add/20220228-1 = Update group extension information
add/20220228-1 = Get group ban list
add/20220228-1 = List of banned members
add/20220228-1 = List of request results
add/20220228-1 = Group settings
add/20220228-1 = Enable or disable group message read feature: false - disabled, true - enabled
add/20220228-1 = Set whether the group history is visible: false - not visible, true - visible
add/20220228-1 = Results
add/20220228-1 = User ID of the new group owner
add/20220228-1 = List of group IDs
add/20220228-1 = Empty object
add/20220228-1 = Approval result: true for agree, false for reject
add/20220228-1 = List of group invitations
add/20220228-1 = Process group invitations
add/20220228-1 = New user profile
add/20220228-1 = List of group applications
add/20220228-1 = List of groups
add/20220228-1 = List of group files
add/20220228-1 = List of file IDs
add/20220228-1 = Friend management
add/20220228-1 = List of user IDs
add/20220228-1 = Friend info
add/20220228-1 = User settings
add/20220228-1 = Request results
add/20220228-1 = Friend’s user ID
add/20220228-1 = List of user details
add/20220228-1 = Get all cached user details
add/20220228-1 = Get your own user info
add/20220228-1 = Get chat messages based-on session ID
add/20220228-1 = List of chat messages
add/20220228-1 = Modify message status to read
add/20220228-1 = Get the number of unread messages for a given conversation
add/20220228-1 = Get from where: you can pass an empty string to get from the beginning
add/20220228-1 = Modify the Friend extension field
add/20220228-1 = Message ID generated by client
add/20220228-1 = Message body
add/20220228-1 = Receiver ID
add/20220228-1 = Message types: text, image, audio, video, file, location, command, forward
add/20220228-1 = Attachment info
add/20220228-1 = Send message body
add/20220228-1 = Message ID: the message to pull forward from, 0 means pulling from the latest message.
add/20220228-1 = Number of messages to pull
add/20220228-1 = Whether to @ everyone
add/20220228-1 = List of @member IDs
add/20220228-1 = Display content of @messages
add/20220228-1 = Push content of @messages
add/20220228-1 = Sender’s nickname
add/20220228-1 = Status: nothing – no typing, typing - typing
add/20220228-1 = Receiver’s user ID (set only when forwarding a shingle chat)
add/20220228-1 = Receiver’s group ID (set only when forwarding a group chat)
add/20220228-1 = Get message status
add/20220228-1 = Message status: unread, delivered, read
add/20220228-1 = Whether it is a group chat
add/20220228-1 = File uploading result
add/20220228-1 = Receiver types: rosterAvatar - user avatar, chat - chat file, groupAvatar - group avatar
add/20220228-1 = File types: file - general chat file, audio - voice chat file (amr format), image - image chat file, video - video chat file, audio-mp3 - voice chat file (mp3 format), shareFile - general shared file, shareAudio - voice shared file, shareImage - image shared files, shareVideo - video shared files
add/20220228-1 = Chat types: roster – single chat, group – group chat
add/20220228-1 = Types: roster – user, group - group
add/20220228-1 = Thumbnail or not: true by default
add/20220228-1 = Default image address
add/20220228-1 = Whether to delete conversations on other devices at the same time
add/20220228-1 = File uploading info
add/20220228-1 = File types: 100 - general chat file, 101 - voice chat file (amr format), 102 - image chat file, 103 - video chat file, 104 - voice chat file (mp3 format) 200 - general shared file, 201 - voice shared file, 202 - image shared file, 203 - video shared file
add/20220228-1 = Conversation types: 1 – user, 2 – group
add/20220228-1 = Types
add/20220228-1 = Login failed
add/20220228-1 = Login successful
add/20220228-1 = Group list updated
add/20220228-1 = Notification message content
add/20220228-1 = Group member list updated
add/20220228-1 = Group message received
add/20220228-1 = The other party is typing
add/20220228-1 = Sender’s user ID
add/20220228-1 = Receiver’s user ID
add/20220228-1 = Group @message received
add/20220228-1 = Message is re-unread
add/20220228-1 = Message is withdrawn
add/20220228-1 = Message status changed: withdrawn/deleted/read
add/20220228-1 = Message history received
add/20220228-1 = The key to get message history next time
add/20220228-1 = Friend info changed
add/20220228-1 = Friend’s user ID list
add/20220228-1 = Friend list changed
add/20220228-1 = Message content of friend’s notification
add/20220228-1 = Single chat message received
add/20220228-1 = Message sending status changed
add/20220228-1 = Sending status, can be valued as sending|failed|sent
add/20220228-1 = client_mid generated by client
add/20220228-1 = Unread count changed
add/20220228-1 = Latest conversation updated
add/20220228-1 = Group creation notification
add/20220228-1 = Message content of group notification
add/20220228-1 = Group dismissal notification
add/20220228-1 = Member joining application notification
add/20220228-1 = Group joining application approved
add/20220228-1 = Group joining application rejected
add/20220228-1 = Banned in group
add/20220228-1 = Unbanned in group
add/20220228-1 = Relationships: 0 - Friend, 1 - Deleted, 2 - Stranger
add/20220228-1 = Sender
add/20220228-1 = Receiver
add/20220228-1 = Message status: 0 - Unread, 1 - Delivered, 2 - Read
add/20220228-1 = Message delivery timestamp (milliseconds)
add/20220228-1 = Receiver types: roster - friend, group - group
add/20220228-1 = Status: 0 - Awaiting confirmation, 1 - Approved, 2 - Rejected
add/20220228-1 = Group member invite settings: false - do not allow invitations, true - allow invitations (default)
add/20220228-1 = Group members modify group info settings: false - group members can't modify group info (default), true - group members can modify group info
add/20220228-1 = Group message blocking mode: 0 - no blocking, 1 - blocking local message notifications, 2 - blocking all, means not receiving messages
add/20220228-1 = Group message push mode: 0 - receive all pushes, 1 – block all pushes, 2 - receive admin and @message pushes, 3 - receive admin message pushes only, 4 - receive @message pushes only
add/20220228-1 = Group types: 1 – public group, 0 – private group, 2 – chatroom
add/20220228-1 = Number of group members
add/20220228-1 = Banned members
add/20220228-1 = Group user’s request result
add/20220228-1 = Reason
add/20220228-1 = Ban request
add/20220228-1 = Group blacklist
add/20220228-1 = Group invitation info
add/20220228-1 = Inviter ID
add/20220228-1 = Invitee ID
add/20220228-1 = Status: 0 - Pending, 1 - User agreed, 2 - User rejected
add/20220228-1 = Applicant ID
add/20220228-1 = Status: 0 - Pending, 1 - Agreed, 2 - Rejected
add/20220228-1 = Result of group shared files deletion
add/20220228-1 = Result of banning all members
add/20220228-1 = Additional parameters
add/20220228-1 = Upload address
add/20220228-1 = Progress
add/20220228-1 = Downloaded bytes
add/20220228-1 = Download address
add/20220228-1 = Total bytes
add/20220228-1 = Conversation info
add/20220228-1 = Set ID
add/20220228-1 = Listening event name
add/20220228-1 = Listening event callback
add/20220228-1 = Event result
add/20220228-1 = User’s token
add/20220228-1 = Get list of recent conversations
add/20220228-1 = Updated settings
add/20220228-1 = Process user’s group joining application
add/20220228-1 = Group details
extra = Server API
i = Image height
i = Image width
i = OSS parameters to be set when uploading
i = Upload method: POST/PUT
i = Error message
i = Operation result: success/fail
i = Result: success/fail
i = milliseconds
i = Cursor
i = where to start fetching
i = How many to fetch
i = How many to fetch
i = How many to fetch
i = Update time
i = Creation time
i = Version
i = Applicant's User ID
i = Application Expiration Timestamp
i = Group type: 0 - private group, 2 - chatroom
i = Group type: 0 - private group, 2 - chatroom
i = Current count of group member
i = New members can see chat history
i = New members invisible chat history
i = Whether to allow group members to invite others into the group
i = Group members are allowed to invite others into the group
i = Group members are not allowed to invite others into the group
i = Group members modify group information settings
i = Allow group members to modify group information
i = Do not allow group members to modify group information
i = Group message blocking mode: 0 - not blocking, 1 - blocking local message notifications, 2 - blocking messages, not receiving messages
i = Group message push mode: 0 - receive all pushes, 1 - not accept pushes, 2 - receive admin and @message pushes, 3 - only receive admin pushes, 4 - only receive @message pushes
i = Whether to enable the read function of group messages: true - enable the read function of group messages, false - disable the read function of group messages
i = Deprecated
i = It can be obtained by GET /group/qrcode/sign
i = Device serial number
i = From which message to start pulling forward: use 0 for the latest message
i = Whether it is the last message: true - there are no more messages to follow, false - there are more messages to follow
i = Message list
i = Message attachment: When the message type is image/voice/video/file, this field will include the file url
i = Extension fields used by the SDK layer
i = Message Content Type: TEXT - Text, IMAGE - Image, AUDIO - Voice, VIDEO - Video, FILE - File, LOCATION - Location, COMMAND - Custom, FORWARD - Forward Message
i = Message status: UNREAD - unread, DELIVERED - delivered, READ - read
i = the message ID that needs to be set to pull the messages: Set this message ID to msg_id_start of the request parameter to continue to pull the message
i = Attachment: This field needs to be set if the message type is image/voice/video/file.
i = Extension fields used by the SDK
i = List of task IDs
i = Consent user ID
i = list of failure messages
i = List of successful user IDs
i = Where to start fetching
i = Status: 0 - waiting for confirmation, 1 - accepted, 2 - rejected
i = Mute message notification: true - mute message notification, false - do not mute message notification
i = Relationships: 0 - friend, 1 - deleted friend, 2 - stranger, 3 - blacklist
i = Friends ID list
i = The access-token when calling the API
i = New password
i = Old password
i = interface
i = Administrator change password
i = Delete users
i = User password: if it is a user TOKEN, this field needs to be set; if it is an administrator TOKEN, it does not need to be set
i = Whether to automatically download thumbnails: true - yes, false - no
i = Not set means kick all devices
i = List all users under the APP
i = Number of pages
i = must be greater than
i = default is 
i = Size per page
i = 50 per page by default
i = 0-normal, 1-ban
i = 0-normal, 1-ban
i = Whether to close push: true - close push, false - not close push
i = Whether to close push details: true - close push details, false - do not close push details
i = Whether to push details: true - push details, false - don't push details
i = Whether to turn off push messages: true - turn off push messages, false - do not turn off push messages
i = Push DND end hour
i = Push DND start hour
i = List of tags
i = Whether to automatically download: true - automatic download, false - no automatic download
i = Hour
i = Whether to mute when a message is received: true - mute, false - not mute
i = Whether to vibrate when a message is received: true - vibrate, false - not vibrate
i = Whether to turn off the sound reminder: true - turn off the sound reminder, false - do not turn off the sound reminder
i = Whether to vibrate: true-vibrate, false-no vibration
i = DNS server address, can be empty, default https://dns.lanyingim.com/v2/app_dns
i = The uniapp version needs to be set to true, the web version needs to be set to false
i = Get group member ids (asynchronous)
i = List of group member ids
i = APP is frozen, please login Lanying IM Console for more details.
i = Friend application received
i = Message content of friend's application
i = Member join time,int64
i = Get device serial number
i = Bind push device
i = Bind request
i = Unbind push device
i = Unbind request
i = The certificate name, that is, the name set when uploading the certificate in the LanyingIM Console.
i = Push device token
i = Notes
i = Basic user information
i = Registration Information List
i = Can be empty, the type is JSONObject, for example
i = User and device
i = Unread conversations
i = LANYING.IM - Professional SDK, Monthly Charged Private Cloud
i = set log level
i = The log level of the SDK, the default is debug, and the value can be debug, info, warn, error or off, where off means no log is printed.
statistics = total:48488 duplicate:115486