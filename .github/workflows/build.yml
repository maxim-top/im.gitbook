name: Build and Deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    concurrency:
      group: build-lock
      cancel-in-progress: true

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: 'true'

    - run: git tag --list

    - name: Install moreutils
      run: |
        sudo apt-get update
        sudo apt-get install -y moreutils

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '10'
    
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Install Joern
      run: |
        cd
        wget https://github.com/joernio/joern/releases/latest/download/joern-install.sh
        chmod +x ./joern-install.sh
        sudo ./joern-install.sh --version=v1.1.1108
        which joern
        joern --help

    - name: Install gitbook
      run: |
        cd
        npm install gitbook-cli -g
        gitbook init

    - name: Install GitBook Deps
      run: |
        cd ${{ github.workspace }}
        gitbook install

    - name: Build GitBook
      run: |
        cd ${{ github.workspace }}
        mkdir -p ../cache
        set -o pipefail
        gitbook build --log=debug --debug  | ts '[%Y-%m-%d %H:%M:%S]'

    - name: Format output
      run: |
        cd ${{ github.workspace }}
        make refine

    - name: create book.tar.gz
      run: tar czf book.tar.gz _book

    - name: Determine last tag
      id: last_tag_commit
      run: |
        set -x
        # 获取最后一个标签
        LAST_TAG=$(git describe --tags --abbrev=0 || echo '1.0.0')
        
        # 获取最后一个提交的哈希
        COMMIT_HASH=$(git rev-parse HEAD)
        COMMIT_HASH_SHORT=$(git rev-parse --short HEAD)

        # 解析主版本号
        MAJOR_VERSION=$(echo $LAST_TAG | cut -d. -f1)
        
        # 解析次版本号
        MINOR_VERSION=$(echo $LAST_TAG | cut -d. -f2)
        
        # 解析修订号
        PATCH_VERSION=$(echo $LAST_TAG | cut -d. -f3)
        
        # 增加修订号
        NEW_PATCH_VERSION=$((PATCH_VERSION + 1))
        
        # 创建新标签
        NEW_TAG="${MAJOR_VERSION}.${MINOR_VERSION}.${NEW_PATCH_VERSION}.${COMMIT_HASH_SHORT}"
        echo "NEW_TAG=${NEW_TAG}" >> $GITHUB_ENV
        echo "COMMIT_HASH=${COMMIT_HASH}" >> $GITHUB_ENV

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "book.tar.gz"
        tag: ${{ env.NEW_TAG }}
        commit: ${{ env.COMMIT_HASH }}

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Upload to OSS
      uses: maxim-top/upload-to-oss@1.0.0
      with:
        # Use Access Key
        access-key-id: ${{ secrets.ALIYUN_ACCESS_KEY_ID }}
        access-key-secret: ${{ secrets.ALIYUN_ACCESS_KEY_SECRET }}
        bucket: ${{ secrets.ALIYUN_OSS_BUCKET }}
        endpoint: ${{ secrets.ALIYUN_OSS_ENDPOINT }}

        # Upload the built website files in "dist" directory to remote "my-website/" prefix
        local-path: _book
        remote-path: /

        # Upload ALL other files before uploading HTML files
        delay-html-file-upload: true

        # Prevent deleting missing remote files compared to local (defaults to `false`)
        no-delete-remote-files: true

        # Retry 5 times on failure of each OSS operation
        retry: 5

        concurrency: 5

        # Use increment or not
        increment: true

    - name: CDN Refresh docs.lanyingim.com
      uses: maxim-top/ali-cdn-refresh@1.0.0
      with:
          accessKeyId: ${{ secrets.ALIYUN_ACCESS_KEY_ID }}
          accessKeySecret: ${{ secrets.ALIYUN_ACCESS_KEY_SECRET }}
          type: Directory
          path: ${{ secrets.ALIYUN_CDN_PATH }}

    - name: CDN Refresh www.chatai101.com
      uses: maxim-top/ali-cdn-refresh@1.0.0
      with:
          accessKeyId: ${{ secrets.ALIYUN_ACCESS_KEY_ID }}
          accessKeySecret: ${{ secrets.ALIYUN_ACCESS_KEY_SECRET }}
          type: Directory
          path: "https://www.chatai101.com/"

    - name: CDN Refresh chatai101.com
      uses: maxim-top/ali-cdn-refresh@1.0.0
      with:
          accessKeyId: ${{ secrets.ALIYUN_ACCESS_KEY_ID }}
          accessKeySecret: ${{ secrets.ALIYUN_ACCESS_KEY_SECRET }}
          type: Directory
          path: "https://chatai101.com/"

    - name: Call grow ai to deploy
      run: |
        curl -X POST 'https://connector.lanyingim.com/grow_ai/release_finish' \
        -H "Content-Type: application/json" \
        -d '{"status": "ok", "repository": "${{ github.repository }}", "release": "${{ env.NEW_TAG }}"}'
